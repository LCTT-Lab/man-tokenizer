[
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" %%%LICENSE_START(PUBLIC_DOMAIN)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" This is in the public domain"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" %%%LICENSE_END"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TH",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD.SO 8 2018-04-30 \"GNU\" \"Linux Programmer's Manual\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " NAME"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "ld.so, ld"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "linux.so "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": " dynamic linker/loader"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " SYNOPSIS"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The dynamic linker can be run either indirectly by running some"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "dynamically linked program or shared object"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(in which case no command-line options"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to the dynamic linker can be passed and, in the ELF case, the dynamic linker"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "which is stored in the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " .interp"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "section of the program is executed) or directly by running:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /lib/ld"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "linux.so.*"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "[OPTIONS] [PROGRAM [ARGUMENTS]]"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " DESCRIPTION"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The programs"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ld.so"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ld"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "linux.so*"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "find and load the shared objects (shared libraries) needed by a program,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "prepare the program to run, and then run it."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Linux binaries require dynamic linking (linking at run time)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "unless the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "static"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "option was given to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ld (1)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "during compilation."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The program"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ld.so"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "handles a.out binaries, a format used long ago;"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ld"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "linux.so*"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "("
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "I/lib/ld"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "linux.so.1"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P for libc5, "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "I/lib/ld"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "linux.so.2"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P for glibc2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "handles ELF,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "which everybody has been using for years now."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Otherwise, both have the same behavior, and use the same"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "support files and programs as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ldd (1),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ldconfig (8),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /etc/ld.so.conf ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "When resolving shared object dependencies,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the dynamic linker first inspects each dependency"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "string to see if it contains a slash (this can occur if"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "a shared object pathname containing slashes was specified at link time)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If a slash is found, then the dependency string is interpreted as"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "a (relative or absolute) pathname,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and the shared object is loaded using that pathname."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If a shared object dependency does not contain a slash,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "then it is searched for in the following order:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " o 3"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Using the directories specified in the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "DT_RPATH dynamic section attribute"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "of the binary if present and DT_RUNPATH attribute does not exist."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Use of DT_RPATH is deprecated."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " o"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Using the environment variable"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_LIBRARY_PATH ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "unless the executable is being run in secure-execution mode (see below),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in which case this variable is ignored."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " o"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Using the directories specified in the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "DT_RUNPATH dynamic section attribute"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "of the binary if present."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Such directories are searched only to"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "find those objects required by DT_NEEDED (direct dependencies) entries"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and do not apply to those objects' children,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "which must themselves have their own DT_RUNPATH entries."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This is unlike DT_RPATH, which is applied"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to searches for all children in the dependency tree."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " o"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "From the cache file"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /etc/ld.so.cache ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "which contains a compiled list of candidate shared objects previously found"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in the augmented library path."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If, however, the binary was linked with the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "z nodeflib"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "linker option, shared objects in the default paths are skipped."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Shared objects installed in hardware capability directories (see below)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are preferred to other shared objects."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " o"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "In the default path"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /lib ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and then"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /usr/lib ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(On some 64-bit architectures, the default paths for 64-bit shared objects are"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /lib64 ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and then"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /usr/lib64 .)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the binary was linked with the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "z nodeflib"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "linker option, this step is skipped."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Rpath token expansion"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The dynamic linker"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "understands certain token strings in an rpath specification"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(DT_RPATH or DT_RUNPATH)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Those strings are substituted as follows:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " $ORIGIN \" (or equivalently \" ${ORIGIN} )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This expands to"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the directory containing the program or shared object."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Thus, an application located in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " somedir/app"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "could be compiled with"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    gcc "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "Wl,"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "rpath,"
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": "$ORIGIN/../lib"
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "so that it finds an associated shared object in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " somedir/lib"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "no matter where"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " somedir"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is located in the directory hierarchy."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This facilitates the creation of \"turn-key\" applications that"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "do not need to be installed into special directories,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "but can instead be unpacked into any directory"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and still find their own shared objects."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " $LIB \" (or equivalently \" ${LIB} )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This expands to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " lib"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " lib64"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "depending on the architecture"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(e.g., on x86-64, it expands to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " lib64"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "on x86-32, it expands to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " lib )."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " $PLATFORM \" (or equivalently \" ${PLATFORM} )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This expands to a string corresponding to the processor type"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "of the host system (e.g., \"x86_64\")."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "On some architectures, the Linux kernel doesn't provide a platform"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "string to the dynamic linker."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The value of this string is taken from the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " AT_PLATFORM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "value in the auxiliary vector (see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " getauxval (3))."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" To get an idea of the places that $PLATFORM would match,"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" look at the output of the following:"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     mkdir /tmp/d"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     LD_LIBRARY_PATH=/tmp/d strace -e open /bin/date 2>&1 | grep /tmp/d"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" ld.so lets names be abbreviated, so $O will work for $ORIGIN;"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Don't do this!!"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " OPTIONS"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "list"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "List all dependencies and how they are resolved."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "verify"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Verify that program is dynamically linked and this dynamic linker can handle"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "it."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "inhibit"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "cache"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Do not use"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /etc/ld.so.cache ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".BI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "library"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "path \" path\""
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Use"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " path"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "instead of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_LIBRARY_PATH"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "environment variable setting (see below)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The names"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ORIGIN ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LIB ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PLATFORM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are interpreted as for the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_LIBRARY_PATH"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "environment variable."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".BI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "inhibit"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "rpath \" list\""
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Ignore RPATH and RUNPATH information in object names in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " list ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This option is ignored when running in secure-execution mode (see below)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".BI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "audit \" list\""
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Use objects named in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " list"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "as auditors."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " ENVIRONMENT"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Various environment variables influence the operation of the dynamic linker."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Secure-execution mode"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "For security reasons,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the effects of some environment variables are voided or modified if"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the dynamic linker determines that the binary should be"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "run in secure-execution mode."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(For details, see the discussion of individual environment variables below.)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A binary is executed in secure-execution mode if the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " AT_SECURE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "entry in the auxiliary vector (see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " getauxval (3))"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "has a nonzero value."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This entry may have a nonzero value for various reasons, including:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " * 3"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The process's real and effective user IDs differ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or the real and effective group IDs differ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This typically occurs as a result of executing"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "a set-user-ID or set-group-ID program."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "A process with a non-root user ID executed a binary that"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "conferred capabilities to the process."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "A nonzero value may have been set by a Linux Security Module."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Environment variables"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Among the more important environment variables are the following:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_ASSUME_KERNEL \" (since glibc 2.2.3)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Each shared object can inform the dynamic linker of the minimum kernel ABI"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "version that it requires."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(This requirement is encoded in an ELF note section that is viewable via"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"readelf"
        },
        {
          "type": "ESCAPE",
          "content": "\\ "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "n\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "as a section labeled"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_GNU_ABI_TAG .)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "At run time,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the dynamic linker determines the ABI version of the running kernel and"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "will reject loading shared objects that specify minimum ABI versions"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "that exceed that ABI version."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_ASSUME_KERNEL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "can be used to"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "cause the dynamic linker to assume that it is running on a system with"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "a different kernel ABI version."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For example, the following command line causes the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "dynamic linker to assume it is running on Linux 2.2.5 when loading"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the shared objects required by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " myprog :"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "$ "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "BLD_ASSUME_KERNEL=2.2.5 ./myprog"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "On systems that provide multiple versions of a shared object"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(in different directories in the search path) that have"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "different minimum kernel ABI version requirements,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_ASSUME_KERNEL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "can be used to select the version of the object that is used"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(dependent on the directory search order)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Historically, the most common use of the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_ASSUME_KERNEL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "feature was to manually select the older"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "LinuxThreads POSIX threads implementation on systems that provided both"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "LinuxThreads and NPTL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(which latter was typically the default on such systems);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthreads (7)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_BIND_NOW \" (since glibc 2.1.1)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If set to a nonempty string,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "causes the dynamic linker to resolve all symbols"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "at program startup instead of deferring function call resolution to the point"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "when they are first referenced."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This is useful when using a debugger."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_LIBRARY_PATH"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A list of directories in which to search for"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ELF libraries at execution time."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The items in the list are separated by either colons or semicolons,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and there is no support for escaping either separator."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "This variable is ignored in secure-execution mode."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Within the pathnames specified in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_LIBRARY_PATH ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the dynamic linker expands the tokens"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " $ORIGIN ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " $LIB ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " $PLATFORM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(or the versions using curly braces around the names)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "as described above in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"Rpath token expansion\" ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Thus, for example,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the following would cause a library to be searched for in either the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " lib"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " lib64"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "subdirectory below the directory containing the program to be executed:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "$ "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "BLD_LIBRARY_PATH='$ORIGIN/$LIB' prog"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "(Note the use of single quotes, which prevent expansion of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " $ORIGIN"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " $LIB"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "as shell variables!)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_PRELOAD"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A list of additional, user-specified, ELF shared"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "objects to be loaded before all others."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The items of the list can be separated by spaces or colons,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and there is no support for escaping either separator."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This can be used to selectively override functions in other shared objects."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The objects are searched for using the rules given under DESCRIPTION."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "In secure-execution mode,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "preload pathnames containing slashes are ignored."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Furthermore, shared objects are preloaded only"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "from the standard search directories and only"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "if they have set-user-ID mode bit enabled (which is not typical)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Within the names specified in the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_PRELOAD"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "list, the dynamic linker understands the tokens"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " $ORIGIN ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " $LIB ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " $PLATFORM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(or the versions using curly braces around the names)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "as described above in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"Rpath token expansion\" ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(See also the discussion of quoting under the description of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_LIBRARY_PATH .)"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Tested with the following:"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tLD_PRELOAD='$LIB/libmod.so' LD_LIBRARY_PATH=. ./prog"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" which will preload the libmod.so in 'lib' or 'lib64', using it"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" in preference to the version in '.'."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_TRACE_LOADED_OBJECTS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If set (to any value), causes the program to list its dynamic"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "dependencies, as if run by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ldd (1),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "instead of running normally."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Then there are lots of more or less obscure variables,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "many obsolete or only for internal use."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_AUDIT \" (since glibc 2.4)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A colon-separated list of user-specified, ELF shared objects"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to be loaded before all others in a separate linker namespace"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(i.e., one that does not intrude upon the normal symbol bindings that"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "would occur in the process)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and there is no support for escaping the separator."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "These objects can be used to audit the operation of the dynamic linker."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_AUDIT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is ignored in secure-execution mode."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The dynamic linker will notify the audit"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "shared objects at so-called auditing checkpoints"
        },
        {
          "type": "ESCAPE",
          "content": "\\(em"
        },
        {
          "type": "TEXT",
          "content": "for example,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "loading a new shared object, resolving a symbol,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or calling a symbol from another shared object"
        },
        {
          "type": "ESCAPE",
          "content": "\\(em"
        },
        {
          "type": "TEXT",
          "content": "by"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "calling an appropriate function within the audit shared object."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For details, see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " rtld-audit (7)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The auditing interface is largely compatible with that provided on Solaris,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "as described in its"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"Linker and Libraries Guide\" ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in the chapter"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"Runtime Linker Auditing Interface\" ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Within the names specified in the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_AUDIT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "list, the dynamic linker understands the tokens"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " $ORIGIN ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " $LIB ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " $PLATFORM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(or the versions using curly braces around the names)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "as described above in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"Rpath token expansion\" ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(See also the discussion of quoting under the description of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_LIBRARY_PATH .)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Since glibc 2.13,"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" commit 8e9f92e9d5d7737afdacf79b76d98c4c42980508"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "in secure-execution mode,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "names in the audit list that contain slashes are ignored,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and only shared objects in the standard search directories that"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "have the set-user-ID mode bit enabled are loaded."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_BIND_NOT \" (since glibc 2.1.95)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If this environment variable is set to a nonempty string,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "do not update the GOT (global offset table) and PLT (procedure linkage table)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "after resolving a function symbol."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "By combining the use of this variable with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_DEBUG"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(with the categories"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " bindings"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " symbols ),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "one can observe all run-time function bindings."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_DEBUG \" (since glibc 2.1)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Output verbose debugging information about operation of the dynamic linker."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The content of this variable is one of more of the following categories,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "separated by colons, commas, or (if the value is quoted) spaces:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RS",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 12"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " help"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Specifying"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " help"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in the value of this variable does not run the specified program,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and displays a help message about which categories can be specified in this"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "environment variable."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " all"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Print all debugging information (except"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " statistics"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " unused ;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "see below)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " bindings"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Display information about which definition each symbol is bound to."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " files"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Display progress for input file."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " libs"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Display library search paths."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " reloc"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Display relocation processing."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " scopes"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Display scope information."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " statistics"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Display relocation statistics."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " symbols"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Display search paths for each symbol look-up."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " unused"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Determine unused DSOs."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " versions"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Display version dependencies."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RE",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Since glibc 2.3.4,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_DEBUG"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is ignored in secure-execution mode, unless the file"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /etc/suid"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "debug"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "exists (the content of the file is irrelevant)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_DEBUG_OUTPUT \" (since glibc 2.1)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "By default,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_DEBUG"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "output is written to standard error."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_DEBUG_OUTPUT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is defined, then output is written to the pathname specified by its value,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with the suffix \".\" (dot) followed by the process ID appended to the pathname."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_DEBUG_OUTPUT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is ignored in secure-execution mode."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_DYNAMIC_WEAK \" (since glibc 2.1.91)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "By default, when searching shared libraries to resolve a symbol reference,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the dynamic linker will resolve to the first definition it finds."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Old glibc versions (before 2.2), provided a different behavior:"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "if the linker found a symbol that was weak,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "it would remember that symbol and"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "keep searching in the remaining shared libraries."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If it subsequently found a strong definition of the same symbol,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "then it would instead use that definition."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(If no further symbol was found,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "then the dynamic linker would use the weak symbol that it initially found.)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The old glibc behavior was nonstandard."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(Standard practice is that the distinction between"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "weak and strong symbols should have effect only at static link time.)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "In glibc 2.2,"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" More precisely 2.1.92"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" See weak handling"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     https://www.sourceware.org/ml/libc-hacker/2000-06/msg00029.html"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     To: GNU libc hacker <libc-hacker at sourceware dot cygnus dot com>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     Subject: weak handling"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     From: Ulrich Drepper <drepper at redhat dot com>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     Date: 07 Jun 2000 20:08:12 -0700"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     Reply-To: drepper at cygnus dot com (Ulrich Drepper)"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "the dynamic linker was modified to provide the current behavior"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(which was the behavior that was provided by most other implementations"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "at that time)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Defining the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_DYNAMIC_WEAK"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "environment variable (with any value) provides"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the old (nonstandard) glibc behavior,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "whereby a weak symbol in one shared library may be overridden by"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "a strong symbol subsequently discovered in another shared library."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(Note that even when this variable is set,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "a strong symbol in a shared library will not override"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "a weak definition of the same symbol in the main program.)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Since glibc 2.3.4,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_DYNAMIC_WEAK"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is ignored in secure-execution mode."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_HWCAP_MASK \" (since glibc 2.1)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Mask for hardware capabilities."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_ORIGIN_PATH \" (since glibc 2.1)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Path where the binary is found."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Used only if $ORIGIN can't be determined by normal means"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" (from the origin path saved at load time, or from /proc/self/exe)?"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Since glibc 2.4,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_ORIGIN_PATH"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is ignored in secure-execution mode."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_POINTER_GUARD \" (glibc from 2.4 to 2.22)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Set to 0 to disable pointer guarding."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Any other value enables pointer guarding, which is also the default."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Pointer guarding is a security mechanism whereby some pointers to code"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "stored in writable program memory (return addresses saved by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " setjmp (3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or function pointers used by various glibc internals) are mangled"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "semi-randomly to make it more difficult for an attacker to hijack"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the pointers for use in the event of a buffer overrun or"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "stack-smashing attack."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Since glibc 2.23,"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" commit a014cecd82b71b70a6a843e250e06b541ad524f7"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_POINTER_GUARD"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "can no longer be used to disable pointer guarding,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "which is now always enabled."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_PROFILE \" (since glibc 2.1)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The name of a (single) shared object to be profiled,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "specified either as a pathname or a soname."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Profiling output is appended to the file whose name is:"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "\""
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "I$LD_PROFILE_OUTPUT"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P/"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "I$LD_PROFILE"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P.profile\"."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Since glibc 2.2.5,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_PROFILE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is ignored in secure-execution mode."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_PROFILE_OUTPUT \" (since glibc 2.1)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Directory where"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_PROFILE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "output should be written."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If this variable is not defined, or is defined as an empty string,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "then the default is"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /var/tmp ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_PROFILE_OUTPUT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is ignored in secure-execution mode; instead"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /var/profile"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is always used."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(This detail is relevant only before glibc 2.2.5,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "since in later glibc versions,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_PROFILE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is also ignored in secure-execution mode.)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_SHOW_AUXV \" (since glibc 2.1)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If this environment variable is defined (with any value),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "show the auxiliary array passed up from the kernel (see also"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " getauxval (3))."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Since glibc 2.3.4,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_SHOW_AUXV"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is ignored in secure-execution mode."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_TRACE_PRELINKING \" (since glibc 2.4)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If this environment variable is defined,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "trace prelinking of the object whose name is assigned to"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "this environment variable."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(Use"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ldd (1)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to get a list of the objects that might be traced.)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the object name is not recognized,"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" (This is what seems to happen, from experimenting)"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "then all prelinking activity is traced."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_USE_LOAD_BIAS \" (since glibc 2.3.3)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" http://sources.redhat.com/ml/libc-hacker/2003-11/msg00127.html"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Subject: [PATCH] Support LD_USE_LOAD_BIAS"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Jakub Jelinek"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "By default (i.e., if this variable is not defined),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "executables and prelinked"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "shared objects will honor base addresses of their dependent shared objects"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and (nonprelinked) position-independent executables (PIEs)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and other shared objects will not honor them."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_USE_LOAD_BIAS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is defined with the value 1, both executables and PIEs"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "will honor the base addresses."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_USE_LOAD_BIAS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is defined with the value 0,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "neither executables nor PIEs will honor the base addresses."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Since glibc 2.3.3, this variable is ignored in secure-execution mode."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_VERBOSE \" (since glibc 2.1)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If set to a nonempty string,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "output symbol versioning information about the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "program if the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_TRACE_LOADED_OBJECTS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "environment variable has been set."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_WARN \" (since glibc 2.1.3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If set to a nonempty string, warn about unresolved symbols."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_PREFER_MAP_32BIT_EXEC \" (x86-64 only; since glibc 2.23)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "According to the Intel Silvermont software optimization guide, for 64-bit"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "applications, branch prediction performance can be negatively impacted"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "when the target of a branch is more than 4"
        },
        {
          "type": "ESCAPE",
          "content": "\\ "
        },
        {
          "type": "TEXT",
          "content": "GB away from the branch."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If this environment variable is set (to any value),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the dynamic linker"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "will first try to map executable pages using the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " mmap (2)"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " MAP_32BIT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "flag, and fall back to mapping without that flag if that attempt fails."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "NB: MAP_32BIT will map to the low 2"
        },
        {
          "type": "ESCAPE",
          "content": "\\ "
        },
        {
          "type": "TEXT",
          "content": "GB (not 4"
        },
        {
          "type": "ESCAPE",
          "content": "\\ "
        },
        {
          "type": "TEXT",
          "content": "GB) of the address space."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Because"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " MAP_32BIT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "reduces the address range available for address space layout"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "randomization (ASLR),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_PREFER_MAP_32BIT_EXEC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is always disabled in secure-execution mode."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " FILES"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PD",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 0"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /lib/ld.so"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "a.out dynamic linker/loader"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /lib/ld"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "linux.so. { 1 , 2 }"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ELF dynamic linker/loader"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /etc/ld.so.cache"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "File containing a compiled list of directories in which to search for"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "shared objects and an ordered list of candidate shared objects."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "See"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ldconfig (8)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /etc/ld.so.preload"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "File containing a whitespace-separated list of ELF shared objects to"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "be loaded before the program."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "See the discussion of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_PRELOAD"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "above."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If both"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_PRELOAD"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /etc/ld.so.preload"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are employed, the libraries specified by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LD_PRELOAD"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are preloaded first."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /etc/ld.so.preload"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "has a system-wide effect,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "causing the specified libraries to be preloaded for"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "all programs that are executed on the system."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(This is usually undesirable,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and is typically employed only as an emergency remedy, for example,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "as a temporary workaround to a library misconfiguration issue.)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " lib*.so*"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "shared objects"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PD",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " NOTES"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Hardware capabilities"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Some shared objects are compiled using hardware-specific instructions which do"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "not exist on every CPU."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Such objects should be installed in directories whose names define the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "required hardware capabilities, such as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /usr/lib/sse2/ ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The dynamic linker checks these directories against the hardware of the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "machine and selects the most suitable version of a given shared object."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Hardware capability directories can be cascaded to combine CPU features."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The list of supported hardware capability names depends on the CPU."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The following names are currently recognized:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " Alpha"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ev4, ev5, ev56, ev6, ev67"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " MIPS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "loongson2e, loongson2f, octeon, octeon2"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PowerPC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "4xxmac, altivec, arch_2_05, arch_2_06, booke, cellbe, dfp, efpdouble, efpsingle,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "fpu, ic_snoop, mmu, notb, pa6t, power4, power5, power5+, power6x, ppc32, ppc601,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ppc64, smt, spe, ucache, vsx"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SPARC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "flush, muldiv, stbar, swap, ultra3, v9, v9v, v9v2"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " s390"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "dfp, eimm, esan3, etf3enh, g5, highgprs, hpage, ldisp, msa, stfle,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "z900, z990, z9-109, z10, zarch"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " x86 (32-bit only)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "acpi, apic, clflush, cmov, cx8, dts, fxsr, ht, i386, i486, i586, i686, mca, mmx,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "mtrr, pat, pbe, pge, pn, pse36, sep, ss, sse, sse2, tm"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " SEE ALSO"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ld (1),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ldd (1),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pldd (1),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sprof (1),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " dlopen (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " getauxval (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " elf (5),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " capabilities (7),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " rtld-audit (7),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ldconfig (8),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sln (8)"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .SH AUTHORS"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" ld.so: David Engel, Eric Youngdale, Peter MacDonald, Hongjiu Lu, Linus"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"  Torvalds, Lars Wirzenius and Mitch D'Souza"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" ld\\-linux.so: Roland McGrath, Ulrich Drepper and others."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" In the above, (libc5) stands for David Engel's ld.so/ld\\-linux.so."
        }
      ]
    ]
  }
]
