[
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Page by b.hubert"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" and Copyright (C) 2015, Thomas Gleixner <tglx@linutronix.de>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" and Copyright (C) 2015, Michael Kerrisk <mtk.manpages@gmail.com>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" %%%LICENSE_START(FREELY_REDISTRIBUTABLE)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" may be freely modified and distributed"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" %%%LICENSE_END"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Niki A. Rahimi (LTC Security Development, narahimi@us.ibm.com)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" added ERRORS section."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Modified 2004-06-17 mtk"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Modified 2004-10-07 aeb, added FUTEX_REQUEUE, FUTEX_CMP_REQUEUE"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" FIXME Still to integrate are some points from Torvald Riegel's mail of"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 2015-01-23:"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"       http://thread.gmane.org/gmane.linux.kernel/1703405/focus=7977"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" FIXME Do we need to add some text regarding Torvald Riegel's 2015-01-24 mail"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"       http://thread.gmane.org/gmane.linux.kernel/1703405/focus=1873242"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TH",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX 2 2017-09-15 \"Linux\" \"Linux Programmer's Manual\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " NAME"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "futex "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": " fast user-space locking"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " SYNOPSIS"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".nf",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"#include <linux/futex.h>\""
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"#include <sys/time.h>\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".BI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"int futex(int *\" uaddr \", int \" futex_op \", int \" val ,"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".BI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"          const struct timespec *\" timeout , "
        },
        {
          "type": "ESCAPE",
          "content": "\\"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "\" "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "R  /* or: "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Buint32_t "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Ival2"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P */"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".BI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"          int *\" uaddr2 \", int \" val3 );"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".fi",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " Note :"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "There is no glibc wrapper for this system call; see NOTES."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " DESCRIPTION"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " futex ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "system call provides a method for waiting until a certain condition becomes"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "true."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "It is typically used as a blocking construct in the context of"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "shared-memory synchronization."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "When using futexes, the majority of"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the synchronization operations are performed in user space."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A user-space program employs the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " futex ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "system call only when it is likely that the program has to block for"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "a longer time until the condition becomes true."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Other"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " futex ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "operations can be used to wake any processes or threads waiting"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for a particular condition."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "A futex is a 32-bit value"
        },
        {
          "type": "ESCAPE",
          "content": "\\(em"
        },
        {
          "type": "TEXT",
          "content": "referred to below as a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"futex word\" "
        },
        {
          "type": "ESCAPE",
          "content": "\\(em"
        },
        {
          "type": "TEXT",
          "content": "whose"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "address is supplied to the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " futex ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "system call."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(Futexes are 32 bits in size on all platforms, including 64-bit systems.)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "All futex operations are governed by this value."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "In order to share a futex between processes,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the futex is placed in a region of shared memory,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "created using (for example)"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " mmap (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " shmat (2)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(Thus, the futex word may have different"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "virtual addresses in different processes,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "but these addresses all refer to the same location in physical memory.)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "In a multithreaded program, it is sufficient to place the futex word"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in a global variable shared by all threads."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "When executing a futex operation that requests to block a thread,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the kernel will block only if the futex word has the value that the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "calling thread supplied (as one of the arguments of the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " futex ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "call) as the expected value of the futex word."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The loading of the futex word's value,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the comparison of that value with the expected value,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and the actual blocking will happen atomically and will be totally ordered"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with respect to concurrent operations performed by other threads"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "on the same futex word."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Notes from Darren Hart (Dec 2015):"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     Totally ordered with respect futex operations refers to semantics"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     of the ACQUIRE/RELEASE operations and how they impact ordering of"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     memory reads and writes. The kernel futex operations are protected"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     by spinlocks, which ensure that all operations are serialized"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     with respect to one another."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     This is a lot to attempt to define in this document. Perhaps a"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     reference to linux/Documentation/memory-barriers.txt as a footnote"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     would be sufficient? Or perhaps for this manual, \"serialized\" would"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     be sufficient, with a footnote regarding \"totally ordered\" and a"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     pointer to the memory-barrier documentation?"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Thus, the futex word is used to connect the synchronization in user space"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with the implementation of blocking by the kernel."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Analogously to an atomic"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "compare-and-exchange operation that potentially changes shared memory,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "blocking via a futex is an atomic compare-and-block operation."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" FIXME(Torvald Riegel):"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Eventually we want to have some text in NOTES to satisfy"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" the reference in the following sentence"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     See NOTES for a detailed specification of"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     the synchronization semantics."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "One use of futexes is for implementing locks."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The state of the lock (i.e., acquired or not acquired)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "can be represented as an atomically accessed flag in shared memory."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "In the uncontended case,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "a thread can access or modify the lock state with atomic instructions,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for example atomically changing it from not acquired to acquired"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "using an atomic compare-and-exchange instruction."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(Such instructions are performed entirely in user mode,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and the kernel maintains no information about the lock state.)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "On the other hand, a thread may be unable to acquire a lock because"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "it is already acquired by another thread."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "It then may pass the lock's flag as a futex word and the value"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "representing the acquired state as the expected value to a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " futex ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "wait operation."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " futex ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "operation will block if and only if the lock is still acquired"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(i.e., the value in the futex word still matches the \"acquired state\")."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "When releasing the lock, a thread has to first reset the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "lock state to not acquired and then execute a futex"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "operation that wakes threads blocked on the lock flag used as a futex word"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(this can be further optimized to avoid unnecessary wake-ups)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "See"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " futex (7)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for more detail on how to use futexes."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Besides the basic wait and wake-up futex functionality, there are further"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "futex operations aimed at supporting more complex use cases."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Note that"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "no explicit initialization or destruction is necessary to use futexes;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the kernel maintains a futex"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(i.e., the kernel-internal implementation artifact)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "only while operations such as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "described below, are being performed on a particular futex word."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Arguments"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "argument points to the futex word."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "On all platforms, futexes are four-byte"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "integers that must be aligned on a four-byte boundary."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The operation to perform on the futex is specified in the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " futex_op"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "argument;"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is a value whose meaning and purpose depends on"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " futex_op ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The remaining arguments"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( timeout ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr2 ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val3 )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are required only for certain of the futex operations described below."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Where one of these arguments is not required, it is ignored."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "For several blocking operations, the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " timeout"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "argument is a pointer to a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " timespec"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "structure that specifies a timeout for the operation."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "However,  notwithstanding the prototype shown above, for some operations,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the least significant four bytes of this argument are instead"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "used as an integer whose meaning is determined by the operation."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For these operations, the kernel casts the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " timeout"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "value first to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"unsigned long\","
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "then to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uint32_t ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and in the remainder of this page, this argument is referred to as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val2"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "when interpreted in this fashion."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Where it is required, the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr2"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "argument is a pointer to a second futex word that is employed"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "by the operation."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The interpretation of the final integer argument,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val3 ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "depends on the operation."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Futex operations"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " futex_op"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "argument consists of two parts:"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "a command that specifies the operation to be performed,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "bit-wise ORed with zero or more options that"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "modify the behaviour of the operation."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The options that may be included in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " futex_op"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are as follows:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_PRIVATE_FLAG \" (since Linux 2.6.22)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" commit 34f01cc1f512fa783302982776895c73714ebbc2"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "This option bit can be employed with all futex operations."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "It tells the kernel that the futex is process-private and not shared"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with another process (i.e., it is being used for synchronization"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "only between threads of the same process)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This allows the kernel to make some additional performance optimizations."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" I.e., It allows the kernel choose the fast path for validating"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" the user-space address and avoids expensive VMA lookups,"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" taking reference counts on file backing store, and so on."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "As a convenience,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " <linux/futex.h>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "defines a set of constants with the suffix"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " _PRIVATE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "that are equivalents of all of the operations listed below,"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" except the obsolete FUTEX_FD, for which the \"private\" flag was"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" meaningless"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "but with the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_PRIVATE_FLAG"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ORed into the constant value."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Thus, there are"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT_PRIVATE ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAKE_PRIVATE ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and so on."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_CLOCK_REALTIME \" (since Linux 2.6.28)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" commit 1acdac104668a0834cfa267de9946fac7764d486"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "This option bit can be employed only with the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT_BITSET ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT_REQUEUE_PI ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(since Linux 4.5)"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" commit 337f13046ff03717a9e99675284a817527440a49"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "operations."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If this option is set, the kernel measures the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " timeout"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "against the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLOCK_REALTIME"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "clock."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If this option is not set, the kernel measures the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " timeout"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "against the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLOCK_MONOTONIC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "clock."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The operation specified in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " futex_op"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is one of the following:"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT \" (since Linux 2.6.0)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Strictly speaking, since some time in 2.5.x"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "This operation tests that the value at the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "futex word pointed to by the address"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "still contains the expected value"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and if so, then sleeps waiting for a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAKE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "operation on the futex word."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The load of the value of the futex word is an atomic memory"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "access (i.e., using atomic machine instructions of the respective"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "architecture)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This load, the comparison with the expected value, and"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "starting to sleep are performed atomically"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" FIXME: Torvald, I think we may need to add some explanation of"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" \"totally ordered\" here."
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "and totally ordered"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with respect to other futex operations on the same futex word."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the thread starts to sleep,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "it is considered a waiter on this futex word."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the futex value does not match"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "then the call fails immediately with the error"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EAGAIN ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The purpose of the comparison with the expected value is to prevent lost"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "wake-ups."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If another thread changed the value of the futex word after the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "calling thread decided to block based on the prior value,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and if the other thread executed a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAKE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "operation (or similar wake-up) after the value change and before this"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "operation, then the calling thread will observe the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "value change and will not start to sleep."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " timeout"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is not NULL, the structure it points to specifies a"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "timeout for the wait."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(This interval will be rounded up to the system clock granularity,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and is guaranteed not to expire early.)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The timeout is by default measured according to the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLOCK_MONOTONIC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "clock, but, since Linux 4.5, the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLOCK_REALTIME"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "clock can be selected by specifying"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_CLOCK_REALTIME"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " futex_op ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " timeout"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is NULL, the call blocks indefinitely."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " Note :"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " timeout"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is interpreted as a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " relative"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "value."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This differs from other futex operations, where"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " timeout"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is interpreted as an absolute value."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "To obtain the equivalent of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with an absolute timeout, employ"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT_BITSET"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val3"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "specified as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_BITSET_MATCH_ANY ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The arguments"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr2"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val3"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are ignored."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" FIXME . (Torvald) I think we should remove this.  Or maybe adapt to a"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" different example."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     For"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     .BR futex (7),"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     this call is executed if decrementing the count gave a negative value"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     (indicating contention),"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     and will sleep until another process or thread releases"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     the futex and executes the"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     .B FUTEX_WAKE"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     operation."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAKE \" (since Linux 2.6.0)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Strictly speaking, since Linux 2.5.x"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "This operation wakes at most"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "of the waiters that are waiting (e.g., inside"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "on the futex word at the address"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Most commonly,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is specified as either 1 (wake up a single waiter) or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " INT_MAX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(wake up all waiters)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "No guarantee is provided about which waiters are awoken"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(e.g., a waiter with a higher scheduling priority is not guaranteed"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to be awoken in preference to a waiter with a lower priority)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The arguments"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " timeout ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr2 ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val3"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are ignored."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" FIXME . (Torvald) I think we should remove this.  Or maybe adapt to"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" a different example."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     For"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     .BR futex (7),"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     this is executed if incrementing the count showed that"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     there were waiters,"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     once the futex value has been set to 1"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     (indicating that it is available)."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" How does \"incrementing the count show that there were waiters\"?"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_FD \" (from Linux 2.6.0 up to and including Linux 2.6.25)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Strictly speaking, from Linux 2.5.x to 2.6.25"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "This operation creates a file descriptor that is associated with"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the futex at"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The caller must close the returned file descriptor after use."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "When another process or thread performs a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAKE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "on the futex word, the file descriptor indicates as being readable with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " select (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " poll (2),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " epoll (7)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The file descriptor can be used to obtain asynchronous notifications: if"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is nonzero, then, when another process or thread executes a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAKE ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the caller will receive the signal number that was passed in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The arguments"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " timeout ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr2"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val3"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are ignored."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Because it was inherently racy,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_FD"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "has been removed"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" commit 82af7aca56c67061420d618cc5a30f0fd4106b80"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "from Linux 2.6.26 onward."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_REQUEUE \" (since Linux 2.6.0)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This operation performs the same task as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_CMP_REQUEUE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(see below), except that no check is made using the value in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": "  val3 ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(The argument"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val3"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is ignored.)"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_CMP_REQUEUE \" (since Linux 2.6.7)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This operation first checks whether the location"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "still contains the value"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val3 ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If not, the operation fails with the error"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EAGAIN ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Otherwise, the operation wakes up a maximum of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "waiters that are waiting on the futex at"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If there are more than"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "waiters, then the remaining waiters are removed"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "from the wait queue of the source futex at"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and added to the wait queue of the target futex at"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr2 ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val2"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "argument specifies an upper limit on the number of waiters"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "that are requeued to the futex at"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr2 ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" FIXME(Torvald) Is the following correct?  Or is just the decision"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" which threads to wake or requeue part of the atomic operation?"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The load from"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is an atomic memory access (i.e., using atomic machine instructions of"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the respective architecture)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This load, the comparison with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val3 ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and the requeueing of any waiters are performed atomically and totally"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ordered with respect to other operations on the same futex word."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Notes from a f2f conversation with Thomas Gleixner (Aug 2015): ###"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tThe operation is serialized with respect to operations on both"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tsource and target futex. No other waiter can enqueue itself"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tfor waiting and no other waiter can dequeue itself because of"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\ta timeout or signal."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Typical values to specify for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are 0 or 1."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(Specifying"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " INT_MAX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is not useful, because it would make the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_CMP_REQUEUE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "operation equivalent to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAKE .)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The limit value specified via"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val2"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is typically either 1 or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " INT_MAX ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(Specifying the argument as 0 is not useful, because it would make the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_CMP_REQUEUE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "operation equivalent to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT .)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_CMP_REQUEUE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "operation was added as a replacement for the earlier"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_REQUEUE ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The difference is that the check of the value at"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "can be used to ensure that requeueing happens only under certain"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "conditions, which allows race conditions to be avoided in certain use cases."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" But, as Rich Felker points out, there remain valid use cases for"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" FUTEX_REQUEUE, for example, when the calling thread is requeuing"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" the target(s) to a lock that the calling thread owns"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     From: Rich Felker <dalias@libc.org>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     Date: Wed, 29 Oct 2014 22:43:17 -0400"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     To: Darren Hart <dvhart@infradead.org>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     CC: libc-alpha@sourceware.org, ..."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     Subject: Re: Add futex wrapper to glibc?"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Both"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_REQUEUE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_CMP_REQUEUE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "can be used to avoid \"thundering herd\" wake-ups that could occur when using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAKE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in cases where all of the waiters that are woken need to acquire"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "another futex."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Consider the following scenario,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "where multiple waiter threads are waiting on B,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "a wait queue implemented using a futex:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "lock(A)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "while (!check_value(V)) {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    unlock(A);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    block_on(B);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    lock(A);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "};"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "unlock(A);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If a waker thread used"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAKE ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "then all waiters waiting on B would be woken up,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and they would all try to acquire lock A."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "However, waking all of the threads in this manner would be pointless because"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "all except one of the threads would immediately block on lock A again."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "By contrast, a requeue operation wakes just one waiter and moves"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the other waiters to lock A,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and when the woken waiter unlocks A then the next waiter can proceed."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAKE_OP \" (since Linux 2.6.14)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" commit 4732efbeb997189d9f9b04708dc26bf8613ed721"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tAuthor: Jakub Jelinek <jakub@redhat.com>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tDate:   Tue Sep 6 15:16:25 2005 -0700"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" FIXME. (Torvald) The glibc condvar implementation is currently being"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     revised (e.g., to not use an internal lock anymore)."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     It is probably more future-proof to remove this paragraph."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" [Torvald, do you have an update here?]"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "This operation was added to support some user-space use cases"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "where more than one futex must be handled at the same time."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The most notable example is the implementation of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthread_cond_signal (3),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "which requires operations on two futexes,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the one used to implement the mutex and the one used in the implementation"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "of the wait queue associated with the condition variable."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAKE_OP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "allows such cases to be implemented without leading to"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "high rates of contention and context switching."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAKE_OP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "operation is equivalent to executing the following code atomically"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and totally ordered with respect to other futex operations on"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "any of the two supplied futex words:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "int oldval = *(int *) uaddr2;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "*(int *) uaddr2 = oldval "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Iop"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Ioparg"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "futex(uaddr, FUTEX_WAKE, val, 0, 0, 0);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "if (oldval "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Icmp"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Icmparg"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    futex(uaddr2, FUTEX_WAKE, val2, 0, 0, 0);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "In other words,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAKE_OP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "does the following:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RS",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " * 3"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "saves the original value of the futex word at"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr2"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and performs an operation to modify the value of the futex at"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr2 ;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "this is an atomic read-modify-write memory access (i.e., using atomic"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "machine instructions of the respective architecture)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "wakes up a maximum of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "waiters on the futex for the futex word at"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr ;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "dependent on the results of a test of the original value of the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "futex word at"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr2 ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "wakes up a maximum of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val2"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "waiters on the futex for the futex word at"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr2 ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RE",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The operation and comparison that are to be performed are encoded"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in the bits of the argument"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val3 ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Pictorially, the encoding is:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +8n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "+---+---+-----------+-----------+"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "|op |cmp|   oparg   |  cmparg   |"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "+---+---+-----------+-----------+"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "  4   4       12          12    <== # of bits"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Expressed in code, the encoding is:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#define FUTEX_OP(op, oparg, cmp, cmparg) "
        },
        {
          "type": "ESCAPE",
          "content": "\\\\"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                (((op & 0xf) << 28) | "
        },
        {
          "type": "ESCAPE",
          "content": "\\\\"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                ((cmp & 0xf) << 24) | "
        },
        {
          "type": "ESCAPE",
          "content": "\\\\"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                ((oparg & 0xfff) << 12) | "
        },
        {
          "type": "ESCAPE",
          "content": "\\\\"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                (cmparg & 0xfff))"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "In the above,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " op"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " cmp"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are each one of the codes listed below."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " oparg"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " cmparg"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "components are literal numeric values, except as noted below."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " op"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "component has one of the following values:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "FUTEX_OP_SET        0  /* uaddr2 = oparg; */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "FUTEX_OP_ADD        1  /* uaddr2 += oparg; */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "FUTEX_OP_OR         2  /* uaddr2 |= oparg; */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "FUTEX_OP_ANDN       3  /* uaddr2 &= ~oparg; */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "FUTEX_OP_XOR        4  /* uaddr2 ^= oparg; */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "In addition, bit-wise ORing the following value into"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " op"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "causes"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"(1"
        },
        {
          "type": "ESCAPE",
          "content": "\\ "
        },
        {
          "type": "TEXT",
          "content": "<<"
        },
        {
          "type": "ESCAPE",
          "content": "\\ "
        },
        {
          "type": "TEXT",
          "content": "oparg)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to be used as the operand:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "FUTEX_OP_ARG_SHIFT  8  /* Use (1 << oparg) as operand */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " cmp"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "field is one of the following:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "FUTEX_OP_CMP_EQ     0  /* if (oldval == cmparg) wake */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "FUTEX_OP_CMP_NE     1  /* if (oldval != cmparg) wake */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "FUTEX_OP_CMP_LT     2  /* if (oldval < cmparg) wake */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "FUTEX_OP_CMP_LE     3  /* if (oldval <= cmparg) wake */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "FUTEX_OP_CMP_GT     4  /* if (oldval > cmparg) wake */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "FUTEX_OP_CMP_GE     5  /* if (oldval >= cmparg) wake */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The return value of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAKE_OP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is the sum of the number of waiters woken on the futex"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "plus the number of waiters woken on the futex"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr2 ."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT_BITSET \" (since Linux 2.6.25)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" commit cd689985cf49f6ff5c8eddc48d98b9d581d9475d"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "This operation is like"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "except that"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val3"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is used to provide a 32-bit bit mask to the kernel."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This bit mask, in which at least one bit must be set,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is stored in the kernel-internal state of the waiter."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "See the description of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAKE_BITSET"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for further details."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " timeout"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is not NULL, the structure it points to specifies"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "an absolute timeout for the wait operation."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " timeout"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is NULL, the operation can block indefinitely."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr2"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "argument is ignored."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAKE_BITSET \" (since Linux 2.6.25)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" commit cd689985cf49f6ff5c8eddc48d98b9d581d9475d"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "This operation is the same as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAKE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "except that the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val3"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "argument is used to provide a 32-bit bit mask to the kernel."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This bit mask, in which at least one bit must be set,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is used to select which waiters should be woken up."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The selection is done by a bit-wise AND of the \"wake\" bit mask"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(i.e., the value in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val3 )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and the bit mask which is stored in the kernel-internal"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "state of the waiter (the \"wait\" bit mask that is set using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT_BITSET )."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "All of the waiters for which the result of the AND is nonzero are woken up;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the remaining waiters are left sleeping."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The effect of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT_BITSET"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAKE_BITSET"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is to allow selective wake-ups among multiple waiters that are blocked"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "on the same futex."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "However, note that, depending on the use case,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "employing this bit-mask multiplexing feature on a"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "futex can be less efficient than simply using multiple futexes,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "because employing bit-mask multiplexing requires the kernel"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to check all waiters on a futex,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "including those that are not interested in being woken up"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(i.e., they do not have the relevant bit set in their \"wait\" bit mask)."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" According to http://locklessinc.com/articles/futex_cheat_sheet/:"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"    \"The original reason for the addition of these extensions"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     was to improve the performance of pthread read-write locks"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     in glibc. However, the pthreads library no longer uses the"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     same locking algorithm, and these extensions are not used"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     without the bitset parameter being all ones."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" The page goes on to note that the FUTEX_WAIT_BITSET operation"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" is nevertheless used (with a bit mask of all ones) in order to"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" obtain the absolute timeout functionality that is useful"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" for efficiently implementing Pthreads APIs (which use absolute"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" timeouts); FUTEX_WAIT provides only relative timeouts."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The constant"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_BITSET_MATCH_ANY ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "which corresponds to all 32 bits set in the bit mask, can be used as the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val3"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "argument for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT_BITSET"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAKE_BITSET ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Other than differences in the handling of the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " timeout"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "argument, the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "operation is equivalent to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT_BITSET"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val3"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "specified as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_BITSET_MATCH_ANY ;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "that is, allow a wake-up by any waker."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAKE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "operation is equivalent to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAKE_BITSET"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val3"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "specified as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_BITSET_MATCH_ANY ;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "that is, wake up any waiter(s)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr2"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " timeout"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "arguments are ignored."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Priority-inheritance futexes"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Linux supports priority-inheritance (PI) futexes in order to handle"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "priority-inversion problems that can be encountered with"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "normal futex locks."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Priority inversion is the problem that occurs when a high-priority"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "task is blocked waiting to acquire a lock held by a low-priority task,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "while tasks at an intermediate priority continuously preempt"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the low-priority task from the CPU."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Consequently, the low-priority task makes no progress toward"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "releasing the lock, and the high-priority task remains blocked."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Priority inheritance is a mechanism for dealing with"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the priority-inversion problem."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "With this mechanism, when a high-priority task becomes blocked"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "by a lock held by a low-priority task,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the priority of the low-priority task is temporarily raised"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to that of the high-priority task,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "so that it is not preempted by any intermediate level tasks,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and can thus make progress toward releasing the lock."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "To be effective, priority inheritance must be transitive,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "meaning that if a high-priority task blocks on a lock"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "held by a lower-priority task that is itself blocked by a lock"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "held by another intermediate-priority task"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(and so on, for chains of arbitrary length),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "then both of those tasks"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(or more generally, all of the tasks in a lock chain)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "have their priorities raised to be the same as the high-priority task."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "From a user-space perspective,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "what makes a futex PI-aware is a policy agreement (described below)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "between user space and the kernel about the value of the futex word,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "coupled with the use of the PI-futex operations described below."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(Unlike the other futex operations described above,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the PI-futex operations are designed"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for the implementation of very specific IPC mechanisms.)"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Quoting Darren Hart:"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     These opcodes paired with the PI futex value policy (described below)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     defines a \"futex\" as PI aware. These were created very specifically"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     in support of PI pthread_mutexes, so it makes a lot more sense to"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     talk about a PI aware pthread_mutex, than a PI aware futex, since"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     there is a lot of policy and scaffolding that has to be built up"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     around it to use it properly (this is what a PI pthread_mutex is)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"       mtk: The following text is drawn from the Hart/Guniguntala paper"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"       (listed in SEE ALSO), but I have reworded some pieces"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"       significantly."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The PI-futex operations described below differ from the other"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "futex operations in that they impose policy on the use of the value of the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "futex word:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " * 3"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If the lock is not acquired, the futex word's value shall be 0."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If the lock is acquired, the futex word's value shall"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "be the thread ID (TID;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " gettid (2))"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "of the owning thread."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If the lock is owned and there are threads contending for the lock,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "then the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAITERS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "bit shall be set in the futex word's value; in other words, this value is:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    FUTEX_WAITERS | TID"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "(Note that is invalid for a PI futex word to have no owner and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAITERS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "set.)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "With this policy in place,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "a user-space application can acquire an unacquired"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "lock or release a lock using atomic instructions executed in user mode"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(e.g., a compare-and-swap operation such as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " cmpxchg"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "on the x86 architecture)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Acquiring a lock simply consists of using compare-and-swap to atomically"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "set the futex word's value to the caller's TID if its previous value was 0."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Releasing a lock requires using compare-and-swap to set the futex word's"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "value to 0 if the previous value was the expected TID."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If a futex is already acquired (i.e., has a nonzero value),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "waiters must employ the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_LOCK_PI"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "operation to acquire the lock."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If other threads are waiting for the lock, then the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAITERS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "bit is set in the futex value;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in this case, the lock owner must employ the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_UNLOCK_PI"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "operation to release the lock."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "In the cases where callers are forced into the kernel"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(i.e., required to perform a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " futex ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "call),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "they then deal directly with a so-called RT-mutex,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "a kernel locking mechanism which implements the required"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "priority-inheritance semantics."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "After the RT-mutex is acquired, the futex value is updated accordingly,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "before the calling thread returns to user space."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "It is important to note"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" tglx (July 2015):"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     If there are multiple waiters on a pi futex then a wake pi operation"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     will wake the first waiter and hand over the lock to this waiter. This"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     includes handing over the rtmutex which represents the futex in the"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     kernel. The strict requirement is that the futex owner and the rtmutex"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     owner must be the same, except for the update period which is"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     serialized by the futex internal locking. That means the kernel must"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     update the user-space value prior to returning to user space"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "that the kernel will update the futex word's value prior"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to returning to user space."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(This prevents the possibility of the futex word's value ending"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "up in an invalid state, such as having an owner but the value being 0,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or having waiters but not having the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAITERS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "bit set.)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If a futex has an associated RT-mutex in the kernel"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(i.e., there are blocked waiters)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and the owner of the futex/RT-mutex dies unexpectedly,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "then the kernel cleans up the RT-mutex and hands it over to the next waiter."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This in turn requires that the user-space value is updated accordingly."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "To indicate that this is required, the kernel sets the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_OWNER_DIED"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "bit in the futex word along with the thread ID of the new owner."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "User space can detect this situation via the presence of the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_OWNER_DIED"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "bit and is then responsible for cleaning up the stale state left over by"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the dead owner."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" tglx (July 2015):"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     The FUTEX_OWNER_DIED bit can also be set on uncontended futexes, where"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     the kernel has no state associated. This happens via the robust futex"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     mechanism. In that case the futex value will be set to"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     FUTEX_OWNER_DIED. The robust futex mechanism is also available for non"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     PI futexes."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "PI futexes are operated on by specifying one of the values listed below in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " futex_op ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Note that the PI futex operations must be used as paired operations"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and are subject to some additional requirements:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " * 3"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_LOCK_PI"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_TRYLOCK_PI"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "pair with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_UNLOCK_PI."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_UNLOCK_PI"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "must be called only on a futex owned by the calling thread,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "as defined by the value policy, otherwise the error"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EPERM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "results."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT_REQUEUE_PI"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "pairs with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_CMP_REQUEUE_PI ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This must be performed from a non-PI futex to a distinct PI futex"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(or the error"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINVAL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "results)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Additionally,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(the number of waiters to be woken) must be 1"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(or the error"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINVAL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "results)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The PI futex operations are as follows:"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_LOCK_PI \" (since Linux 2.6.18)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" commit c87e2837be82df479a6bae9f155c43516d2feebc"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "This operation is used after an attempt to acquire"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the lock via an atomic user-mode instruction failed"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "because the futex word has a nonzero value"
        },
        {
          "type": "ESCAPE",
          "content": "\\(em"
        },
        {
          "type": "TEXT",
          "content": "specifically,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "because it contained the (PID-namespace-specific) TID of the lock owner."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The operation checks the value of the futex word at the address"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the value is 0, then the kernel tries to atomically set"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the futex value to the caller's TID."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the futex word's value is nonzero,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the kernel atomically sets the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAITERS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "bit, which signals the futex owner that it cannot unlock the futex in"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "user space atomically by setting the futex value to 0."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" tglx (July 2015):"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     The operation here is similar to the FUTEX_WAIT logic. When the user"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     space atomic acquire does not succeed because the futex value was non"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     zero, then the waiter goes into the kernel, takes the kernel internal"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     lock and retries the acquisition under the lock. If the acquisition"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     does not succeed either, then it sets the FUTEX_WAITERS bit, to signal"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     the lock owner that it needs to go into the kernel. Here is the pseudo"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     code:"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     \tlock(kernel_lock);"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     retry:"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     \t"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     \t/*"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     \t * Owner might have unlocked in userspace before we"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     \t * were able to set the waiter bit."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"              */"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"             if (atomic_acquire(futex) == SUCCESS) {"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     \t   unlock(kernel_lock());"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     \t   return 0;"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     \t}"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     \t/*"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     \t * Owner might have unlocked after the above atomic_acquire()"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     \t * attempt."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     \t */"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     \tif (atomic_set_waiters_bit(futex) != SUCCESS)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     \t   goto retry;"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     \tqueue_waiter();"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     \tunlock(kernel_lock);"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     \tblock();"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "After that, the kernel:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RS",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " 1. 3"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Tries to find the thread which is associated with the owner TID."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " 2."
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Creates or reuses kernel state on behalf of the owner."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(If this is the first waiter, there is no kernel state for this"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "futex, so kernel state is created by locking the RT-mutex"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and the futex owner is made the owner of the RT-mutex."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If there are existing waiters, then the existing state is reused.)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " 3."
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Attaches the waiter to the futex"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(i.e., the waiter is enqueued on the RT-mutex waiter list)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RE",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If more than one waiter exists,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the enqueueing of the waiter is in descending priority order."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(For information on priority ordering, see the discussion of the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SCHED_DEADLINE ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SCHED_FIFO ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SCHED_RR"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "scheduling policies in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sched (7).)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The owner inherits either the waiter's CPU bandwidth"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(if the waiter is scheduled under the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SCHED_DEADLINE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "policy) or the waiter's priority (if the waiter is scheduled under the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SCHED_RR"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SCHED_FIFO"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "policy)."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" August 2015:"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     mtk: If the realm is restricted purely to SCHED_OTHER (SCHED_NORMAL)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"          processes, does the nice value come into play also?"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     tglx: No. SCHED_OTHER/NORMAL tasks are handled in FIFO order"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "This inheritance follows the lock chain in the case of nested locking"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" (i.e., task 1 blocks on lock A, held by task 2,"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" while task 2 blocks on lock B, held by task 3)"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "and performs deadlock detection."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " timeout"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "argument provides a timeout for the lock attempt."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " timeout"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is not NULL, the structure it points to specifies"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "an absolute timeout, measured against the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLOCK_REALTIME"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "clock."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 2016-07-07 response from Thomas Gleixner on LKML:"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" From: Thomas Gleixner <tglx@linutronix.de>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Date: 6 July 2016 at 20:57"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Subject: Re: futex: Allow FUTEX_CLOCK_REALTIME with FUTEX_WAIT op"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" On Thu, 23 Jun 2016, Michael Kerrisk (man-pages) wrote:"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" > On 06/23/2016 08:28 PM, Darren Hart wrote:"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" > > And as a follow-on, what is the reason for FUTEX_LOCK_PI only using"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" > > CLOCK_REALTIME? It seems reasonable to me that a user may want to wait a"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" > > specific amount of time, regardless of wall time."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" >"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" > Yes, that's another weird inconsistency."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" The reason is that phtread_mutex_timedlock() uses absolute timeouts based on"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" CLOCK_REALTIME. glibc folks asked to make that the default behaviour back"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" then when we added LOCK_PI."
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " timeout"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is NULL, the operation will block indefinitely."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr2 ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val3"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "arguments are ignored."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_TRYLOCK_PI \" (since Linux 2.6.18)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" commit c87e2837be82df479a6bae9f155c43516d2feebc"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "This operation tries to acquire the lock at"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "It is invoked when a user-space atomic acquire did not"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "succeed because the futex word was not 0."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Because the kernel has access to more state information than user space,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "acquisition of the lock might succeed if performed by the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "kernel in cases where the futex word"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(i.e., the state information accessible to use-space) contains stale state"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( FUTEX_WAITERS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and/or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_OWNER_DIED )."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This can happen when the owner of the futex died."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "User space cannot handle this condition in a race-free manner,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "but the kernel can fix this up and acquire the futex."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Paraphrasing a f2f conversation with Thomas Gleixner about the"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" above point (Aug 2015): ###"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tThere is a rare possibility of a race condition involving an"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tuncontended futex with no owner, but with waiters.  The"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tkernel-user-space contract is that if a futex is nonzero, you must"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tgo into kernel.  The futex was owned by a task, and that task dies"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tbut there are no waiters, so the futex value is non zero."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tTherefore, the next locker has to go into the kernel,"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tso that the kernel has a chance to clean up. (CMXCH on zero"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tin user space would fail, so kernel has to clean up.)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Darren Hart (Oct 2015):"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     The trylock in the kernel has more state, so it can independently"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     verify the  flags that userspace must trust implicitly."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr2 ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " timeout ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val3"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "arguments are ignored."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_UNLOCK_PI \" (since Linux 2.6.18)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" commit c87e2837be82df479a6bae9f155c43516d2feebc"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "This operation wakes the top priority waiter that is waiting in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_LOCK_PI"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "on the futex address provided by the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "argument."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "This is called when the user-space value at"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "cannot be changed atomically from a TID (of the owner) to 0."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr2 ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " timeout ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val3"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "arguments are ignored."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_CMP_REQUEUE_PI \" (since Linux 2.6.31)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" commit 52400ba946759af28442dee6265c5c0180ac7122"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "This operation is a PI-aware variant of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_CMP_REQUEUE ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "It requeues waiters that are blocked via"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT_REQUEUE_PI"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "on"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "from a non-PI source futex"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( uaddr )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to a PI target futex"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( uaddr2 )."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "As with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_CMP_REQUEUE ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "this operation wakes up a maximum of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "waiters that are waiting on the futex at"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "However, for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_CMP_REQUEUE_PI ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is required to be 1"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(since the main point is to avoid a thundering herd)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The remaining waiters are removed from the wait queue of the source futex at"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and added to the wait queue of the target futex at"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr2 ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val2"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" val2 is the cap on the number of requeued waiters."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" In the glibc pthread_cond_broadcast() implementation, this argument"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" is specified as INT_MAX, and for pthread_cond_signal() it is 0."
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val3"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "arguments serve the same purposes as for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_CMP_REQUEUE ."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"       The page at http://locklessinc.com/articles/futex_cheat_sheet/"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"       notes that \"priority-inheritance Futex to priority-inheritance"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"       Futex requeues are currently unsupported\". However, probably"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"       the page does not need to say nothing about this, since"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"       Thomas Gleixner commented (July 2015): \"they never will be"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"       supported because they make no sense at all\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT_REQUEUE_PI \" (since Linux 2.6.31)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" commit 52400ba946759af28442dee6265c5c0180ac7122"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Wait on a non-PI futex at"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and potentially be requeued (via a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_CMP_REQUEUE_PI"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "operation in another task) onto a PI futex at"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr2 ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The wait operation on"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is the same as for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The waiter can be removed from the wait on"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "without requeueing on"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr2"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "via a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAKE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "operation in another task."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "In this case, the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT_REQUEUE_PI"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "operation fails with the error"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EAGAIN ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " timeout"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is not NULL, the structure it points to specifies"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "an absolute timeout for the wait operation."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " timeout"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is NULL, the operation can block indefinitely."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val3"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "argument is ignored."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT_REQUEUE_PI"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_CMP_REQUEUE_PI"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "were added to support a fairly specific use case:"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "support for priority-inheritance-aware POSIX threads condition variables."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The idea is that these operations should always be paired,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in order to ensure that user space and the kernel remain in sync."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Thus, in the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT_REQUEUE_PI"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "operation, the user-space application pre-specifies the target"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "of the requeue that takes place in the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_CMP_REQUEUE_PI"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "operation."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Darren Hart notes that a patch to allow glibc to fully support"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" PI-aware pthreads condition variables has not yet been accepted into"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" glibc. The story is complex, and can be found at"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" https://sourceware.org/bugzilla/show_bug.cgi?id=11588"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Darren notes that in the meantime, the patch is shipped with various"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" PREEMPT_RT-enabled Linux systems."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Related to the preceding, Darren proposed that somewhere, man-pages"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" should document the following point:"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     While the Linux kernel, since 2.6.31, supports requeueing of"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     priority-inheritance (PI) aware mutexes via the"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     FUTEX_WAIT_REQUEUE_PI and FUTEX_CMP_REQUEUE_PI futex operations,"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     the glibc implementation does not yet take full advantage of this."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     Specifically, the condvar internal data lock remains a non-PI aware"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     mutex, regardless of the type of the pthread_mutex associated with"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     the condvar. This can lead to an unbounded priority inversion on"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     the internal data lock even when associating a PI aware"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     pthread_mutex with a condvar during a pthread_cond*_wait"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     operation. For this reason, it is not recommended to rely on"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     priority inheritance when using pthread condition variables."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" The problem is that the obvious location for this text is"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" the pthread_cond*wait(3) man page. However, such a man page"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" does not currently exist."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " RETURN VALUE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "In the event of an error (and assuming that"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " futex ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "was invoked via"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " syscall (2)),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "all operations return "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "1 and set"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " errno"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to indicate the cause of the error."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The return value on success depends on the operation,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "as described in the following list:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Returns 0 if the caller was woken up."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Note that a wake-up can also be caused by common futex usage patterns"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in unrelated code that happened to have previously used the futex word's"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "memory location (e.g., typical futex-based implementations of"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Pthreads mutexes can cause this under some conditions)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Therefore, callers should always conservatively assume that a return"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "value of 0 can mean a spurious wake-up, and use the futex word's value"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(i.e., the user-space synchronization scheme)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to decide whether to continue to block or not."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAKE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Returns the number of waiters that were woken up."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_FD"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Returns the new file descriptor associated with the futex."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_REQUEUE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Returns the number of waiters that were woken up."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_CMP_REQUEUE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Returns the total number of waiters that were woken up or"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "requeued to the futex for the futex word at"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr2 ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If this value is greater than"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "then the difference is the number of waiters requeued to the futex for the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "futex word at"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr2 ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAKE_OP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Returns the total number of waiters that were woken up."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This is the sum of the woken waiters on the two futexes for"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the futex words at"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr2 ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT_BITSET"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Returns 0 if the caller was woken up."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "See"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for how to interpret this correctly in practice."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAKE_BITSET"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Returns the number of waiters that were woken up."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_LOCK_PI"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Returns 0 if the futex was successfully locked."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_TRYLOCK_PI"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Returns 0 if the futex was successfully locked."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_UNLOCK_PI"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Returns 0 if the futex was successfully unlocked."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_CMP_REQUEUE_PI"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Returns the total number of waiters that were woken up or"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "requeued to the futex for the futex word at"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr2 ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If this value is greater than"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "then difference is the number of waiters requeued to the futex for"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the futex word at"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr2 ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT_REQUEUE_PI"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Returns 0 if the caller was successfully requeued to the futex for"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the futex word at"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr2 ."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " ERRORS"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EACCES"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "No read access to the memory of a futex word."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EAGAIN"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( FUTEX_WAIT ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT_BITSET ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT_REQUEUE_PI )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The value pointed to by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "was not equal to the expected value"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "at the time of the call."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " Note :"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "on Linux, the symbolic names"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EAGAIN"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EWOULDBLOCK"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(both of which appear in different parts of the kernel futex code)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "have the same value."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EAGAIN"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( FUTEX_CMP_REQUEUE ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_CMP_REQUEUE_PI )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The value pointed to by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is not equal to the expected value"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val3 ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EAGAIN"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( FUTEX_LOCK_PI ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_TRYLOCK_PI ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_CMP_REQUEUE_PI )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The futex owner thread ID of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_CMP_REQUEUE_PI :"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr2 )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is about to exit,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "but has not yet handled the internal state cleanup."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Try again."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EDEADLK"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( FUTEX_LOCK_PI ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_TRYLOCK_PI ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_CMP_REQUEUE_PI )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The futex word at"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is already locked by the caller."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EDEADLK"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" FIXME . I see that kernel/locking/rtmutex.c uses EDEADLK in some"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"       places, and EDEADLOCK in others. On almost all architectures"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"       these constants are synonymous. Is there a reason that both"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"       names are used?"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"       tglx (July 2015): \"No. We should probably fix that.\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( FUTEX_CMP_REQUEUE_PI )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "While requeueing a waiter to the PI futex for the futex word at"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr2 ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the kernel detected a deadlock."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EFAULT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A required pointer argument (i.e.,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr2 ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " timeout )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "did not point to a valid user-space address."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINTR"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT_BITSET"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "operation was interrupted by a signal (see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " signal (7))."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "In kernels before Linux 2.6.22, this error could also be returned for"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "a spurious wakeup; since Linux 2.6.22, this no longer happens."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINVAL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The operation in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " futex_op"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is one of those that employs a timeout, but the supplied"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " timeout"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "argument was invalid"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( tv_sec"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "was less than zero, or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " tv_nsec"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "was not less than 1,000,000,000)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINVAL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The operation specified in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " futex_op"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "employs one or both of the pointers"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr2 ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "but one of these does not point to a valid object"
        },
        {
          "type": "ESCAPE",
          "content": "\\(em"
        },
        {
          "type": "TEXT",
          "content": "that is,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the address is not four-byte-aligned."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINVAL"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( FUTEX_WAIT_BITSET ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAKE_BITSET )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The bit mask supplied in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val3"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is zero."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINVAL"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( FUTEX_CMP_REQUEUE_PI )"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "equals"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr2"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(i.e., an attempt was made to requeue to the same futex)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINVAL"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( FUTEX_FD )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The signal number supplied in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is invalid."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINVAL"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( FUTEX_WAKE ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAKE_OP ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAKE_BITSET ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_REQUEUE ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_CMP_REQUEUE )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The kernel detected an inconsistency between the user-space state at"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and the kernel state"
        },
        {
          "type": "ESCAPE",
          "content": "\\(em"
        },
        {
          "type": "TEXT",
          "content": "that is, it detected a waiter which waits in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_LOCK_PI"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "on"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINVAL"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( FUTEX_LOCK_PI ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_TRYLOCK_PI ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_UNLOCK_PI )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The kernel detected an inconsistency between the user-space state at"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and the kernel state."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This indicates either state corruption"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or that the kernel found a waiter on"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "which is waiting via"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT_BITSET ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINVAL"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( FUTEX_CMP_REQUEUE_PI )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The kernel detected an inconsistency between the user-space state at"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr2"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and the kernel state;"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" From a conversation with Thomas Gleixner (Aug 2015): ###"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tThe kernel sees: I have non PI state for a futex you tried to"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     tell me was PI"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "that is, the kernel detected a waiter which waits via"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT_BITSET"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "on"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr2 ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINVAL"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( FUTEX_CMP_REQUEUE_PI )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The kernel detected an inconsistency between the user-space state at"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and the kernel state;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "that is, the kernel detected a waiter which waits via"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT_BITESET"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "on"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINVAL"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( FUTEX_CMP_REQUEUE_PI )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The kernel detected an inconsistency between the user-space state at"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and the kernel state;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "that is, the kernel detected a waiter which waits on"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "via"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_LOCK_PI"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(instead of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT_REQUEUE_PI )."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINVAL"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( FUTEX_CMP_REQUEUE_PI )"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" This deals with the case:"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     wait_requeue_pi(A, B);"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     requeue_pi(A, C);"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "An attempt was made to requeue a waiter to a futex other than that"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "specified by the matching"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT_REQUEUE_PI"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "call for that waiter."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINVAL"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( FUTEX_CMP_REQUEUE_PI )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " val"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "argument is not 1."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINVAL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Invalid argument."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ENFILE"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( FUTEX_FD )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The system-wide limit on the total number of open files has been reached."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ENOMEM"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( FUTEX_LOCK_PI ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_TRYLOCK_PI ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_CMP_REQUEUE_PI )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The kernel could not allocate memory to hold state information."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ENOSYS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Invalid operation specified in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " futex_op ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ENOSYS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_CLOCK_REALTIME"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "option was specified in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " futex_op ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "but the accompanying operation was neither"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT_BITSET ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "nor"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT_REQUEUE_PI ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ENOSYS"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( FUTEX_LOCK_PI ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_TRYLOCK_PI ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_UNLOCK_PI ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_CMP_REQUEUE_PI ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT_REQUEUE_PI )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A run-time check determined that the operation is not available."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The PI-futex operations are not implemented on all architectures and"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are not supported on some CPU variants."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EPERM"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( FUTEX_LOCK_PI ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_TRYLOCK_PI ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_CMP_REQUEUE_PI )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The caller is not allowed to attach itself to the futex at"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_CMP_REQUEUE_PI :"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the futex at"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr2 )."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(This may be caused by a state corruption in user space.)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EPERM"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( FUTEX_UNLOCK_PI )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The caller does not own the lock represented by the futex word."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ESRCH"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( FUTEX_LOCK_PI ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_TRYLOCK_PI ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_CMP_REQUEUE_PI )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The thread ID in the futex word at"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "does not exist."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ESRCH"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( FUTEX_CMP_REQUEUE_PI )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The thread ID in the futex word at"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uaddr2"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "does not exist."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ETIMEDOUT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The operation in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " futex_op"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "employed the timeout specified in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " timeout ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and the timeout expired before the operation completed."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " VERSIONS"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Futexes were first made available in a stable kernel release"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with Linux 2.6.0."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Initial futex support was merged in Linux 2.5.7 but with different"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "semantics from what was described above."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A four-argument system call with the semantics"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "described in this page was introduced in Linux 2.5.40."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A fifth argument was added in Linux 2.5.70,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and a sixth argument was added in Linux 2.6.7."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " CONFORMING TO"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "This system call is Linux-specific."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " NOTES"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Glibc does not provide a wrapper for this system call; call it using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " syscall (2)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Several higher-level programming abstractions are implemented via futexes,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "including POSIX semaphores and"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "various POSIX threads synchronization mechanisms"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(mutexes, condition variables, read-write locks, and barriers)."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" TODO FIXME(Torvald) Above, we cite this section and claim it contains"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" details on the synchronization semantics; add the C11 equivalents"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" here (or whatever we find consensus for)."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " EXAMPLE"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The program below demonstrates use of futexes in a program where a parent"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "process and a child process use a pair of futexes located inside a"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "shared anonymous mapping to synchronize access to a shared resource:"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the terminal."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The two processes each write"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " nloops"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(a command-line argument that defaults to 5 if omitted)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "messages to the terminal and employ a synchronization protocol"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "that ensures that they alternate in writing messages."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Upon running this program we see output such as the following:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "$ "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "B./futex_demo"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Parent (18534) 0"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Child  (18535) 0"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Parent (18534) 1"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Child  (18535) 1"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Parent (18534) 2"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Child  (18535) 2"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Parent (18534) 3"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Child  (18535) 3"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Parent (18534) 4"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Child  (18535) 4"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Program source"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "ESCAPE",
          "content": "\\&"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "/* futex_demo.c"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "   Usage: futex_demo [nloops]"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                    (Default: 5)"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "   Demonstrate the use of futexes in a program where parent and child"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "   use a pair of futexes located inside a shared anonymous mapping to"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "   synchronize access to a shared resource: the terminal. The two"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "   processes each write "
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": "num"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "loops"
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": " messages to the terminal and employ"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "   a synchronization protocol that ensures that they alternate in"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "   writing messages."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "*/"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#define _GNU_SOURCE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#include <stdio.h>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#include <errno.h>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#include <stdatomic.h>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#include <stdlib.h>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#include <unistd.h>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#include <sys/wait.h>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#include <sys/mman.h>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#include <sys/syscall.h>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#include <linux/futex.h>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#include <sys/time.h>"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "#define errExit(msg)    do { perror(msg); exit(EXIT_FAILURE); "
        },
        {
          "type": "ESCAPE",
          "content": "\\\\"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                        } while (0)"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "static int *futex1, *futex2, *iaddr;"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "static int"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "futex(int *uaddr, int futex_op, int val,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "      const struct timespec *timeout, int *uaddr2, int val3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "{"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    return syscall(SYS_futex, uaddr, futex_op, val,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                   timeout, uaddr, val3);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "}"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "/* Acquire the futex pointed to by "
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": "futexp"
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": ": wait for its value to"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "   become 1, and then set the value to 0. */"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "static void"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "fwait(int *futexp)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "{"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    int s;"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    /* atomic_compare_exchange_strong(ptr, oldval, newval)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "       atomically performs the equivalent of:"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "           if (*ptr == *oldval)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "               *ptr = newval;"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "       It returns true if the test yielded true and *ptr was updated. */"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    while (1) {"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "        /* Is the futex available? */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        const int zero = 0;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        if (atomic_compare_exchange_strong(futexp, &zero, 1))"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "            break;      /* Yes */"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "        /* Futex is not available; wait */"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "        s = futex(futexp, FUTEX_WAIT, 0, NULL, NULL, 0);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        if (s == "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "1 && errno != EAGAIN)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "            errExit(\"futex"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "FUTEX_WAIT\");"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    }"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "}"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "/* Release the futex pointed to by "
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": "futexp"
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": ": if the futex currently"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "   has the value 0, set its value to 1 and the wake any futex waiters,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "   so that if the peer is blocked in fpost(), it can proceed. */"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "static void"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "fpost(int *futexp)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "{"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    int s;"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    /* atomic_compare_exchange_strong() was described in comments above */"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    const int one = 1;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    if (atomic_compare_exchange_strong(futexp, &one, 0)) {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        s = futex(futexp, FUTEX_WAKE, 1, NULL, NULL, 0);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        if (s  == "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "1)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "            errExit(\"futex"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "FUTEX_WAKE\");"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    }"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "}"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "int"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "main(int argc, char *argv[])"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "{"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    pid_t childPid;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    int j, nloops;"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    setbuf(stdout, NULL);"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    nloops = (argc > 1) ? atoi(argv[1]) : 5;"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    /* Create a shared anonymous mapping that will hold the futexes."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "       Since the futexes are being shared between processes, we"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "       subsequently use the \"shared\" futex operations (i.e., not the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "       ones suffixed \"_PRIVATE\") */"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    iaddr = mmap(NULL, sizeof(int) * 2, PROT_READ | PROT_WRITE,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                MAP_ANONYMOUS | MAP_SHARED, "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "1, 0);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    if (iaddr == MAP_FAILED)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        errExit(\"mmap\");"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    futex1 = &iaddr[0];"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    futex2 = &iaddr[1];"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    *futex1 = 0;        /* State: unavailable */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    *futex2 = 1;        /* State: available */"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    /* Create a child process that inherits the shared anonymous"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "       mapping */"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    childPid = fork();"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    if (childPid == "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "1)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        errExit(\"fork\");"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    if (childPid == 0) {        /* Child */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        for (j = 0; j < nloops; j++) {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "            fwait(futex1);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "            printf(\"Child  (%ld) %d"
        },
        {
          "type": "ESCAPE",
          "content": "\\\\"
        },
        {
          "type": "TEXT",
          "content": "n\", (long) getpid(), j);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "            fpost(futex2);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        }"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "        exit(EXIT_SUCCESS);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    }"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    /* Parent falls through to here */"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    for (j = 0; j < nloops; j++) {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        fwait(futex2);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        printf(\"Parent (%ld) %d"
        },
        {
          "type": "ESCAPE",
          "content": "\\\\"
        },
        {
          "type": "TEXT",
          "content": "n\", (long) getpid(), j);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        fpost(futex1);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    }"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    wait(NULL);"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    exit(EXIT_SUCCESS);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "}"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " SEE ALSO"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".ad",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " l"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " get_robust_list (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " restart_syscall (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthread_mutexattr_getprotocol (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " futex (7),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sched (7)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The following kernel source files:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " * 2"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " Documentation/pi-futex.txt"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " Documentation/futex-requeue-pi.txt"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " Documentation/locking/rt-mutex.txt"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " Documentation/locking/rt-mutex-design.txt"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " Documentation/robust-futex-ABI.txt"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Franke, H., Russell, R., and Kirwood, M., 2002."
        }
      ],
      [
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "IFuss, Futexes and Furwocks: Fast Userlevel Locking in Linux"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(from proceedings of the Ottawa Linux Symposium 2002),"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".br",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".UR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " http://kernel.org"
        },
        {
          "type": "ESCAPE",
          "content": "\\:"
        },
        {
          "type": "TEXT",
          "content": "/doc"
        },
        {
          "type": "ESCAPE",
          "content": "\\:"
        },
        {
          "type": "TEXT",
          "content": "/ols"
        },
        {
          "type": "ESCAPE",
          "content": "\\:"
        },
        {
          "type": "TEXT",
          "content": "/2002"
        },
        {
          "type": "ESCAPE",
          "content": "\\:"
        },
        {
          "type": "TEXT",
          "content": "/ols2002"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "pages"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "479"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "495.pdf"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".UE",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Hart, D., 2009. "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "IA futex overview and update"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".UR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " http://lwn.net/Articles/360699/"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".UE",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Hart, D. and Guniguntala, D., 2009."
        }
      ],
      [
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "IRequeue-PI: Making Glibc Condvars PI-Aware"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(from proceedings of the 2009 Real-Time Linux Workshop),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".UR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " http://lwn.net/images/conf/rtlws11/papers/proc/p10.pdf"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".UE",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Drepper, U., 2011. "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "IFutexes Are Tricky"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".UR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " http://www.akkadia.org/drepper/futex.pdf"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".UE",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Futex example library, futex-*.tar.bz2 at"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".br",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".UR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ftp://ftp.kernel.org"
        },
        {
          "type": "ESCAPE",
          "content": "\\:"
        },
        {
          "type": "TEXT",
          "content": "/pub"
        },
        {
          "type": "ESCAPE",
          "content": "\\:"
        },
        {
          "type": "TEXT",
          "content": "/linux"
        },
        {
          "type": "ESCAPE",
          "content": "\\:"
        },
        {
          "type": "TEXT",
          "content": "/kernel"
        },
        {
          "type": "ESCAPE",
          "content": "\\:"
        },
        {
          "type": "TEXT",
          "content": "/people"
        },
        {
          "type": "ESCAPE",
          "content": "\\:"
        },
        {
          "type": "TEXT",
          "content": "/rusty/"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".UE",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" FIXME(Torvald) We should probably refer to the glibc code here, in"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" particular the glibc-internal futex wrapper functions that are"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" WIP, and the generic pthread_mutex_t and perhaps condvar"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" implementations."
        }
      ]
    ]
  }
]
