[
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Copyright (c) 1993 Michael Haardt <michael@moria.de>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Fri Apr  2 11:32:09 MET DST 1993"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" and changes Copyright (C) 1999 Mike Coleman (mkc@acm.org)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" -- major revision to fully document ptrace semantics per recent Linux"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"    kernel (2.2.10) and glibc (2.1.2)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Sun Nov  7 03:18:35 CST 1999"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" and Copyright (c) 2011, Denys Vlasenko <vda.linux@googlemail.com>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" and Copyright (c) 2015, 2016, Michael Kerrisk <mtk.manpages@gmail.com>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" %%%LICENSE_START(GPLv2+_DOC_FULL)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" This is free documentation; you can redistribute it and/or"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" modify it under the terms of the GNU General Public License as"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" published by the Free Software Foundation; either version 2 of"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" the License, or (at your option) any later version."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" The GNU General Public License's references to \"object code\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" and \"executables\" are to be interpreted as the output of any"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" document formatting or typesetting system, including"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" intermediate and printed output."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" This manual is distributed in the hope that it will be useful,"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" but WITHOUT ANY WARRANTY; without even the implied warranty of"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" GNU General Public License for more details."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" You should have received a copy of the GNU General Public"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" License along with this manual; if not, see"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" <http://www.gnu.org/licenses/>."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" %%%LICENSE_END"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Modified Fri Jul 23 23:47:18 1993 by Rik Faith <faith@cs.unc.edu>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Modified Fri Jan 31 16:46:30 1997 by Eric S. Raymond <esr@thyrsus.com>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Modified Thu Oct  7 17:28:49 1999 by Andries Brouwer <aeb@cwi.nl>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Modified, 27 May 2004, Michael Kerrisk <mtk.manpages@gmail.com>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     Added notes on capability requirements"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 2006-03-24, Chuck Ebbert <76306.1226@compuserve.com>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"    Added    PTRACE_SETOPTIONS, PTRACE_GETEVENTMSG, PTRACE_GETSIGINFO,"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"        PTRACE_SETSIGINFO, PTRACE_SYSEMU, PTRACE_SYSEMU_SINGLESTEP"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"    (Thanks to Blaisorblade, Daniel Jacobowitz and others who helped.)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 2011-09, major update by Denys Vlasenko <vda.linux@googlemail.com>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 2015-01, Kees Cook <keescook@chromium.org>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"    Added PTRACE_O_TRACESECCOMP, PTRACE_EVENT_SECCOMP"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" FIXME The following are undocumented:"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" PTRACE_GETWMMXREGS"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" PTRACE_SETWMMXREGS"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tARM"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" \tLinux 2.6.12"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" PTRACE_SET_SYSCALL"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tARM and ARM64"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tLinux 2.6.16"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tcommit 3f471126ee53feb5e9b210ea2f525ed3bb9b7a7f"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tAuthor: Nicolas Pitre <nico@cam.org>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tDate:   Sat Jan 14 19:30:04 2006 +0000"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" PTRACE_GETCRUNCHREGS"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" PTRACE_SETCRUNCHREGS"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tARM"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tLinux 2.6.18"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tcommit 3bec6ded282b331552587267d67a06ed7fd95ddd"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tAuthor: Lennert Buytenhek <buytenh@wantstofly.org>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tDate:   Tue Jun 27 22:56:18 2006 +0100"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" PTRACE_GETVFPREGS"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" PTRACE_SETVFPREGS"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tARM and ARM64"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tLinux 2.6.30"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tcommit 3d1228ead618b88e8606015cbabc49019981805d"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tAuthor: Catalin Marinas <catalin.marinas@arm.com>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tDate:   Wed Feb 11 13:12:56 2009 +0100"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" PTRACE_GETHBPREGS"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" PTRACE_SETHBPREGS"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tARM and ARM64"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tLinux 2.6.37"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tcommit 864232fa1a2f8dfe003438ef0851a56722740f3e"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tAuthor: Will Deacon <will.deacon@arm.com>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tDate:   Fri Sep 3 10:42:55 2010 +0100"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" PTRACE_SINGLEBLOCK"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tSince at least Linux 2.4.0 on various architectures"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tSince Linux 2.6.25 on x86 (and others?)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tcommit 5b88abbf770a0e1975c668743100f42934f385e8"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tAuthor: Roland McGrath <roland@redhat.com>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tDate:   Wed Jan 30 13:30:53 2008 +0100"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t    ptrace: generic PTRACE_SINGLEBLOCK"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" PTRACE_GETFPXREGS"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" PTRACE_SETFPXREGS"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tSince at least Linux 2.4.0 on various architectures"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" PTRACE_GETFDPIC"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" PTRACE_GETFDPIC_EXEC"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" PTRACE_GETFDPIC_INTERP"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tblackfin, c6x, frv, sh"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tFirst appearance in Linux 2.6.11 on frv"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" and others that can be found in the arch/*/include/uapi/asm/ptrace files"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TH",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE 2 2018-04-30 \"Linux\" \"Linux Programmer's Manual\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " NAME"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "ptrace "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": " process trace"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " SYNOPSIS"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".nf",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " #include <sys/ptrace.h>"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".BI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"long ptrace(enum __ptrace_request \" request \", pid_t \" pid \", \""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".BI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"            void *\" addr \", void *\" data );"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".fi",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " DESCRIPTION"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ptrace ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "system call provides a means by which one process (the \"tracer\")"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "may observe and control the execution of another process (the \"tracee\"),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and examine and change the tracee's memory and registers."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "It is primarily used to implement breakpoint debugging and system"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "call tracing."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "A tracee first needs to be attached to the tracer."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Attachment and subsequent commands are per thread:"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in a multithreaded process,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "every thread can be individually attached to a"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(potentially different) tracer,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or left not attached and thus not debugged."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Therefore, \"tracee\" always means \"(one) thread\","
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "never \"a (possibly multithreaded) process\"."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Ptrace commands are always sent to"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "a specific tracee using a call of the form"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    ptrace(PTRACE_foo, pid, ...)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "where"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pid"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is the thread ID of the corresponding Linux thread."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "(Note that in this page, a \"multithreaded process\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "means a thread group consisting of threads created using the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " clone (2)"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_THREAD"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "flag.)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "A process can initiate a trace by calling"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " fork (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and having the resulting child do a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_TRACEME ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "followed (typically) by an"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " execve (2)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Alternatively, one process may commence tracing another process using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_ATTACH"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SEIZE ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "While being traced, the tracee will stop each time a signal is delivered,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "even if the signal is being ignored."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(An exception is"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGKILL ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "which has its usual effect.)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The tracer will be notified at its next call to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " waitpid (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(or one of the related \"wait\" system calls); that call will return a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " status"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "value containing information that indicates"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the cause of the stop in the tracee."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "While the tracee is stopped,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the tracer can use various ptrace requests to inspect and modify the tracee."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The tracer then causes the tracee to continue,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "optionally ignoring the delivered signal"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(or even delivering a different signal instead)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_O_TRACEEXEC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "option is not in effect, all successful calls to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " execve (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "by the traced process will cause it to be sent a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGTRAP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "signal,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "giving the parent a chance to gain control before the new program"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "begins execution."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "When the tracer is finished tracing, it can cause the tracee to continue"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "executing in a normal, untraced mode via"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_DETACH ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The value of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " request"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "determines the action to be performed:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_TRACEME"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Indicate that this process is to be traced by its parent."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A process probably shouldn't make this request if its parent"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "isn't expecting to trace it."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( pid ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " addr ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " data"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are ignored.)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_TRACEME"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "request is used only by the tracee;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the remaining requests are used only by the tracer."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "In the following requests,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pid"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "specifies the thread ID of the tracee to be acted on."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For requests other than"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_ATTACH ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SEIZE ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_INTERRUPT ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_KILL ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the tracee must be stopped."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_PEEKTEXT \", \" PTRACE_PEEKDATA"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Read a word at the address"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " addr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in the tracee's memory, returning the word as the result of the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ptrace ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "call."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Linux does not have separate text and data address spaces,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "so these two requests are currently equivalent."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( data"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is ignored; but see NOTES.)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_PEEKUSER"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" PTRACE_PEEKUSR in kernel source, but glibc uses PTRACE_PEEKUSER,"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" and that is the name that seems common on other systems."
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Read a word at offset"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " addr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in the tracee's USER area,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "which holds the registers and other information about the process"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " <sys/user.h> )."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The word is returned as the result of the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ptrace ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "call."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Typically, the offset must be word-aligned, though this might vary by"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "architecture."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "See NOTES."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( data"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is ignored; but see NOTES.)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_POKETEXT \", \" PTRACE_POKEDATA"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Copy the word"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " data"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to the address"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " addr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in the tracee's memory."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "As for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_PEEKTEXT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_PEEKDATA ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "these two requests are currently equivalent."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_POKEUSER"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" PTRACE_POKEUSR in kernel source, but glibc uses PTRACE_POKEUSER,"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" and that is the name that seems common on other systems."
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Copy the word"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " data"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to offset"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " addr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in the tracee's USER area."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "As for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_PEEKUSER ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the offset must typically be word-aligned."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "In order to maintain the integrity of the kernel,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "some modifications to the USER area are disallowed."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" FIXME In the preceding sentence, which modifications are disallowed,"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" and when they are disallowed, how does user space discover that fact?"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_GETREGS \", \" PTRACE_GETFPREGS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Copy the tracee's general-purpose or floating-point registers,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "respectively, to the address"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " data"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in the tracer."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "See"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " <sys/user.h>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for information on the format of this data."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( addr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is ignored.)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Note that SPARC systems have the meaning of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " data"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " addr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "reversed; that is,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " data"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is ignored and the registers are copied to the address"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " addr ."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_GETREGS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_GETFPREGS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are not present on all architectures."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_GETREGSET \" (since Linux 2.6.34)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Read the tracee's registers."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " addr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "specifies, in an architecture-dependent way, the type of registers to be read."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_PRSTATUS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(with numerical value 1)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "usually results in reading of general-purpose registers."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the CPU has, for example,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "floating-point and/or vector registers, they can be retrieved by setting"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " addr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to the corresponding"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_foo"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "constant."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " data"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "points to a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"struct iovec\" ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "which describes the destination buffer's location and length."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "On return, the kernel modifies"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " iov.len"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to indicate the actual number of bytes returned."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SETREGS \", \" PTRACE_SETFPREGS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Modify the tracee's general-purpose or floating-point registers,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "respectively, from the address"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " data"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in the tracer."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "As for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_POKEUSER ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "some general-purpose register modifications may be disallowed."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" FIXME . In the preceding sentence, which modifications are disallowed,"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" and when they are disallowed, how does user space discover that fact?"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( addr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is ignored.)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Note that SPARC systems have the meaning of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " data"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " addr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "reversed; that is,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " data"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is ignored and the registers are copied from the address"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " addr ."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SETREGS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SETFPREGS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are not present on all architectures."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SETREGSET \" (since Linux 2.6.34)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Modify the tracee's registers."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The meaning of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " addr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " data"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is analogous to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_GETREGSET ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_GETSIGINFO \" (since Linux 2.3.99-pre6)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Retrieve information about the signal that caused the stop."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Copy a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " siginfo_t"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "structure (see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sigaction (2))"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "from the tracee to the address"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " data"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in the tracer."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( addr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is ignored.)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SETSIGINFO \" (since Linux 2.3.99-pre6)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Set signal information:"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "copy a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " siginfo_t"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "structure from the address"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " data"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in the tracer to the tracee."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This will affect only signals that would normally be delivered to"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the tracee and were caught by the tracer."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "It may be difficult to tell"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "these normal signals from synthetic signals generated by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ptrace ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "itself."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( addr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is ignored.)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_PEEKSIGINFO \" (since Linux 3.10)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" commit 84c751bd4aebbaae995fe32279d3dba48327bad4"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Retrieve"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " siginfo_t"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "structures without removing signals from a queue."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " addr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "points to a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ptrace_peeksiginfo_args"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "structure that specifies the ordinal position from which"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "copying of signals should start,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and the number of signals to copy."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " siginfo_t"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "structures are copied into the buffer pointed to by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " data ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The return value contains the number of copied signals (zero indicates"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "that there is no signal corresponding to the specified ordinal position)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Within the returned"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " siginfo"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "structures,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " si_code"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "field includes information"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( __SI_CHLD ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " __SI_FAULT ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "etc.) that are not otherwise exposed to user space."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "struct ptrace_peeksiginfo_args {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    u64 off;    /* Ordinal position in queue at which"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                   to start copying signals */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    u32 flags;  /* PTRACE_PEEKSIGINFO_SHARED or 0 */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    s32 nr;     /* Number of signals to copy */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "};"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Currently, there is only one flag,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_PEEKSIGINFO_SHARED ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for dumping signals from the process-wide signal queue."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If this flag is not set,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "signals are read from the per-thread queue of the specified thread."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_GETSIGMASK \" (since Linux 3.11)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" commit 29000caecbe87b6b66f144f72111f0d02fbbf0c1"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Place a copy of the mask of blocked signals (see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sigprocmask (2))"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in the buffer pointed to by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " data ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "which should be a pointer to a buffer of type"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sigset_t ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " addr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "argument contains the size of the buffer pointed to by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " data"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(i.e.,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sizeof(sigset_t) )."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SETSIGMASK \" (since Linux 3.11)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Change the mask of blocked signals (see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sigprocmask (2))"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to the value specified in the buffer pointed to by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " data ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "which should be a pointer to a buffer of type"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sigset_t ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " addr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "argument contains the size of the buffer pointed to by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " data"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(i.e.,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sizeof(sigset_t) )."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SETOPTIONS \" (since Linux 2.4.6; see BUGS for caveats)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Set ptrace options from"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " data ."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( addr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is ignored.)"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " data"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is interpreted as a bit mask of options,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "which are specified by the following flags:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RS",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_O_EXITKILL \" (since Linux 3.8)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" commit 992fb6e170639b0849bace8e49bf31bd37c4123"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Send a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGKILL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "signal to the tracee if the tracer exits."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This option is useful for ptrace jailers that"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "want to ensure that tracees can never escape the tracer's control."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_O_TRACECLONE \" (since Linux 2.5.46)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Stop the tracee at the next"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " clone (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and automatically start tracing the newly cloned process,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "which will start with a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGSTOP ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_STOP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "if"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SEIZE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "was used."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " waitpid (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "by the tracer will return a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " status"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "value such that"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".nf",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "  status>>8 == (SIGTRAP | (PTRACE_EVENT_CLONE<<8))"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".fi",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The PID of the new process can be retrieved with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_GETEVENTMSG ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "This option may not catch"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " clone (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "calls in all cases."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the tracee calls"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " clone (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_VFORK"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "flag,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_VFORK"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "will be delivered instead"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "if"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_O_TRACEVFORK"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is set; otherwise if the tracee calls"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " clone (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with the exit signal set to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGCHLD ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_FORK"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "will be delivered if"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_O_TRACEFORK"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is set."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_O_TRACEEXEC \" (since Linux 2.5.46)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Stop the tracee at the next"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " execve (2)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " waitpid (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "by the tracer will return a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " status"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "value such that"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".nf",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "  status>>8 == (SIGTRAP | (PTRACE_EVENT_EXEC<<8))"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".fi",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If the execing thread is not a thread group leader,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the thread ID is reset to thread group leader's ID before this stop."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Since Linux 3.0, the former thread ID can be retrieved with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_GETEVENTMSG ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_O_TRACEEXIT \" (since Linux 2.5.60)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Stop the tracee at exit."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " waitpid (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "by the tracer will return a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " status"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "value such that"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".nf",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "  status>>8 == (SIGTRAP | (PTRACE_EVENT_EXIT<<8))"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".fi",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The tracee's exit status can be retrieved with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_GETEVENTMSG ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The tracee is stopped early during process exit,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "when registers are still available,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "allowing the tracer to see where the exit occurred,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "whereas the normal exit notification is done after the process"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is finished exiting."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Even though context is available,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the tracer cannot prevent the exit from happening at this point."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_O_TRACEFORK \" (since Linux 2.5.46)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Stop the tracee at the next"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " fork (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and automatically start tracing the newly forked process,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "which will start with a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGSTOP ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_STOP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "if"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SEIZE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "was used."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " waitpid (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "by the tracer will return a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " status"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "value such that"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".nf",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "  status>>8 == (SIGTRAP | (PTRACE_EVENT_FORK<<8))"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".fi",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The PID of the new process can be retrieved with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_GETEVENTMSG ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_O_TRACESYSGOOD \" (since Linux 2.4.6)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "When delivering system call traps, set bit 7 in the signal number"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(i.e., deliver"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"SIGTRAP|0x80\" )."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This makes it easy for the tracer to distinguish"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "normal traps from those caused by a system call."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_O_TRACEVFORK \" (since Linux 2.5.46)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Stop the tracee at the next"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " vfork (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and automatically start tracing the newly vforked process,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "which will start with a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGSTOP ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_STOP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "if"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SEIZE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "was used."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " waitpid (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "by the tracer will return a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " status"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "value such that"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".nf",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "  status>>8 == (SIGTRAP | (PTRACE_EVENT_VFORK<<8))"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".fi",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The PID of the new process can be retrieved with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_GETEVENTMSG ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_O_TRACEVFORKDONE \" (since Linux 2.5.60)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Stop the tracee at the completion of the next"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " vfork (2)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " waitpid (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "by the tracer will return a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " status"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "value such that"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".nf",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "  status>>8 == (SIGTRAP | (PTRACE_EVENT_VFORK_DONE<<8))"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".fi",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The PID of the new process can (since Linux 2.6.18) be retrieved with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_GETEVENTMSG ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_O_TRACESECCOMP \" (since Linux 3.5)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Stop the tracee when a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " seccomp (2)"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SECCOMP_RET_TRACE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "rule is triggered."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " waitpid (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "by the tracer will return a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " status"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "value such that"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".nf",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "  status>>8 == (SIGTRAP | (PTRACE_EVENT_SECCOMP<<8))"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".fi",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "While this triggers a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "stop, it is similar to a syscall-enter-stop."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For details, see the note on"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_SECCOMP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "below."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The seccomp event message data (from the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SECCOMP_RET_DATA"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "portion of the seccomp filter rule) can be retrieved with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_GETEVENTMSG ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_O_SUSPEND_SECCOMP \" (since Linux 4.3)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" commit 13c4a90119d28cfcb6b5bdd820c233b86c2b0237"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Suspend the tracee's seccomp protections."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This applies regardless of mode, and"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "can be used when the tracee has not yet installed seccomp filters."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "That is, a valid use case is to suspend a tracee's seccomp protections"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "before they are installed by the tracee,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "let the tracee install the filters,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and then clear this flag when the filters should be resumed."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Setting this option requires that the tracer have the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CAP_SYS_ADMIN"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "capability,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "not have any seccomp protections installed, and not have"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_O_SUSPEND_SECCOMP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "set on itself."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RE",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_GETEVENTMSG \" (since Linux 2.5.46)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Retrieve a message (as an"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"unsigned long\" )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "about the ptrace event"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "that just happened, placing it at the address"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " data"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in the tracer."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_EXIT ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "this is the tracee's exit status."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_FORK ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_VFORK ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_VFORK_DONE ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_CLONE ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "this is the PID of the new process."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_SECCOMP ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "this is the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " seccomp (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "filter's"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SECCOMP_RET_DATA"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "associated with the triggered rule."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( addr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is ignored.)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_CONT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Restart the stopped tracee process."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " data"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is nonzero,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "it is interpreted as the number of a signal to be delivered to the tracee;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "otherwise, no signal is delivered."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Thus, for example, the tracer can control"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "whether a signal sent to the tracee is delivered or not."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( addr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is ignored.)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SYSCALL \", \" PTRACE_SINGLESTEP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Restart the stopped tracee as for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_CONT ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "but arrange for the tracee to be stopped at"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the next entry to or exit from a system call,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or after execution of a single instruction, respectively."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(The tracee will also, as usual, be stopped upon receipt of a signal.)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "From the tracer's perspective, the tracee will appear to have been"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "stopped by receipt of a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGTRAP ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "So, for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SYSCALL ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for example, the idea is to inspect"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the arguments to the system call at the first stop,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "then do another"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SYSCALL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and inspect the return value of the system call at the second stop."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " data"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "argument is treated as for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_CONT ."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( addr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is ignored.)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SYSEMU \", \" PTRACE_SYSEMU_SINGLESTEP \" (since Linux 2.6.14)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SYSEMU ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "continue and stop on entry to the next system call,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "which will not be executed."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "See the documentation on syscall-stops below."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SYSEMU_SINGLESTEP ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "do the same but also singlestep if not a system call."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This call is used by programs like"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "User Mode Linux that want to emulate all the tracee's system calls."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " data"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "argument is treated as for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_CONT ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " addr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "argument is ignored."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "These requests are currently"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" As at 3.7"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "supported only on x86."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_LISTEN \" (since Linux 3.4)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Restart the stopped tracee, but prevent it from executing."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The resulting state of the tracee is similar to a process which"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "has been stopped by a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGSTOP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(or other stopping signal)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "See the \"group-stop\" subsection for additional information."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_LISTEN"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "works only on tracees attached by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SEIZE ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_KILL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Send the tracee a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGKILL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to terminate it."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( addr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " data"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are ignored.)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " This operation is deprecated; do not use it!"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Instead, send a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGKILL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "directly using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " kill (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " tgkill (2)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The problem with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_KILL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is that it requires the tracee to be in signal-delivery-stop,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "otherwise it may not work"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(i.e., may complete successfully but won't kill the tracee)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "By contrast, sending a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGKILL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "directly has no such limitation."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" [Note from Denys Vlasenko:"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     deprecation suggested by Oleg Nesterov. He prefers to deprecate it"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     instead of describing (and needing to support) PTRACE_KILL's quirks.]"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_INTERRUPT \" (since Linux 3.4)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Stop a tracee."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the tracee is running or sleeping in kernel space and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SYSCALL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is in effect,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the system call is interrupted and syscall-exit-stop is reported."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(The interrupted system call is restarted when the tracee is restarted.)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the tracee was already stopped by a signal and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_LISTEN"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "was sent to it,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the tracee stops with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_STOP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " WSTOPSIG(status)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "returns the stop signal."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If any other ptrace-stop is generated at the same time (for example,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "if a signal is sent to the tracee), this ptrace-stop happens."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If none of the above applies (for example, if the tracee is running in user"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "space), it stops with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_STOP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " WSTOPSIG(status)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "=="
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGTRAP ."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_INTERRUPT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "only works on tracees attached by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SEIZE ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_ATTACH"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Attach to the process specified in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pid ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "making it a tracee of the calling process."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" No longer true (removed by Denys Vlasenko, 2011, who remarks:"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"        \"I think it isn't true in non-ancient 2.4 and in 2.6/3.x."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"         Basically, it's not true for any Linux in practical use."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" ; the behavior of the tracee is as if it had done a"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .BR PTRACE_TRACEME ."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" The calling process actually becomes the parent of the tracee"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" process for most purposes (e.g., it will receive"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" notification of tracee events and appears in"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .BR ps (1)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" output as the tracee's parent), but a"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .BR getppid (2)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" by the tracee will still return the PID of the original parent."
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The tracee is sent a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGSTOP ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "but will not necessarily have stopped"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "by the completion of this call; use"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " waitpid (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to wait for the tracee to stop."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "See the \"Attaching and detaching\" subsection for additional information."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( addr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " data"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are ignored.)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Permission to perform a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_ATTACH"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is governed by a ptrace access mode"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_MODE_ATTACH_REALCREDS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "check; see below."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SEIZE \" (since Linux 3.4)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Noted by Dmitry Levin:"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     PTRACE_SEIZE was introduced by commit v3.1-rc1~308^2~28, but"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     it had to be used along with a temporary flag PTRACE_SEIZE_DEVEL,"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     which was removed later by commit v3.4-rc1~109^2~20."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     That is, [before] v3.4 we had a test mode of PTRACE_SEIZE API,"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     which was not compatible with the current PTRACE_SEIZE API introduced"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     in Linux 3.4."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Attach to the process specified in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pid ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "making it a tracee of the calling process."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Unlike"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_ATTACH ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SEIZE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "does not stop the process."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Group-stops are reported as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_STOP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " WSTOPSIG(status)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "returns the stop signal."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Automatically attached children stop with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_STOP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " WSTOPSIG(status)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "returns"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGTRAP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "instead of having"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGSTOP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "signal delivered to them."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " execve (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "does not deliver an extra"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGTRAP ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Only a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SEIZE d"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "process can accept"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_INTERRUPT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_LISTEN"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "commands."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The \"seized\" behavior just described is inherited by"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "children that are automatically attached using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_O_TRACEFORK ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_O_TRACEVFORK ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_O_TRACECLONE ."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " addr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "must be zero."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " data"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "contains a bit mask of ptrace options to activate immediately."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Permission to perform a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SEIZE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is governed by a ptrace access mode"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_MODE_ATTACH_REALCREDS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "check; see below."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SECCOMP_GET_FILTER \" (since Linux 4.4)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" commit f8e529ed941ba2bbcbf310b575d968159ce7e895"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "This operation allows the tracer to dump the tracee's"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "classic BPF filters."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " addr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is an integer specifying the index of the filter to be dumped."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The most recently installed filter has the index 0."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " addr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is greater than the number of installed filters,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the operation fails with the error"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ENOENT ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " data"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is either a pointer to a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"struct sock_filter\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "array that is large enough to store the BPF program,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or NULL if the program is not to be stored."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Upon success,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the return value is the number of instructions in the BPF program."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " data"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "was NULL, then this return value can be used to correctly size the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"struct sock_filter\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "array passed in a subsequent call."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "This operation fails with the error"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EACCES"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "if the caller does not have the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CAP_SYS_ADMIN"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "capability or if the caller is in strict or filter seccomp mode."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the filter referred to by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " addr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is not a classic BPF filter, the operation fails with the error"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EMEDIUMTYPE ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "This operation is available if the kernel was configured with both the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CONFIG_SECCOMP_FILTER"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CONFIG_CHECKPOINT_RESTORE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "options."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_DETACH"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Restart the stopped tracee as for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_CONT ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "but first detach from it."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Under Linux, a tracee can be detached in this way regardless"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "of which method was used to initiate tracing."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( addr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is ignored.)"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_GET_THREAD_AREA \" (since Linux 2.6.0)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This operation performs a similar task to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " get_thread_area (2)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "It reads the TLS entry in the GDT whose index is given in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " addr ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "placing a copy of the entry into the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"struct user_desc\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "pointed to by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " data ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(By contrast with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " get_thread_area (2),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " entry_number"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "of the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"struct user_desc\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is ignored.)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SET_THREAD_AREA \" (since Linux 2.6.0)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This operation performs a similar task to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " set_thread_area (2)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "It sets the TLS entry in the GDT whose index is given in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " addr ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "assigning it the data supplied in the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"struct user_desc\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "pointed to by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " data ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(By contrast with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " set_thread_area (2),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " entry_number"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "of the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"struct user_desc\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is ignored; in other words,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "this ptrace operation can't be used to allocate a free TLS entry.)"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Death under ptrace"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "When a (possibly multithreaded) process receives a killing signal"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(one whose disposition is set to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIG_DFL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and whose default action is to kill the process),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "all threads exit."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Tracees report their death to their tracer(s)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Notification of this event is delivered via"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " waitpid (2)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Note that the killing signal will first cause signal-delivery-stop"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(on one tracee only),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and only after it is injected by the tracer"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(or after it was dispatched to a thread which isn't traced),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "will death from the signal happen on"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " all"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "tracees within a multithreaded process."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(The term \"signal-delivery-stop\" is explained below.)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGKILL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "does not generate signal-delivery-stop and"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "therefore the tracer can't suppress it."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGKILL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "kills even within system calls"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(syscall-exit-stop is not generated prior to death by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGKILL )."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The net effect is that"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGKILL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "always kills the process (all its threads),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "even if some threads of the process are ptraced."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "When the tracee calls"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " _exit (2),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "it reports its death to its tracer."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Other threads are not affected."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "When any thread executes"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " exit_group (2),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "every tracee in its thread group reports its death to its tracer."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_O_TRACEEXIT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "option is on,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_EXIT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "will happen before actual death."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This applies to exits via"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " exit (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " exit_group (2),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and signal deaths (except"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGKILL ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "depending on the kernel version; see BUGS below),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and when threads are torn down on"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " execve (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in a multithreaded process."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The tracer cannot assume that the ptrace-stopped tracee exists."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "There are many scenarios when the tracee may die while stopped (such as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGKILL )."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Therefore, the tracer must be prepared to handle an"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ESRCH"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "error on any ptrace operation."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Unfortunately, the same error is returned if the tracee"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "exists but is not ptrace-stopped"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(for commands which require a stopped tracee),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or if it is not traced by the process which issued the ptrace call."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The tracer needs to keep track of the stopped/running state of the tracee,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and interpret"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ESRCH"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "as \"tracee died unexpectedly\" only if it knows that the tracee has"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "been observed to enter ptrace-stop."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Note that there is no guarantee that"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " waitpid(WNOHANG)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "will reliably report the tracee's death status if a"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ptrace operation returned"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ESRCH ."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " waitpid(WNOHANG)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "may return 0 instead."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "In other words, the tracee may be \"not yet fully dead\","
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "but already refusing ptrace requests."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The tracer can't assume that the tracee"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " always"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ends its life by reporting"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " WIFEXITED(status)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " WIFSIGNALED(status) ;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "there are cases where this does not occur."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For example, if a thread other than thread group leader does an"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " execve (2),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "it disappears;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "its PID will never be seen again,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and any subsequent ptrace stops will be reported under"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the thread group leader's PID."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Stopped states"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "A tracee can be in two states: running or stopped."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For the purposes of ptrace, a tracee which is blocked in a system call"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(such as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " read (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pause (2),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "etc.)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is nevertheless considered to be running, even if the tracee is blocked"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for a long time."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The state of the tracee after"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_LISTEN"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is somewhat of a gray area: it is not in any ptrace-stop (ptrace commands"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "won't work on it, and it will deliver"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " waitpid (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "notifications),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "but it also may be considered \"stopped\" because"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "it is not executing instructions (is not scheduled), and if it was"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in group-stop before"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_LISTEN ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "it will not respond to signals until"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGCONT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is received."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "There are many kinds of states when the tracee is stopped, and in ptrace"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "discussions they are often conflated."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Therefore, it is important to use precise terms."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "In this manual page, any stopped state in which the tracee is ready"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to accept ptrace commands from the tracer is called"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ptrace-stop ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Ptrace-stops can"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "be further subdivided into"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " signal-delivery-stop ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " group-stop ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " syscall-stop ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"PTRACE_EVENT stops\" ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and so on."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "These stopped states are described in detail below."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "When the running tracee enters ptrace-stop, it notifies its tracer using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " waitpid (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(or one of the other \"wait\" system calls)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Most of this manual page assumes that the tracer waits with:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    pid = waitpid(pid_or_minus_1, &status, __WALL);"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Ptrace-stopped tracees are reported as returns with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pid"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "greater than 0 and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " WIFSTOPPED(status)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "true."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Denys Vlasenko:"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     Do we require __WALL usage, or will just using 0 be ok? (With 0,"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     I am not 100% sure there aren't ugly corner cases.) Are the"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     rules different if user wants to use waitid? Will waitid require"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     WEXITED?"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " __WALL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "flag does not include the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " WSTOPPED"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " WEXITED"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "flags, but implies their functionality."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Setting the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " WCONTINUED"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "flag when calling"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " waitpid (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is not recommended: the \"continued\" state is per-process and"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "consuming it can confuse the real parent of the tracee."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Use of the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " WNOHANG"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "flag may cause"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " waitpid (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to return 0 (\"no wait results available yet\")"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "even if the tracer knows there should be a notification."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Example:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "errno = 0;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ptrace(PTRACE_CONT, pid, 0L, 0L);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "if (errno == ESRCH) {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    /* tracee is dead */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    r = waitpid(tracee, &status, __WALL | WNOHANG);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    /* r can still be 0 here! */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "}"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" FIXME ."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     waitid usage? WNOWAIT?"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     describe how wait notifications queue (or not queue)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The following kinds of ptrace-stops exist: signal-delivery-stops,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "group-stops,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "stops, syscall-stops."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "They all are reported by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " waitpid (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " WIFSTOPPED(status)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "true."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "They may be differentiated by examining the value"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " status>>8 ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and if there is ambiguity in that value, by querying"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_GETSIGINFO ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(Note: the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " WSTOPSIG(status)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "macro can't be used to perform this examination,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "because it returns the value"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"(status>>8)"
        },
        {
          "type": "ESCAPE",
          "content": "\\ "
        },
        {
          "type": "TEXT",
          "content": "&"
        },
        {
          "type": "ESCAPE",
          "content": "\\ "
        },
        {
          "type": "TEXT",
          "content": "0xff\" .)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Signal-delivery-stop"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "When a (possibly multithreaded) process receives any signal except"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGKILL ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the kernel selects an arbitrary thread which handles the signal."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(If the signal is generated with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " tgkill (2),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the target thread can be explicitly selected by the caller.)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the selected thread is traced, it enters signal-delivery-stop."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "At this point, the signal is not yet delivered to the process,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and can be suppressed by the tracer."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the tracer doesn't suppress the signal,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "it passes the signal to the tracee in the next ptrace restart request."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This second step of signal delivery is called"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"signal injection\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in this manual page."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Note that if the signal is blocked,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "signal-delivery-stop doesn't happen until the signal is unblocked,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with the usual exception that"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGSTOP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "can't be blocked."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Signal-delivery-stop is observed by the tracer as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " waitpid (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "returning with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " WIFSTOPPED(status)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "true, with the signal returned by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " WSTOPSIG(status) ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the signal is"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGTRAP ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "this may be a different kind of ptrace-stop;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "see the \"Syscall-stops\" and \"execve\" sections below for details."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " WSTOPSIG(status)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "returns a stopping signal, this may be a group-stop; see below."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Signal injection and suppression"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "After signal-delivery-stop is observed by the tracer,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the tracer should restart the tracee with the call"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    ptrace(PTRACE_restart, pid, 0, sig)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "where"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_restart"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is one of the restarting ptrace requests."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sig"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is 0, then a signal is not delivered."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Otherwise, the signal"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sig"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is delivered."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This operation is called"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"signal injection\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in this manual page, to distinguish it from signal-delivery-stop."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sig"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "value may be different from the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " WSTOPSIG(status)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "value: the tracer can cause a different signal to be injected."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Note that a suppressed signal still causes system calls to return"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "prematurely."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "In this case, system calls will be restarted: the tracer will"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "observe the tracee to reexecute the interrupted system call (or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " restart_syscall (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "system call for a few system calls which use a different mechanism"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for restarting) if the tracer uses"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SYSCALL ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Even system calls (such as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " poll (2))"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "which are not restartable after signal are restarted after"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "signal is suppressed;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "however, kernel bugs exist which cause some system calls to fail with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINTR"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "even though no observable signal is injected to the tracee."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Restarting ptrace commands issued in ptrace-stops other than"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "signal-delivery-stop are not guaranteed to inject a signal, even if"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sig"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is nonzero."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "No error is reported; a nonzero"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sig"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "may simply be ignored."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Ptrace users should not try to \"create a new signal\" this way: use"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " tgkill (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "instead."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The fact that signal injection requests may be ignored"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "when restarting the tracee after"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ptrace stops that are not signal-delivery-stops"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is a cause of confusion among ptrace users."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "One typical scenario is that the tracer observes group-stop,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "mistakes it for signal-delivery-stop, restarts the tracee with"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    ptrace(PTRACE_restart, pid, 0, stopsig)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "with the intention of injecting"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " stopsig ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "but"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " stopsig"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "gets ignored and the tracee continues to run."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGCONT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "signal has a side effect of waking up (all threads of)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "a group-stopped process."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This side effect happens before signal-delivery-stop."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The tracer can't suppress this side effect (it can"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "only suppress signal injection, which only causes the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGCONT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "handler to not be executed in the tracee, if such a handler is installed)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "In fact, waking up from group-stop may be followed by"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "signal-delivery-stop for signal(s)"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " other than"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGCONT ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "if they were pending when"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGCONT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "was delivered."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "In other words,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGCONT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "may be not the first signal observed by the tracee after it was sent."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Stopping signals cause (all threads of) a process to enter group-stop."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This side effect happens after signal injection, and therefore can be"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "suppressed by the tracer."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "In Linux 2.4 and earlier, the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGSTOP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "signal can't be injected."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" In the Linux 2.4 sources, in arch/i386/kernel/signal.c::do_signal(),"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" there is:"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"             /* The debugger continued.  Ignore SIGSTOP.  */"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"             if (signr == SIGSTOP)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"                     continue;"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_GETSIGINFO"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "can be used to retrieve a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " siginfo_t"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "structure which corresponds to the delivered signal."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SETSIGINFO"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "may be used to modify it."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SETSIGINFO"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "has been used to alter"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " siginfo_t ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " si_signo"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "field and the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sig"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "parameter in the restarting command must match,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "otherwise the result is undefined."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Group-stop"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "When a (possibly multithreaded) process receives a stopping signal,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "all threads stop."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If some threads are traced, they enter a group-stop."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Note that the stopping signal will first cause signal-delivery-stop"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(on one tracee only), and only after it is injected by the tracer"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(or after it was dispatched to a thread which isn't traced),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "will group-stop be initiated on"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " all"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "tracees within the multithreaded process."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "As usual, every tracee reports its group-stop separately"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to the corresponding tracer."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Group-stop is observed by the tracer as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " waitpid (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "returning with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " WIFSTOPPED(status)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "true, with the stopping signal available via"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " WSTOPSIG(status) ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The same result is returned by some other classes of ptrace-stops,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "therefore the recommended practice is to perform the call"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    ptrace(PTRACE_GETSIGINFO, pid, 0, &siginfo)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The call can be avoided if the signal is not"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGSTOP ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGTSTP ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGTTIN ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGTTOU ;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "only these four signals are stopping signals."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the tracer sees something else, it can't be a group-stop."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Otherwise, the tracer needs to call"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_GETSIGINFO ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_GETSIGINFO"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "fails with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINVAL ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "then it is definitely a group-stop."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(Other failure codes are possible, such as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ESRCH"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(\"no such process\") if a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGKILL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "killed the tracee.)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If tracee was attached using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SEIZE ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "group-stop is indicated by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_STOP :"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"status>>16 == PTRACE_EVENT_STOP\" ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This allows detection of group-stops"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "without requiring an extra"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_GETSIGINFO"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "call."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "As of Linux 2.6.38,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "after the tracer sees the tracee ptrace-stop and until it"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "restarts or kills it, the tracee will not run,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and will not send notifications (except"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGKILL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "death) to the tracer, even if the tracer enters into another"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " waitpid (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "call."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The kernel behavior described in the previous paragraph"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "causes a problem with transparent handling of stopping signals."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the tracer restarts the tracee after group-stop,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the stopping signal"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is effectively ignored"
        },
        {
          "type": "ESCAPE",
          "content": "\\(em"
        },
        {
          "type": "TEXT",
          "content": "the tracee doesn't remain stopped, it runs."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the tracer doesn't restart the tracee before entering into the next"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " waitpid (2),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "future"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGCONT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "signals will not be reported to the tracer;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "this would cause the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGCONT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "signals to have no effect on the tracee."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Since Linux 3.4, there is a method to overcome this problem: instead of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_CONT ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_LISTEN"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "command can be used to restart a tracee in a way where it does not execute,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "but waits for a new event which it can report via"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " waitpid (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(such as when"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "it is restarted by a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGCONT )."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT stops"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If the tracer sets"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_O_TRACE_*"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "options, the tracee will enter ptrace-stops called"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "stops."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "stops are observed by the tracer as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " waitpid (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "returning with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " WIFSTOPPED(status) ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " WSTOPSIG(status)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "returns"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGTRAP ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "An additional bit is set in the higher byte of the status word:"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the value"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " status>>8"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "will be"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    (SIGTRAP | PTRACE_EVENT_foo << 8)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The following events exist:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_VFORK"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Stop before return from"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " vfork (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " clone (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_VFORK"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "flag."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "When the tracee is continued after this stop, it will wait for child to"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "exit/exec before continuing its execution"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(in other words, the usual behavior on"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " vfork (2))."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_FORK"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Stop before return from"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " fork (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " clone (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with the exit signal set to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGCHLD ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_CLONE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Stop before return from"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " clone (2)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_VFORK_DONE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Stop before return from"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " vfork (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " clone (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_VFORK"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "flag,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "but after the child unblocked this tracee by exiting or execing."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "For all four stops described above,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the stop occurs in the parent (i.e., the tracee),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "not in the newly created thread."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_GETEVENTMSG"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "can be used to retrieve the new thread's ID."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_EXEC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Stop before return from"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " execve (2)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Since Linux 3.0,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_GETEVENTMSG"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "returns the former thread ID."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_EXIT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Stop before exit (including death from"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " exit_group (2)),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "signal death, or exit caused by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " execve (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in a multithreaded process."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_GETEVENTMSG"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "returns the exit status."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Registers can be examined"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(unlike when \"real\" exit happens)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The tracee is still alive; it needs to be"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_CONT ed"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_DETACH ed"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to finish exiting."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_STOP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Stop induced by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_INTERRUPT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "command, or group-stop, or initial ptrace-stop when a new child is attached"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(only if attached using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SEIZE )."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_SECCOMP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Stop triggered by a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " seccomp (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "rule on tracee syscall entry when"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_O_TRACESECCOMP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "has been set by the tracer."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The seccomp event message data (from the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SECCOMP_RET_DATA"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "portion of the seccomp filter rule) can be retrieved with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_GETEVENTMSG ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The semantics of this stop are described in"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "detail in a separate section below."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_GETSIGINFO"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "on"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "stops returns"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGTRAP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " si_signo ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " si_code"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "set to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"(event<<8)"
        },
        {
          "type": "ESCAPE",
          "content": "\\ "
        },
        {
          "type": "TEXT",
          "content": "|"
        },
        {
          "type": "ESCAPE",
          "content": "\\ "
        },
        {
          "type": "TEXT",
          "content": "SIGTRAP\" ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Syscall-stops"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If the tracee was restarted by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SYSCALL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SYSEMU ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the tracee enters"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "syscall-enter-stop just prior to entering any system call (which"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "will not be executed if the restart was using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SYSEMU ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "regardless of any change made to registers at this point or how the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "tracee is restarted after this stop)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "No matter which method caused the syscall-entry-stop,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "if the tracer restarts the tracee with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SYSCALL ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the tracee enters syscall-exit-stop when the system call is finished,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or if it is interrupted by a signal."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(That is, signal-delivery-stop never happens between syscall-enter-stop"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and syscall-exit-stop; it happens"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " after"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "syscall-exit-stop.)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the tracee is continued using any other method (including"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SYSEMU ),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "no syscall-exit-stop occurs."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Note that all mentions"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SYSEMU"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "apply equally to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SYSEMU_SINGLESTEP."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "However, even if the tracee was continued using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SYSCALL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ", it is not guaranteed that the next stop will be a syscall-exit-stop."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Other possibilities are that the tracee may stop in a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "stop (including seccomp stops), exit (if it entered"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " _exit (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " exit_group (2)),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "be killed by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGKILL ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or die silently (if it is a thread group leader, the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " execve (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "happened in another thread,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and that thread is not traced by the same tracer;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "this situation is discussed later)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Syscall-enter-stop and syscall-exit-stop are observed by the tracer as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " waitpid (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "returning with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " WIFSTOPPED(status)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "true, and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " WSTOPSIG(status)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "giving"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGTRAP ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_O_TRACESYSGOOD"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "option was set by the tracer, then"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " WSTOPSIG(status)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "will give the value"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"(SIGTRAP"
        },
        {
          "type": "ESCAPE",
          "content": "\\ "
        },
        {
          "type": "TEXT",
          "content": "|"
        },
        {
          "type": "ESCAPE",
          "content": "\\ "
        },
        {
          "type": "TEXT",
          "content": "0x80)\" ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Syscall-stops can be distinguished from signal-delivery-stop with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGTRAP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "by querying"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_GETSIGINFO"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for the following cases:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " si_code \" <= 0\""
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGTRAP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "was delivered as a result of a user-space action,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for example, a system call"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( tgkill (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " kill (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sigqueue (3),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "etc.),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "expiration of a POSIX timer,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "change of state on a POSIX message queue,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or completion of an asynchronous I/O request."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " si_code \" == SI_KERNEL (0x80)\""
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGTRAP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "was sent by the kernel."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " si_code \" == SIGTRAP or \" si_code \" == (SIGTRAP|0x80)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This is a syscall-stop."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "However, syscall-stops happen very often (twice per system call),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and performing"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_GETSIGINFO"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for every syscall-stop may be somewhat expensive."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Some architectures allow the cases to be distinguished"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "by examining registers."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For example, on x86,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " rax"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "=="
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " - ENOSYS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in syscall-enter-stop."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Since"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGTRAP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(like any other signal) always happens"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " after"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "syscall-exit-stop,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and at this point"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " rax"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "almost never contains"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " - ENOSYS ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGTRAP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "looks like \"syscall-stop which is not syscall-enter-stop\";"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in other words, it looks like a"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "\"stray syscall-exit-stop\" and can be detected this way."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "But such detection is fragile and is best avoided."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Using the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_O_TRACESYSGOOD"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "option is the recommended method to distinguish syscall-stops"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "from other kinds of ptrace-stops,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "since it is reliable and does not incur a performance penalty."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Syscall-enter-stop and syscall-exit-stop are"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "indistinguishable from each other by the tracer."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The tracer needs to keep track of the sequence of"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ptrace-stops in order to not misinterpret syscall-enter-stop as"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "syscall-exit-stop or vice versa."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "In general, a syscall-enter-stop is"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "always followed by syscall-exit-stop,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "stop, or the tracee's death;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "no other kinds of ptrace-stop can occur in between."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "However, note that seccomp stops (see below) can cause syscall-exit-stops,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "without preceding syscall-entry-stops."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If seccomp is in use, care needs"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to be taken not to misinterpret such stops as syscall-entry-stops."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If after syscall-enter-stop,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the tracer uses a restarting command other than"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SYSCALL ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "syscall-exit-stop is not generated."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_GETSIGINFO"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "on syscall-stops returns"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGTRAP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " si_signo ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " si_code"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "set to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGTRAP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " (SIGTRAP|0x80) ."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_SECCOMP stops (Linux 3.5 to 4.7)"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The behavior of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_SECCOMP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "stops and their interaction with other kinds"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "of ptrace stops has changed between kernel versions."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This documents the behavior"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "from their introduction until Linux 4.7 (inclusive)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The behavior in later kernel versions is documented in the next section."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "A"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_SECCOMP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "stop occurs whenever a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SECCOMP_RET_TRACE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "rule is triggered."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This is independent of which methods was used to restart the system call."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Notably, seccomp still runs even if the tracee was restarted using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SYSEMU"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and this system call is unconditionally skipped."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Restarts from this stop will behave as if the stop had occurred right"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "before the system call in question."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "In particular, both"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SYSCALL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SYSEMU"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "will normally cause a subsequent syscall-entry-stop."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "However, if after the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_SECCOMP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the system call number is negative,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "both the syscall-entry-stop and the system call itself will be skipped."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This means that if the system call number is negative after a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_SECCOMP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and the tracee is restarted using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SYSCALL,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the next observed stop will be a syscall-exit-stop,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "rather than the syscall-entry-stop that might have been expected."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_SECCOMP stops (since Linux 4.8)"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Starting with Linux 4.8,"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" commit 93e35efb8de45393cf61ed07f7b407629bf698ea"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_SECCOMP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "stop was reordered to occur between syscall-entry-stop and"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "syscall-exit-stop."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Note that seccomp no longer runs (and no"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_SECCOMP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "will be reported) if the system call is skipped due to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SYSEMU ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Functionally, a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_SECCOMP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "stop functions comparably"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to a syscall-entry-stop (i.e., continuations using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SYSCALL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "will cause syscall-exit-stops,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the system call number may be changed and any other modified registers"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are visible to the to-be-executed system call as well)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Note that there may be,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "but need not have been a preceding syscall-entry-stop."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "After a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_SECCOMP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "stop, seccomp will be rerun, with a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SECCOMP_RET_TRACE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "rule now functioning the same as a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SECCOMP_RET_ALLOW ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Specifically, this means that if registers are not modified during the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_SECCOMP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "stop, the system call will then be allowed."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SINGLESTEP stops"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "[Details of these kinds of stops are yet to be documented.]"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" FIXME ."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" document stops occurring with PTRACE_SINGLESTEP"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Informational and restarting ptrace commands"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Most ptrace commands (all except"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_ATTACH ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SEIZE ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_TRACEME ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_INTERRUPT ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_KILL )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "require the tracee to be in a ptrace-stop, otherwise they fail with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ESRCH ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "When the tracee is in ptrace-stop,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the tracer can read and write data to"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the tracee using informational commands."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "These commands leave the tracee in ptrace-stopped state:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ptrace(PTRACE_PEEKTEXT/PEEKDATA/PEEKUSER, pid, addr, 0);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ptrace(PTRACE_POKETEXT/POKEDATA/POKEUSER, pid, addr, long_val);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ptrace(PTRACE_GETREGS/GETFPREGS, pid, 0, &struct);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ptrace(PTRACE_SETREGS/SETFPREGS, pid, 0, &struct);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ptrace(PTRACE_GETREGSET, pid, NT_foo, &iov);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ptrace(PTRACE_SETREGSET, pid, NT_foo, &iov);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ptrace(PTRACE_GETSIGINFO, pid, 0, &siginfo);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ptrace(PTRACE_SETSIGINFO, pid, 0, &siginfo);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ptrace(PTRACE_GETEVENTMSG, pid, 0, &long_var);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ptrace(PTRACE_SETOPTIONS, pid, 0, PTRACE_O_flags);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Note that some errors are not reported."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For example, setting signal information"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( siginfo )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "may have no effect in some ptrace-stops, yet the call may succeed"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(return 0 and not set"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " errno );"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "querying"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_GETEVENTMSG"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "may succeed and return some random value if current ptrace-stop"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is not documented as returning a meaningful event message."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The call"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    ptrace(PTRACE_SETOPTIONS, pid, 0, PTRACE_O_flags);"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "affects one tracee."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The tracee's current flags are replaced."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Flags are inherited by new tracees created and \"auto-attached\" via active"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_O_TRACEFORK ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_O_TRACEVFORK ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_O_TRACECLONE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "options."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Another group of commands makes the ptrace-stopped tracee run."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "They have the form:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    ptrace(cmd, pid, 0, sig);"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "where"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " cmd"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_CONT ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_LISTEN ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_DETACH ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SYSCALL ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SINGLESTEP ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SYSEMU ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SYSEMU_SINGLESTEP ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the tracee is in signal-delivery-stop,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sig"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is the signal to be injected (if it is nonzero)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Otherwise,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sig"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "may be ignored."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(When restarting a tracee from a ptrace-stop other than signal-delivery-stop,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "recommended practice is to always pass 0 in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sig .)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Attaching and detaching"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "A thread can be attached to the tracer using the call"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    ptrace(PTRACE_ATTACH, pid, 0, 0);"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    ptrace(PTRACE_SEIZE, pid, 0, PTRACE_O_flags);"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_ATTACH"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "sends"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGSTOP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to this thread."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the tracer wants this"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGSTOP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to have no effect, it needs to suppress it."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Note that if other signals are concurrently sent to"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "this thread during attach,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the tracer may see the tracee enter signal-delivery-stop"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with other signal(s) first!"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The usual practice is to reinject these signals until"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGSTOP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is seen, then suppress"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGSTOP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "injection."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The design bug here is that a ptrace attach and a concurrently delivered"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGSTOP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "may race and the concurrent"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGSTOP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "may be lost."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" FIXME Describe how to attach to a thread which is already group-stopped."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Since attaching sends"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGSTOP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and the tracer usually suppresses it, this may cause a stray"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINTR"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "return from the currently executing system call in the tracee,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "as described in the \"Signal injection and suppression\" section."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Since Linux 3.4,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SEIZE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "can be used instead of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_ATTACH ."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SEIZE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "does not stop the attached process."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If you need to stop"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "it after attach (or at any other time) without sending it any signals,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "use"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_INTERRUPT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "command."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The request"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    ptrace(PTRACE_TRACEME, 0, 0, 0);"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "turns the calling thread into a tracee."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The thread continues to run (doesn't enter ptrace-stop)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A common practice is to follow the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_TRACEME"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    raise(SIGSTOP);"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "and allow the parent (which is our tracer now) to observe our"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "signal-delivery-stop."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_O_TRACEFORK ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_O_TRACEVFORK ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_O_TRACECLONE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "options are in effect, then children created by, respectively,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " vfork (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " clone (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_VFORK"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "flag,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " fork (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " clone (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with the exit signal set to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGCHLD ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and other kinds of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " clone (2),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are automatically attached to the same tracer which traced their parent."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGSTOP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is delivered to the children, causing them to enter"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "signal-delivery-stop after they exit the system call which created them."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Detaching of the tracee is performed by:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    ptrace(PTRACE_DETACH, pid, 0, sig);"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_DETACH"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is a restarting operation;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "therefore it requires the tracee to be in ptrace-stop."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the tracee is in signal-delivery-stop, a signal can be injected."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Otherwise, the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sig"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "parameter may be silently ignored."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If the tracee is running when the tracer wants to detach it,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the usual solution is to send"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGSTOP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " tgkill (2),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to make sure it goes to the correct thread),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "wait for the tracee to stop in signal-delivery-stop for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGSTOP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and then detach it (suppressing"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGSTOP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "injection)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A design bug is that this can race with concurrent"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGSTOP s."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Another complication is that the tracee may enter other ptrace-stops"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and needs to be restarted and waited for again, until"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGSTOP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is seen."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Yet another complication is to be sure that"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the tracee is not already ptrace-stopped,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "because no signal delivery happens while it is"
        },
        {
          "type": "ESCAPE",
          "content": "\\(em"
        },
        {
          "type": "TEXT",
          "content": "not even"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGSTOP ."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" FIXME Describe how to detach from a group-stopped tracee so that it"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" doesn't run, but continues to wait for SIGCONT."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If the tracer dies, all tracees are automatically detached and restarted,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "unless they were in group-stop."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Handling of restart from group-stop is currently buggy,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "but the \"as planned\" behavior is to leave tracee stopped and waiting for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGCONT ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the tracee is restarted from signal-delivery-stop,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the pending signal is injected."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " execve(2) under ptrace"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" clone(2) CLONE_THREAD says:"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     If  any  of the threads in a thread group performs an execve(2),"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     then all threads other than the thread group leader are terminated,"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     and the new program is executed in the thread group leader."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "When one thread in a multithreaded process calls"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " execve (2),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the kernel destroys all other threads in the process,"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" In kernel 3.1 sources, see fs/exec.c::de_thread()"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "and resets the thread ID of the execing thread to the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "thread group ID (process ID)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(Or, to put things another way, when a multithreaded process does an"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " execve (2),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "at completion of the call, it appears as though the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " execve (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "occurred in the thread group leader, regardless of which thread did the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " execve (2).)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This resetting of the thread ID looks very confusing to tracers:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " * 3"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "All other threads stop in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_EXIT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "stop, if the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_O_TRACEEXIT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "option was turned on."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Then all other threads except the thread group leader report"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "death as if they exited via"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " _exit (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with exit code 0."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The execing tracee changes its thread ID while it is in the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " execve (2)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(Remember, under ptrace, the \"pid\" returned from"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " waitpid (2),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or fed into ptrace calls, is the tracee's thread ID.)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "That is, the tracee's thread ID is reset to be the same as its process ID,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "which is the same as the thread group leader's thread ID."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Then a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_EXEC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "stop happens, if the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_O_TRACEEXEC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "option was turned on."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If the thread group leader has reported its"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_EXIT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "stop by this time,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "it appears to the tracer that"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the dead thread leader \"reappears from nowhere\"."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(Note: the thread group leader does not report death via"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " WIFEXITED(status)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "until there is at least one other live thread."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This eliminates the possibility that the tracer will see"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "it dying and then reappearing.)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the thread group leader was still alive,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for the tracer this may look as if thread group leader"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "returns from a different system call than it entered,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or even \"returned from a system call even though"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "it was not in any system call\"."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the thread group leader was not traced"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(or was traced by a different tracer), then during"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " execve (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "it will appear as if it has become a tracee of"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the tracer of the execing tracee."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "All of the above effects are the artifacts of"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the thread ID change in the tracee."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_O_TRACEEXEC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "option is the recommended tool for dealing with this situation."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "First, it enables"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_EXEC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "stop,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "which occurs before"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " execve (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "returns."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "In this stop, the tracer can use"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_GETEVENTMSG"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to retrieve the tracee's former thread ID."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(This feature was introduced in Linux 3.0.)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Second, the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_O_TRACEEXEC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "option disables legacy"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGTRAP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "generation on"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " execve (2)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "When the tracer receives"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_EXEC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "stop notification,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "it is guaranteed that except this tracee and the thread group leader,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "no other threads from the process are alive."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "On receiving the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_EXEC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "stop notification,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the tracer should clean up all its internal"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "data structures describing the threads of this process,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and retain only one data structure"
        },
        {
          "type": "ESCAPE",
          "content": "\\(em"
        },
        {
          "type": "TEXT",
          "content": "one which"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "describes the single still running tracee, with"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    thread ID == thread group ID == process ID."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Example: two threads call"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " execve (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "at the same time:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".nf",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "*** we get syscall-enter-stop in thread 1: **"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "PID1 execve(\"/bin/foo\", \"foo\" <unfinished ...>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "*** we issue PTRACE_SYSCALL for thread 1 **"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "*** we get syscall-enter-stop in thread 2: **"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "PID2 execve(\"/bin/bar\", \"bar\" <unfinished ...>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "*** we issue PTRACE_SYSCALL for thread 2 **"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "*** we get PTRACE_EVENT_EXEC for PID0, we issue PTRACE_SYSCALL **"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "*** we get syscall-exit-stop for PID0: **"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "PID0 <... execve resumed> )             = 0"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".fi",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_O_TRACEEXEC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "option is"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " not"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in effect for the execing tracee,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and if the tracee was"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_ATTACH ed"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "rather that"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SEIZE d,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the kernel delivers an extra"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGTRAP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to the tracee after"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " execve (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "returns."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This is an ordinary signal (similar to one which can be"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "generated by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"kill -TRAP\" ),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "not a special kind of ptrace-stop."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Employing"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_GETSIGINFO"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for this signal returns"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " si_code"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "set to 0"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( SI_USER )."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This signal may be blocked by signal mask,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and thus may be delivered (much) later."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Usually, the tracer (for example,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " strace (1))"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "would not want to show this extra post-execve"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGTRAP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "signal to the user, and would suppress its delivery to the tracee (if"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGTRAP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is set to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIG_DFL ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "it is a killing signal)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "However, determining"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " which"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGTRAP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to suppress is not easy."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Setting the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_O_TRACEEXEC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "option or using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SEIZE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and thus suppressing this extra"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGTRAP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is the recommended approach."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Real parent"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The ptrace API (ab)uses the standard UNIX parent/child signaling over"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " waitpid (2)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This used to cause the real parent of the process to stop receiving"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "several kinds of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " waitpid (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "notifications when the child process is traced by some other process."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Many of these bugs have been fixed, but as of Linux 2.6.38 several still"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "exist; see BUGS below."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "As of Linux 2.6.38, the following is believed to work correctly:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " * 3"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "exit/death by signal is reported first to the tracer, then,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "when the tracer consumes the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " waitpid (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "result, to the real parent (to the real parent only when the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "whole multithreaded process exits)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the tracer and the real parent are the same process,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the report is sent only once."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " RETURN VALUE"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "On success, the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_PEEK*"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "requests return the requested data (but see NOTES),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SECCOMP_GET_FILTER"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "request returns the number of instructions in the BPF program, and"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "other requests return zero."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "On error, all requests return "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "1, and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " errno"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is set appropriately."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Since the value returned by a successful"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_PEEK*"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "request may be "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "1, the caller must clear"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " errno"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "before the call, and then check it afterward"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to determine whether or not an error occurred."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " ERRORS"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EBUSY"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(i386 only) There was an error with allocating or freeing a debug register."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EFAULT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "There was an attempt to read from or write to an invalid area in"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the tracer's or the tracee's memory,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "probably because the area wasn't mapped or accessible."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Unfortunately, under Linux, different variations of this fault"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "will return"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EIO"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EFAULT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "more or less arbitrarily."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINVAL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "An attempt was made to set an invalid option."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EIO"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " request"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is invalid, or an attempt was made to read from or"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "write to an invalid area in the tracer's or the tracee's memory,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or there was a word-alignment violation,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or an invalid signal was specified during a restart request."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EPERM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The specified process cannot be traced."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This could be because the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "tracer has insufficient privileges (the required capability is"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CAP_SYS_PTRACE );"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "unprivileged processes cannot trace processes that they"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "cannot send signals to or those running"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "set-user-ID/set-group-ID programs, for obvious reasons."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Alternatively, the process may already be being traced,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or (on kernels before 2.6.26) be"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " init (1)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(PID 1)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ESRCH"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The specified process does not exist, or is not currently being traced"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "by the caller, or is not stopped"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(for requests that require a stopped tracee)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " CONFORMING TO"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "SVr4, 4.3BSD."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " NOTES"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Although arguments to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ptrace ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are interpreted according to the prototype given,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "glibc currently declares"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ptrace ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "as a variadic function with only the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " request"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "argument fixed."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "It is recommended to always supply four arguments,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "even if the requested operation does not use them,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "setting unused/ignored arguments to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 0L"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"(void"
        },
        {
          "type": "ESCAPE",
          "content": "\\ "
        },
        {
          "type": "TEXT",
          "content": "*)"
        },
        {
          "type": "ESCAPE",
          "content": "\\ "
        },
        {
          "type": "TEXT",
          "content": "0\"."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "In Linux kernels before 2.6.26,"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" See commit 00cd5c37afd5f431ac186dd131705048c0a11fdb"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " init (1),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the process with PID 1, may not be traced."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "A tracees parent continues to be the tracer even if that tracer calls"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " execve (2)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The layout of the contents of memory and the USER area are"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "quite operating-system- and architecture-specific."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The offset supplied, and the data returned,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "might not entirely match with the definition of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"struct user\" ."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" See http://lkml.org/lkml/2008/5/8/375"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The size of a \"word\" is determined by the operating-system variant"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(e.g., for 32-bit Linux it is 32 bits)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "This page documents the way the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ptrace ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "call works currently in Linux."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Its behavior differs significantly on other flavors of UNIX."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "In any case, use of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ptrace ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is highly specific to the operating system and architecture."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Ptrace access mode checking"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Various parts of the kernel-user-space API (not just"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ptrace ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "operations), require so-called \"ptrace access mode\" checks,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "whose outcome determines whether an operation is permitted"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(or, in a few cases, causes a \"read\" operation to return sanitized data)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "These checks are performed in cases where one process can"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "inspect sensitive information about,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or in some cases modify the state of, another process."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The checks are based on factors such as the credentials and capabilities"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "of the two processes,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "whether or not the \"target\" process is dumpable,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and the results of checks performed by any enabled Linux Security Module"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(LSM)"
        },
        {
          "type": "ESCAPE",
          "content": "\\(em"
        },
        {
          "type": "TEXT",
          "content": "for example, SELinux, Yama, or Smack"
        },
        {
          "type": "ESCAPE",
          "content": "\\(em"
        },
        {
          "type": "TEXT",
          "content": "and by the commoncap LSM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(which is always invoked)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Prior to Linux 2.6.27, all access checks were of a single type."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Since Linux 2.6.27,"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" commit 006ebb40d3d65338bd74abb03b945f8d60e362bd"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "two access mode levels are distinguished:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_MODE_READ"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For \"read\" operations or other operations that are less dangerous,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "such as:"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " get_robust_list (2);"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " kcmp (2);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "reading"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc/[pid]/auxv ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc/[pid]/environ ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc/[pid]/stat ;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " readlink (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "of a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc/[pid]/ns/*"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "file."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_MODE_ATTACH"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For \"write\" operations, or other operations that are more dangerous,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "such as: ptrace attaching"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( PTRACE_ATTACH )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to another process"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or calling"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " process_vm_writev (2)."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( PTRACE_MODE_ATTACH"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "was effectively the default before Linux 2.6.27.)"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Regarding the above description of the distinction between"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" PTRACE_MODE_READ and PTRACE_MODE_ATTACH, Stephen Smalley notes:"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     That was the intent when the distinction was introduced, but it doesn't"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     appear to have been properly maintained, e.g. there is now a common"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     helper lock_trace() that is used for"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     /proc/pid/{stack,syscall,personality} but checks PTRACE_MODE_ATTACH, and"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     PTRACE_MODE_ATTACH is also used in timerslack_ns_write/show().  Likely"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     should review and make them consistent.  There was also some debate"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     about proper handling of /proc/pid/fd.  Arguably that one might belong"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     back in the _ATTACH camp."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Since Linux 4.5,"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" commit caaee6234d05a58c5b4d05e7bf766131b810a657"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "the above access mode checks are combined (ORed) with"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "one of the following modifiers:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_MODE_FSCREDS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Use the caller's filesystem UID and GID (see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " credentials (7))"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or effective capabilities for LSM checks."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_MODE_REALCREDS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Use the caller's real UID and GID or permitted capabilities for LSM checks."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This was effectively the default before Linux 4.5."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Because combining one of the credential modifiers with one of"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the aforementioned access modes is typical,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "some macros are defined in the kernel sources for the combinations:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_MODE_READ_FSCREDS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Defined as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"PTRACE_MODE_READ | PTRACE_MODE_FSCREDS\" ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_MODE_READ_REALCREDS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Defined as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"PTRACE_MODE_READ | PTRACE_MODE_REALCREDS\" ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_MODE_ATTACH_FSCREDS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Defined as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"PTRACE_MODE_ATTACH | PTRACE_MODE_FSCREDS\" ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_MODE_ATTACH_REALCREDS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Defined as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"PTRACE_MODE_ATTACH | PTRACE_MODE_REALCREDS\" ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "One further modifier can be ORed with the access mode:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_MODE_NOAUDIT \" (since Linux 3.3)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" commit 69f594a38967f4540ce7a29b3fd214e68a8330bd"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Just for /proc/pid/stat"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Don't audit this access mode check."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This modifier is employed for ptrace access mode checks"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(such as checks when reading"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc/[pid]/stat )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "that merely cause the output to be filtered or sanitized,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "rather than causing an error to be returned to the caller."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "In these cases, accessing the file is not a security violation and"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "there is no reason to generate a security audit record."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This modifier suppresses the generation of"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "such an audit record for the particular access check."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Note that all of the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_MODE_*"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "constants described in this subsection are kernel-internal,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and not visible to user space."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The constant names are mentioned here in order to label the various kinds of"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ptrace access mode checks that are performed for various system calls"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and accesses to various pseudofiles (e.g., under"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc )."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "These names are used in other manual pages to provide a simple"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "shorthand for labeling the different kernel checks."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The algorithm employed for ptrace access mode checking determines whether"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the calling process is allowed to perform the corresponding action"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "on the target process."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(In the case of opening"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc/[pid]"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "files, the \"calling process\" is the one opening the file,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and the process with the corresponding PID is the \"target process\".)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The algorithm is as follows:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " 1. 3"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If the calling thread and the target thread are in the same"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "thread group, access is always allowed."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " 2."
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If the access mode specifies"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_MODE_FSCREDS ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "then, for the check in the next step,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "employ the caller's filesystem UID and GID."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(As noted in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " credentials (7),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the filesystem UID and GID almost always have the same values"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "as the corresponding effective IDs.)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Otherwise, the access mode specifies"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_MODE_REALCREDS ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "so use the caller's real UID and GID for the checks in the next step."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(Most APIs that check the caller's UID and GID use the effective IDs."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For historical reasons, the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_MODE_REALCREDS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "check uses the real IDs instead.)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " 3."
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Deny access if"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " neither"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "of the following is true:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RS",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\(bu"
        },
        {
          "type": "TEXT",
          "content": " 2"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The real, effective, and saved-set user IDs of the target"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "match the caller's user ID,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " and"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the real, effective, and saved-set group IDs of the target"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "match the caller's group ID."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\(bu"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The caller has the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CAP_SYS_PTRACE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "capability in the user namespace of the target."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RE",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " 4."
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Deny access if the target process \"dumpable\" attribute has a value other than 1"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( SUID_DUMP_USER ;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "see the discussion of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PR_SET_DUMPABLE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " prctl (2)),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and the caller does not have the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CAP_SYS_PTRACE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "capability in the user namespace of the target process."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " 5."
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The kernel LSM"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " security_ptrace_access_check ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "interface is invoked to see if ptrace access is permitted."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The results depend on the LSM(s)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The implementation of this interface in the commoncap LSM performs"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the following steps:"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" (in cap_ptrace_access_check()):"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RS",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " a) 3"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If the access mode includes"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_MODE_FSCREDS ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "then use the caller's"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " effective"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "capability set"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in the following check;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "otherwise (the access mode specifies"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_MODE_REALCREDS ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "so) use the caller's"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " permitted"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "capability set."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " b)"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Deny access if"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " neither"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "of the following is true:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RS",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\(bu"
        },
        {
          "type": "TEXT",
          "content": " 2"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The caller and the target process are in the same user namespace,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and the caller's capabilities are a proper superset of the target process's"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " permitted"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "capabilities."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\(bu"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The caller has the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CAP_SYS_PTRACE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "capability in the target process's user namespace."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RE",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Note that the commoncap LSM does not distinguish between"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_MODE_READ"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_MODE_ATTACH ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RE",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " 6."
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If access has not been denied by any of the preceding steps,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "then access is allowed."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " /proc/sys/kernel/yama/ptrace_scope"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "On systems with the Yama Linux Security Module (LSM) installed"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(i.e., the kernel was configured with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CONFIG_SECURITY_YAMA ),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc/sys/kernel/yama/ptrace_scope"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "file (available since Linux 3.4)"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" commit 2d514487faf188938a4ee4fb3464eeecfbdcf8eb"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "can be used to restrict the ability to trace a process with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ptrace ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(and thus also the ability to use tools such as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " strace (1)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " gdb (1))."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The goal of such restrictions is to prevent attack escalation whereby"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "a compromised process can ptrace-attach to other sensitive processes"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(e.g., a GPG agent or an SSH session) owned by the user in order"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to gain additional credentials that may exist in memory"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and thus expand the scope of the attack."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "More precisely, the Yama LSM limits two types of operations:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " * 3"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Any operation that performs a ptrace access mode"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_MODE_ATTACH"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "check"
        },
        {
          "type": "ESCAPE",
          "content": "\\(em"
        },
        {
          "type": "TEXT",
          "content": "for example,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ptrace ()"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_ATTACH ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(See the \"Ptrace access mode checking\" discussion above.)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ptrace ()"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_TRACEME ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "A process that has the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CAP_SYS_PTRACE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "capability can update the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc/sys/kernel/yama/ptrace_scope"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "file with one of the following values:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "0 (\"classic ptrace permissions\")"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "No additional restrictions on operations that perform"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_MODE_ATTACH"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "checks (beyond those imposed by the commoncap and other LSMs)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The use of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_TRACEME"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is unchanged."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "1 (\"restricted ptrace\") [default value]"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "When performing an operation that requires a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_MODE_ATTACH"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "check, the calling process must either have the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CAP_SYS_PTRACE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "capability in the user namespace of the target process or"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "it must have a predefined relationship with the target process."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "By default,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the predefined relationship is that the target process"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "must be a descendant of the caller."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "A target process can employ the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " prctl (2)"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PR_SET_PTRACER"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "operation to declare an additional PID that is allowed to perform"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_MODE_ATTACH"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "operations on the target."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "See the kernel source file"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " Documentation/admin"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "guide/LSM/Yama.rst"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" commit 90bb766440f2147486a2acc3e793d7b8348b0c22"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "(or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " Documentation/security/Yama.txt"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "before Linux 4.13)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for further details."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The use of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_TRACEME"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is unchanged."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "2 (\"admin-only attach\")"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Only processes with the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CAP_SYS_PTRACE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "capability in the user namespace of the target process may perform"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_MODE_ATTACH"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "operations or trace children that employ"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_TRACEME ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "3 (\"no attach\")"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "No process may perform"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_MODE_ATTACH"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "operations or trace children that employ"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_TRACEME ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Once this value has been written to the file, it cannot be changed."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "With respect to values 1 and 2,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "note that creating a new user namespace effectively removes the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "protection offered by Yama."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This is because a process in the parent user namespace whose effective"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "UID matches the UID of the creator of a child namespace"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "has all capabilities (including"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CAP_SYS_PTRACE )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "when performing operations within the child user namespace"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(and further-removed descendants of that namespace)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Consequently, when a process tries to use user namespaces to sandbox itself,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "it inadvertently weakens the protections offered by the Yama LSM."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " C library/kernel differences"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "At the system call level, the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_PEEKTEXT ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_PEEKDATA ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_PEEKUSER"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "requests have a different API: they store the result"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "at the address specified by the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " data"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "parameter, and the return value is the error flag."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The glibc wrapper function provides the API given in DESCRIPTION above,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with the result being returned via the function return value."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " BUGS"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "On hosts with 2.6 kernel headers,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SETOPTIONS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is declared with a different value than the one for 2.4."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This leads to applications compiled with 2.6 kernel"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "headers failing when run on 2.4 kernels."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This can be worked around by redefining"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_SETOPTIONS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_OLDSETOPTIONS ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "if that is defined."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Group-stop notifications are sent to the tracer, but not to real parent."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Last confirmed on 2.6.38.6."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If a thread group leader is traced and exits by calling"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " _exit (2),"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Note from Denys Vlasenko:"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     Here \"exits\" means any kind of death - _exit, exit_group,"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     signal death. Signal death and exit_group cases are trivial,"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     though: since signal death and exit_group kill all other threads"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     too, \"until all other threads exit\" thing happens rather soon"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     in these cases. Therefore, only _exit presents observably"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     puzzling behavior to ptrace users: thread leader _exit's,"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     but WIFEXITED isn't reported! We are trying to explain here"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     why it is so."
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_EXIT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "stop will happen for it (if requested), but the subsequent"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " WIFEXITED"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "notification will not be delivered until all other threads exit."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "As explained above, if one of other threads calls"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " execve (2),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the death of the thread group leader will"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " never"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "be reported."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the execed thread is not traced by this tracer,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the tracer will never know that"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " execve (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "happened."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "One possible workaround is to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_DETACH"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the thread group leader instead of restarting it in this case."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Last confirmed on 2.6.38.6."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"  FIXME . need to test/verify this scenario"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "A"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGKILL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "signal may still cause a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTRACE_EVENT_EXIT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "stop before actual signal death."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This may be changed in the future;"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGKILL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is meant to always immediately kill tasks even under ptrace."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Last confirmed on Linux 3.13."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Some system calls return with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINTR"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "if a signal was sent to a tracee, but delivery was suppressed by the tracer."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(This is very typical operation: it is usually"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "done by debuggers on every attach, in order to not introduce"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "a bogus"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGSTOP )."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "As of Linux 3.2.9, the following system calls are affected"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(this list is likely incomplete):"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " epoll_wait (2),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " read (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "from an"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " inotify (7)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "file descriptor."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The usual symptom of this bug is that when you attach to"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "a quiescent process with the command"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "strace "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "p <process-ID>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "then, instead of the usual"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and expected one-line output such as"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "restart_syscall(<... resuming interrupted call ...>_"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "select(6, [5], NULL, [5], NULL_"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "('_' denotes the cursor position), you observe more than one line."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For example:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    clock_gettime(CLOCK_MONOTONIC, {15370, 690928118}) = 0"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    epoll_wait(4,_"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "What is not visible here is that the process was blocked in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " epoll_wait (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "before"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " strace (1)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "has attached to it."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Attaching caused"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " epoll_wait (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to return to user space with the error"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINTR ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "In this particular case, the program reacted to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINTR"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "by checking the current time, and then executing"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " epoll_wait (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "again."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(Programs which do not expect such \"stray\""
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINTR"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "errors may behave in an unintended way upon an"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " strace (1)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "attach.)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Contrary to the normal rules, the glibc wrapper for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ptrace ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "can set"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " errno"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to zero."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " SEE ALSO"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " gdb (1),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ltrace (1),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " strace (1),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " clone (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " execve (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " fork (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " gettid (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " prctl (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " seccomp (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sigaction (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " tgkill (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " vfork (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " waitpid (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " exec (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " capabilities (7),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " signal (7)"
        }
      ]
    ]
  }
]
