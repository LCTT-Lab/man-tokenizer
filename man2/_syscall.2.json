[
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Copyright (c) 1993 Michael Haardt (michael@moria.de),"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"   Fri Apr  2 11:32:09 MET DST 1993"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" %%%LICENSE_START(GPLv2+_DOC_FULL)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" This is free documentation; you can redistribute it and/or"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" modify it under the terms of the GNU General Public License as"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" published by the Free Software Foundation; either version 2 of"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" the License, or (at your option) any later version."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" The GNU General Public License's references to \"object code\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" and \"executables\" are to be interpreted as the output of any"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" document formatting or typesetting system, including"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" intermediate and printed output."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" This manual is distributed in the hope that it will be useful,"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" but WITHOUT ANY WARRANTY; without even the implied warranty of"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" GNU General Public License for more details."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" You should have received a copy of the GNU General Public"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" License along with this manual; if not, see"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" <http://www.gnu.org/licenses/>."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" %%%LICENSE_END"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Tue Jul  6 12:42:46 MDT 1993 <dminer@nyx.cs.du.edu>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Added \"Calling Directly\" and supporting paragraphs"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Modified Sat Jul 24 15:19:12 1993 by Rik Faith <faith@cs.unc.edu>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Modified 21 Aug 1994 by Michael Chastain <mec@shell.portal.com>:"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"   Added explanation of arg stacking when 6 or more args."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Modified 10 June 1995 by Andries Brouwer <aeb@cwi.nl>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 2007-10-23 mtk: created as a new page, by taking the content"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" specific to the _syscall() macros from intro(2)."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TH",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " _SYSCALL 2 2017-09-15 \"Linux\" \"Linux Programmer's Manual\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " NAME"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "_syscall "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": " invoking a system call without library support (OBSOLETE)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " SYNOPSIS"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " #include <linux/unistd.h>"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "A _syscall macro"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "desired system call"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " DESCRIPTION"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The important thing to know about a system call is its prototype."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "You need to know how many arguments, their types,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and the function return type."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "There are seven macros that make the actual call into the system easier."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "They have the form:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " _syscall X ( type , name , type1 , arg1 , type2 , arg2 ,...)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "where"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " X"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is 0"
        },
        {
          "type": "ESCAPE",
          "content": "\\(en"
        },
        {
          "type": "TEXT",
          "content": "6, which are the number of arguments taken by the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "system call"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " type"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is the return type of the system call"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " name"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is the name of the system call"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " typeN"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is the Nth argument's type"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " argN"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is the name of the Nth argument"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "These macros create a function called"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " name"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with the arguments you"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "specify."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Once you include the _syscall() in your source file,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "you call the system call by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " name ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " FILES"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /usr/include/linux/unistd.h"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " CONFORMING TO"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The use of these macros is Linux-specific, and deprecated."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " NOTES"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Starting around kernel 2.6.18, the _syscall macros were removed"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "from header files supplied to user space."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Use"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " syscall (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "instead."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(Some architectures, notably ia64, never provided the _syscall macros;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "on those architectures,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " syscall (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "was always required.)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The _syscall() macros"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"do not\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "produce a prototype."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "You may have to"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "create one, especially for C++ users."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "System calls are not required to return only positive or negative error"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "codes."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "You need to read the source to be sure how it will return errors."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Usually, it is the negative of a standard error code,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for example,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": " EPERM ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The _syscall() macros will return the result"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " r"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "of the system call"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "when"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " r"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is nonnegative, but will return "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "1 and set the variable"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " errno"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": " r"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "when"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " r"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is negative."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For the error codes, see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " errno (3)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "When defining a system call, the argument types"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " must"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "be"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "passed by-value or by-pointer (for aggregates like structs)."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" The preferred way to invoke system calls that glibc does not know"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" about yet is via"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .BR syscall (2)."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" However, this mechanism can be used only if using a libc"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" (such as glibc) that supports"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .BR syscall (2),"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" and if the"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .I <sys/syscall.h>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" header file contains the required SYS_foo definition."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Otherwise, the use of a _syscall macro is required."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " EXAMPLE"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#include <stdio.h>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#include <stdlib.h>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#include <errno.h>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#include <linux/unistd.h>       /* for _syscallX macros/related stuff */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#include <linux/kernel.h>       /* for struct sysinfo */"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "_syscall1(int, sysinfo, struct sysinfo *, info);"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "int"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "main(void)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "{"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    struct sysinfo s_info;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    int error;"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    error = sysinfo(&s_info);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    printf(\"code error = %d"
        },
        {
          "type": "ESCAPE",
          "content": "\\\\"
        },
        {
          "type": "TEXT",
          "content": "n\", error);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    printf(\"Uptime = %lds"
        },
        {
          "type": "ESCAPE",
          "content": "\\\\"
        },
        {
          "type": "TEXT",
          "content": "nLoad: 1 min %lu / 5 min %lu / 15 min %lu"
        },
        {
          "type": "ESCAPE",
          "content": "\\\\"
        },
        {
          "type": "TEXT",
          "content": "n\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "           \"RAM: total %lu / free %lu / shared %lu"
        },
        {
          "type": "ESCAPE",
          "content": "\\\\"
        },
        {
          "type": "TEXT",
          "content": "n\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "           \"Memory in buffers = %lu"
        },
        {
          "type": "ESCAPE",
          "content": "\\\\"
        },
        {
          "type": "TEXT",
          "content": "nSwap: total %lu / free %lu"
        },
        {
          "type": "ESCAPE",
          "content": "\\\\"
        },
        {
          "type": "TEXT",
          "content": "n\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "           \"Number of processes = %d"
        },
        {
          "type": "ESCAPE",
          "content": "\\\\"
        },
        {
          "type": "TEXT",
          "content": "n\","
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "           s_info.uptime, s_info.loads[0],"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "           s_info.loads[1], s_info.loads[2],"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "           s_info.totalram, s_info.freeram,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "           s_info.sharedram, s_info.bufferram,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "           s_info.totalswap, s_info.freeswap,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "           s_info.procs);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    exit(EXIT_SUCCESS);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "}"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Sample output"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "code error = 0"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "uptime = 502034s"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Load: 1 min 13376 / 5 min 5504 / 15 min 1152"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "RAM: total 15343616 / free 827392 / shared 8237056"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Memory in buffers = 5066752"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Swap: total 27881472 / free 24698880"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Number of processes = 40"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " SEE ALSO"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " intro (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " syscall (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " errno (3)"
        }
      ]
    ]
  }
]
