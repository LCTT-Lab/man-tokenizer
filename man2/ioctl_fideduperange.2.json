[
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Copyright (c) 2016, Oracle.  All rights reserved."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" %%%LICENSE_START(GPLv2+_DOC_FULL)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" This is free documentation; you can redistribute it and/or"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" modify it under the terms of the GNU General Public License as"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" published by the Free Software Foundation; either version 2 of"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" the License, or (at your option) any later version."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" The GNU General Public License's references to \"object code\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" and \"executables\" are to be interpreted as the output of any"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" document formatting or typesetting system, including"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" intermediate and printed output."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" This manual is distributed in the hope that it will be useful,"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" but WITHOUT ANY WARRANTY; without even the implied warranty of"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" GNU General Public License for more details."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" You should have received a copy of the GNU General Public"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" License along with this manual; if not, see"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" <http://www.gnu.org/licenses/>."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" %%%LICENSE_END"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TH",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IOCTL-FIDEDUPERANGE 2 2017-09-15 \"Linux\" \"Linux Programmer's Manual\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " NAME"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "ioctl_fideduperange "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": " share some the data of one file with another file"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " SYNOPSIS"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".br",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " #include <sys/ioctl.h>"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".br",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " #include <linux/fs.h>"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".BI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"int ioctl(int \" src_fd \", FIDEDUPERANGE, struct file_dedupe_range *\" arg );"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " DESCRIPTION"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If a filesystem supports files sharing physical storage between multiple"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "files, this"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ioctl (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "operation can be used to make some of the data in the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " src_fd"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "file appear in the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " dest_fd"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "file by sharing the underlying storage if the file data is identical"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(\"deduplication\")."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Both files must reside within the same filesystem."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This reduces storage consumption by allowing the filesystem"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to store one shared copy of the data."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If a file write should occur to a shared"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "region, the filesystem must ensure that the changes remain private to the file"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "being written."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This behavior is commonly referred to as \"copy on write\"."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "This ioctl performs the \"compare and share if identical\" operation on up to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " src_length"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "bytes from file descriptor"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " src_fd"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "at offset"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " src_offset \"."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This information is conveyed in a structure of the following form:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "struct file_dedupe_range {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    __u64 src_offset;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    __u64 src_length;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    __u16 dest_count;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    __u16 reserved1;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    __u32 reserved2;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    struct file_dedupe_range_info info[0];"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "};"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Deduplication is atomic with regards to concurrent writes, so no locks need to"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "be taken to obtain a consistent deduplicated copy."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The fields"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " reserved1 \" and \" reserved2"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "must be zero."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Destinations for the deduplication operation are conveyed in the array at the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "end of the structure."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The number of destinations is given in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " dest_count \","
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and the destination information is conveyed in the following form:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "struct file_dedupe_range_info {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    __s64 dest_fd;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    __u64 dest_offset;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    __u64 bytes_deduped;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    __s32 status;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    __u32 reserved;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "};"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Each deduplication operation targets"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " src_length"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "bytes in file descriptor"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " dest_fd"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "at offset"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " dest_offset \"."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The field"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " reserved"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "must be zero."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "During the call,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " src_fd"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "must be open for reading and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " dest_fd"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "must be open for writing."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The combined size of the struct"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " file_dedupe_range"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and the struct"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " file_dedupe_range_info"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "array must not exceed the system page size."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The maximum size of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " src_length"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is filesystem dependent and is typically 16"
        },
        {
          "type": "ESCAPE",
          "content": "\\ "
        },
        {
          "type": "TEXT",
          "content": "MiB."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This limit will be enforced silently by the filesystem."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "By convention, the storage used by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " src_fd"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is mapped into"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " dest_fd"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and the previous contents in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " dest_fd"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are freed."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Upon successful completion of this ioctl, the number of bytes successfully"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "deduplicated is returned in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " bytes_deduped"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and a status code for the deduplication operation is returned in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " status \"."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If even a single byte in the range does not match, the deduplication"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "request will be ignored and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " status"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "set to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FILE_DEDUPE_RANGE_DIFFERS ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " status"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "code is set to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FILE_DEDUPE_RANGE_SAME"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for success, a negative error code in case of error, or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FILE_DEDUPE_RANGE_DIFFERS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "if the data did not match."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " RETURN VALUE"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "On error, "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "1 is returned, and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " errno"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is set to indicate the error."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " ERRORS"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Error codes can be one of, but are not limited to, the following:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ENOMEM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The kernel was unable to allocate sufficient memory to perform the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "operation or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " dest_count"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is so large that the input argument description spans more than a single"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "page of memory."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EBADF"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " src_fd"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is not open for reading;"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " dest_fd"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is not open for writing or is open for append-only writes; or the filesystem"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "which"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " src_fd"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "resides on does not support deduplication."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINVAL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The filesystem does not support deduplicating the ranges of the given files."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This error can also appear if either file descriptor represents"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "a device, FIFO, or socket."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Disk filesystems generally require the offset and length arguments"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to be aligned to the fundamental block size."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Neither Btrfs nor XFS support"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "overlapping deduplication ranges in the same file."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EISDIR"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "One of the files is a directory and the filesystem does not support shared"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "regions in directories."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EOPNOTSUPP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This can appear if the filesystem does not support deduplicating either file"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "descriptor, or if either file descriptor refers to special inodes."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EPERM"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " dest_fd"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is immutable."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ETXTBSY"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "One of the files is a swap file."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Swap files cannot share storage."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EXDEV"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " dest_fd \" and \" src_fd"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are not on the same mounted filesystem."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " VERSIONS"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "This ioctl operation first appeared in Linux 4.5."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "It was previously known as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " BTRFS_IOC_FILE_EXTENT_SAME"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and was private to Btrfs."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " CONFORMING TO"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "This API is Linux-specific."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " NOTES"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Because a copy-on-write operation requires the allocation of new storage, the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " fallocate (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "operation may unshare shared blocks to guarantee that subsequent writes will"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "not fail because of lack of disk space."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Some filesystems may limit the amount of data that can be deduplicated in a"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "single call."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " SEE ALSO"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ioctl (2)"
        }
      ]
    ]
  }
]
