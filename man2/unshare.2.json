[
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Copyright (C) 2006, Janak Desai <janak@us.ibm.com>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" and Copyright (C) 2006, 2012 Michael Kerrisk <mtk.manpages@gmail.com>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" %%%LICENSE_START(GPL_NOVERSION_ONELINE)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Licensed under the GPL"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" %%%LICENSE_END"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Patch Justification:"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" unshare system call is needed to implement, using PAM,"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" per-security_context and/or per-user namespace to provide"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" polyinstantiated directories. Using unshare and bind mounts, a"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" PAM module can create private namespace with appropriate"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" directories(based on user's security context) bind mounted on"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" public directories such as /tmp, thus providing an instance of"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" /tmp that is based on user's security context. Without the"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" unshare system call, namespace separation can only be achieved"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" by clone, which would require porting and maintaining all commands"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" such as login, and su, that establish a user session."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TH",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " UNSHARE 2 2018-02-02 \"Linux\" \"Linux Programmer's Manual\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " NAME"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "unshare "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": " disassociate parts of the process execution context"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " SYNOPSIS"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".nf",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " #define _GNU_SOURCE"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " #include <sched.h>"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".BI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"int unshare(int \" flags );"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".fi",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " DESCRIPTION"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " unshare ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "allows a process (or thread) to disassociate parts of its execution"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "context that are currently being shared with other processes (or threads)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Part of the execution context, such as the mount namespace, is shared"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "implicitly when a new process is created using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " fork (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " vfork (2),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "while other parts, such as virtual memory, may be"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "shared by explicit request when creating a process or thread using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " clone (2)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The main use of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " unshare ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is to allow a process to control its"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "shared execution context without creating a new process."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " flags"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "argument is a bit mask that specifies which parts of"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the execution context should be unshared."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This argument is specified by ORing together zero or more"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "of the following constants:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_FILES"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Reverse the effect of the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " clone (2)"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_FILES"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "flag."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Unshare the file descriptor table, so that the calling process"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "no longer shares its file descriptors with any other process."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_FS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Reverse the effect of the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " clone (2)"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_FS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "flag."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Unshare filesystem attributes, so that the calling process"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "no longer shares its root directory"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( chroot (2)),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "current directory"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( chdir (2)),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or umask"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( umask (2))"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "attributes with any other process."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_NEWCGROUP \" (since Linux 4.6)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This flag has the same effect as the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " clone (2)"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_NEWCGROUP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "flag."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Unshare the cgroup namespace."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Use of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_NEWCGROUP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "requires the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CAP_SYS_ADMIN"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "capability."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_NEWIPC \" (since Linux 2.6.19)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This flag has the same effect as the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " clone (2)"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_NEWIPC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "flag."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Unshare the IPC namespace,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "so that the calling process has a private copy of the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "IPC namespace which is not shared with any other process."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Specifying this flag automatically implies"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_SYSVSEM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "as well."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Use of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_NEWIPC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "requires the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CAP_SYS_ADMIN"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "capability."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_NEWNET \" (since Linux 2.6.24)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This flag has the same effect as the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " clone (2)"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_NEWNET"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "flag."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Unshare the network namespace,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "so that the calling process is moved into a"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "new network namespace which is not shared"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with any previously existing process."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Use of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_NEWNET"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "requires the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CAP_SYS_ADMIN"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "capability."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_NEWNS"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" These flag name are inconsistent:"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" CLONE_NEWNS does the same thing in clone(), but CLONE_VM,"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" CLONE_FS, and CLONE_FILES reverse the action of the clone()"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" flags of the same name."
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "This flag has the same effect as the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " clone (2)"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_NEWNS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "flag."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Unshare the mount namespace,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "so that the calling process has a private copy of"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "its namespace which is not shared with any other process."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Specifying this flag automatically implies"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_FS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "as well."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Use of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_NEWNS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "requires the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CAP_SYS_ADMIN"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "capability."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For further information, see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " mount_namespaces (7)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_NEWPID \" (since Linux 3.8)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This flag has the same effect as the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " clone (2)"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_NEWPID"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "flag."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Unshare the PID namespace,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "so that the calling process has a new PID namespace for its children"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "which is not shared with any previously existing process."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The calling process is"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " not"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "moved into the new namespace."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The first child created by the calling process will have"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the process ID 1 and will assume the role of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " init (1)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in the new namespace."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_NEWPID"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "automatically implies"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_THREAD"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "as well."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Use of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_NEWPID"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "requires the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CAP_SYS_ADMIN"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "capability."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For further information, see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pid_namespaces (7)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_NEWUSER \" (since Linux 3.8)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This flag has the same effect as the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " clone (2)"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_NEWUSER"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "flag."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Unshare the user namespace,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "so that the calling process is moved into a new user namespace"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "which is not shared with any previously existing process."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "As with the child process created by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " clone (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_NEWUSER"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "flag, the caller obtains a full set of capabilities in the new namespace."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_NEWUSER"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "requires that the calling process is not threaded; specifying"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_NEWUSER"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "automatically implies"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_THREAD ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Since Linux 3.9,"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" commit e66eded8309ebf679d3d3c1f5820d1f2ca332c71"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" https://lwn.net/Articles/543273/"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_NEWUSER"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "also automatically implies"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_FS ."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_NEWUSER"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "requires that the user ID and group ID"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "of the calling process are mapped to user IDs and group IDs in the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "user namespace of the calling process at the time of the call."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "For further information on user namespaces, see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " user_namespaces (7)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_NEWUTS \" (since Linux 2.6.19)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This flag has the same effect as the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " clone (2)"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_NEWUTS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "flag."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Unshare the UTS IPC namespace,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "so that the calling process has a private copy of the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "UTS namespace which is not shared with any other process."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Use of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_NEWUTS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "requires the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CAP_SYS_ADMIN"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "capability."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_SYSVSEM \" (since Linux 2.6.26)"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" commit 9edff4ab1f8d82675277a04e359d0ed8bf14a7b7"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "This flag reverses the effect of the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " clone (2)"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_SYSVSEM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "flag."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Unshare System"
        },
        {
          "type": "ESCAPE",
          "content": "\\ "
        },
        {
          "type": "TEXT",
          "content": "V semaphore adjustment"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( semadj )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "values,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "so that the calling process has a new empty"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " semadj"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "list that is not shared with any other process."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If this is the last process that has a reference to the process's current"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " semadj"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "list, then the adjustments in that list are applied"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to the corresponding semaphores, as described in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " semop (2)."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" CLONE_NEWNS If CLONE_SIGHAND is set and signals are also being shared"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" (i.e., current->signal->count > 1), force CLONE_THREAD."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "In addition,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_THREAD ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_SIGHAND ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_VM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "can be specified in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " flags"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "if the caller is single threaded (i.e., it is not sharing"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "its address space with another process or thread)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "In this case, these flags have no effect."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(Note also that specifying"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_THREAD"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "automatically implies"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_VM ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and specifying"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_VM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "automatically implies"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_SIGHAND .)"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" As at 3.9, the following forced implications also apply,"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" although the relevant flags are not yet implemented."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" If CLONE_THREAD is set force CLONE_VM."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" If CLONE_VM is set, force CLONE_SIGHAND."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If the process is multithreaded, then"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the use of these flags results in an error."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" See kernel/fork.c::check_unshare_flags()"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " flags"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is specified as zero, then"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " unshare ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is a no-op;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "no changes are made to the calling process's execution context."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " RETURN VALUE"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "On success, zero returned."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "On failure, "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "1 is returned and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " errno"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is set to indicate the error."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " ERRORS"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINVAL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "An invalid bit was specified in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " flags ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINVAL"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_THREAD ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_SIGHAND ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_VM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "was specified in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " flags ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and the caller is multithreaded."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINVAL"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_NEWIPC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "was specified in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " flags ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "but the kernel was not configured with the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CONFIG_SYSVIPC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CONFIG_IPC_NS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "options."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINVAL"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_NEWNET"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "was specified in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " flags ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "but the kernel was not configured with the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CONFIG_NET_NS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "option."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINVAL"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_NEWPID"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "was specified in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " flags ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "but the kernel was not configured with the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CONFIG_PID_NS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "option."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINVAL"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_NEWUSER"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "was specified in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " flags ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "but the kernel was not configured with the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CONFIG_USER_NS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "option."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINVAL"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_NEWUTS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "was specified in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " flags ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "but the kernel was not configured with the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CONFIG_UTS_NS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "option."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINVAL"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_NEWPID"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "was specified in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " flags ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "but the process has previously called"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " unshare ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_NEWPID"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "flag."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ENOMEM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Cannot allocate sufficient memory to copy parts of caller's"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "context that need to be unshared."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ENOSPC \" (since Linux 3.7)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" commit f2302505775fd13ba93f034206f1e2a587017929"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_NEWPID"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "was specified in flags,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "but the limit on the nesting depth of PID namespaces"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "would have been exceeded; see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pid_namespaces (7)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ENOSPC \" (since Linux 4.9; beforehand \" EUSERS )"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_NEWUSER"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "was specified in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " flags ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and the call would cause the limit on the number of"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "nested user namespaces to be exceeded."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "See"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " user_namespaces (7)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "From Linux 3.11 to Linux 4.8, the error diagnosed in this case was"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EUSERS ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ENOSPC \" (since Linux 4.9)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "One of the values in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " flags"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "specified the creation of a new user namespace,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "but doing so would have caused the limit defined by the corresponding file in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc/sys/user"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to be exceeded."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For further details, see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " namespaces (7)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EPERM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The calling process did not have the required privileges for this operation."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EPERM"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_NEWUSER"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "was specified in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " flags ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "but either the effective user ID or the effective group ID of the caller"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "does not have a mapping in the parent namespace (see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " user_namespaces (7))."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EPERM \" (since Linux 3.9)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" commit 3151527ee007b73a0ebd296010f1c0454a919c7d"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_NEWUSER"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "was specified in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " flags"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and the caller is in a chroot environment"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" FIXME What is the rationale for this restriction?"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "(i.e., the caller's root directory does not match the root directory"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "of the mount namespace in which it resides)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EUSERS \" (from Linux 3.11 to Linux 4.8)\""
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_NEWUSER"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "was specified in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " flags ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and the limit on the number of nested user namespaces would be exceeded."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "See the discussion of the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ENOSPC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "error above."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " VERSIONS"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " unshare ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "system call was added to Linux in kernel 2.6.16."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " CONFORMING TO"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " unshare ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "system call is Linux-specific."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " NOTES"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Not all of the process attributes that can be shared when"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "a new process is created using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " clone (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "can be unshared using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " unshare ()."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "In particular, as at kernel 3.8,"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" FIXME all of the following needs to be reviewed for the current kernel"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " unshare ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "does not implement flags that reverse the effects of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_SIGHAND ,"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" However, we can do unshare(CLONE_SIGHAND) if CLONE_SIGHAND"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" was not specified when doing clone(); i.e., unsharing"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" signal handlers is permitted if we are not actually"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" sharing signal handlers.   mtk"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_THREAD ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_VM ."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" However, we can do unshare(CLONE_VM) if CLONE_VM"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" was not specified when doing clone(); i.e., unsharing"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" virtual memory is permitted if we are not actually"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" sharing virtual memory.   mtk"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Such functionality may be added in the future, if required."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"9) Future Work"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"--------------"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"The current implementation of unshare does not allow unsharing of"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"signals and signal handlers. Signals are complex to begin with and"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"to unshare signals and/or signal handlers of a currently running"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"process is even more complex. If in the future there is a specific"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"need to allow unsharing of signals and/or signal handlers, it can"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"be incrementally added to unshare without affecting legacy"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"applications using unshare."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " EXAMPLE"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The program below provides a simple implementation of the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " unshare (1)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "command, which unshares one or more namespaces and executes the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "command supplied in its command-line arguments."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Here's an example of the use of this program,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "running a shell in a new mount namespace,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and verifying that the original shell and the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "new shell are in separate mount namespaces:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "$ "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Breadlink /proc/$$/ns/mnt"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "mnt:[4026531840]"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "$ "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Bsudo ./unshare -m /bin/bash"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "# "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Breadlink /proc/$$/ns/mnt"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "mnt:[4026532325]"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The differing output of the two"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " readlink (1)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "commands shows that the two shells are in different mount namespaces."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Program source"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "ESCAPE",
          "content": "\\&"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "/* unshare.c"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "   A simple implementation of the unshare(1) command: unshare"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "   namespaces and execute a command."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "*/"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#define _GNU_SOURCE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#include <sched.h>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#include <unistd.h>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#include <stdlib.h>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#include <stdio.h>"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "/* A simple error"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "handling function: print an error message based"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "   on the value in "
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": "errno"
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": " and terminate the calling process */"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "#define errExit(msg)    do { perror(msg); exit(EXIT_FAILURE); "
        },
        {
          "type": "ESCAPE",
          "content": "\\\\"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                        } while (0)"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "static void"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "usage(char *pname)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "{"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    fprintf(stderr, \"Usage: %s [options] program [arg...]"
        },
        {
          "type": "ESCAPE",
          "content": "\\\\"
        },
        {
          "type": "TEXT",
          "content": "n\", pname);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    fprintf(stderr, \"Options can be:"
        },
        {
          "type": "ESCAPE",
          "content": "\\\\"
        },
        {
          "type": "TEXT",
          "content": "n\");"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    fprintf(stderr, \"    "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "i   unshare IPC namespace"
        },
        {
          "type": "ESCAPE",
          "content": "\\\\"
        },
        {
          "type": "TEXT",
          "content": "n\");"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    fprintf(stderr, \"    "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "m   unshare mount namespace"
        },
        {
          "type": "ESCAPE",
          "content": "\\\\"
        },
        {
          "type": "TEXT",
          "content": "n\");"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    fprintf(stderr, \"    "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "n   unshare network namespace"
        },
        {
          "type": "ESCAPE",
          "content": "\\\\"
        },
        {
          "type": "TEXT",
          "content": "n\");"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    fprintf(stderr, \"    "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "p   unshare PID namespace"
        },
        {
          "type": "ESCAPE",
          "content": "\\\\"
        },
        {
          "type": "TEXT",
          "content": "n\");"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    fprintf(stderr, \"    "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "u   unshare UTS namespace"
        },
        {
          "type": "ESCAPE",
          "content": "\\\\"
        },
        {
          "type": "TEXT",
          "content": "n\");"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    fprintf(stderr, \"    "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "U   unshare user namespace"
        },
        {
          "type": "ESCAPE",
          "content": "\\\\"
        },
        {
          "type": "TEXT",
          "content": "n\");"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    exit(EXIT_FAILURE);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "}"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "int"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "main(int argc, char *argv[])"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "{"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    int flags, opt;"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    flags = 0;"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    while ((opt = getopt(argc, argv, \"imnpuU\")) != "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "1) {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        switch (opt) {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        case "
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": "i"
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": ": flags |= CLONE_NEWIPC;        break;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        case "
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": "m"
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": ": flags |= CLONE_NEWNS;         break;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        case "
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": "n"
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": ": flags |= CLONE_NEWNET;        break;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        case "
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": "p"
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": ": flags |= CLONE_NEWPID;        break;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        case "
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": "u"
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": ": flags |= CLONE_NEWUTS;        break;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        case "
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": "U"
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": ": flags |= CLONE_NEWUSER;       break;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        default:  usage(argv[0]);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        }"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    }"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    if (optind >= argc)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        usage(argv[0]);"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    if (unshare(flags) == "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "1)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        errExit(\"unshare\");"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    execvp(argv[optind], &argv[optind]);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    errExit(\"execvp\");"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "}"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " SEE ALSO"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " unshare (1),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " clone (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " fork (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " kcmp (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " setns (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " vfork (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " namespaces (7)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " Documentation/userspace-api/unshare.rst"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in the Linux kernel source tree"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" commit f504d47be5e8fa7ecf2bf660b18b42e6960c0eb2"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "(or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " Documentation/unshare.txt"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "before Linux 4.12)"
        }
      ]
    ]
  }
]
