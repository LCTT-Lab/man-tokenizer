[
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Copyright (C) 2008, George Spelvin <linux@horizon.com>,"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" and Copyright (C) 2008, Matt Mackall <mpm@selenic.com>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" and Copyright (C) 2016, Laurent Georget <laurent.georget@supelec.fr>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" and Copyright (C) 2016, Nikos Mavrogiannopoulos <nmav@redhat.com>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" %%%LICENSE_START(VERBATIM)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Permission is granted to make and distribute verbatim copies of this"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" manual provided the copyright notice and this permission notice are"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" preserved on all copies."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Permission is granted to copy and distribute modified versions of"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" this manual under the conditions for verbatim copying, provided that"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" the entire resulting derived work is distributed under the terms of"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" a permission notice identical to this one."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Since the Linux kernel and libraries are constantly changing, this"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" manual page may be incorrect or out-of-date.  The author(s) assume."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" no responsibility for errors or omissions, or for damages resulting."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" from the use of the information contained herein.  The author(s) may."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" not have taken the same level of care in the production of this."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" manual, which is licensed free of charge, as they might when working."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" professionally."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Formatted or processed versions of this manual, if unaccompanied by"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" the source, must acknowledge the copyright and authors of this work."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" %%%LICENSE_END"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" The following web page is quite informative:"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" http://www.2uo.de/myths-about-urandom/"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TH",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " RANDOM 7 2017-03-13 \"Linux\" \"Linux Programmer's Manual\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " NAME"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "random "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": " overview of interfaces for obtaining randomness"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " DESCRIPTION"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The kernel random-number generator relies on entropy gathered from"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "device drivers and other sources of environmental noise to seed"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "a cryptographically secure pseudorandom number generator (CSPRNG)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "It is designed for security, rather than speed."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The following interfaces provide access to output from the kernel CSPRNG:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " * 3"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /dev/urandom"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /dev/random"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "devices, both described in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " random (4)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "These devices have been present on Linux since early times,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and are also available on many other systems."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The Linux-specific"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " getrandom (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "system call, available since Linux 3.17."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This system call provides access either to the same source as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /dev/urandom"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(called the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " urandom"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "source in this page)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or to the same source as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /dev/random"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(called the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " random"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "source in this page)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The default is the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " urandom"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "source; the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " random"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "source is selected by specifying the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " GRND_RANDOM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "flag to the system call."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " getentropy (3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "function provides a slightly more portable interface on top of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " getrandom (2).)"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Initialization of the entropy pool"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The kernel collects bits of entropy from the environment."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "When a sufficient number of random bits has been collected, the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "entropy pool is considered to be initialized."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Choice of random source"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Unless you are doing long-term key generation (and most likely not even"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "then), you probably shouldn't be reading from the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /dev/random"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "device or employing"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " getrandom (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " GRND_RANDOM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "flag."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Instead, either read from the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /dev/urandom"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "device or employ"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " getrandom (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "without the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " GRND_RANDOM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "flag."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The cryptographic algorithms used for the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " urandom"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "source are quite conservative, and so should be sufficient for all purposes."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The disadvantage of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " GRND_RANDOM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and reads from"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /dev/random"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is that the operation can block for an indefinite period of time."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Furthermore, dealing with the partially fulfilled"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "requests that can occur when using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " GRND_RANDOM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or when reading from"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /dev/random"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "increases code complexity."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Monte Carlo and other probabilistic sampling applications"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Using these interfaces to provide large quantities of data for"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Monte Carlo simulations or other programs/algorithms which are"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "doing probabilistic sampling will be slow."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Furthermore, it is unnecessary, because such applications do not"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "need cryptographically secure random numbers."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Instead, use the interfaces described in this page to obtain"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "a small amount of data to seed a user-space pseudorandom"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "number generator for use by such applications."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Comparison between getrandom, /dev/urandom, and /dev/random"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The following table summarizes the behavior of the various"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "interfaces that can be used to obtain randomness."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " GRND_NONBLOCK"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is a flag that can be used to control the blocking behavior of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " getrandom (2)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The final column of the table considers the case that can occur"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in early boot time when the entropy pool is not yet initialized."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".ad",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " l"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TS",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "allbox;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "lbw13 lbw12 lbw14 lbw18"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "l l l l."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Interface\tPool\tT{"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Blocking"
        }
      ],
      [
        {
          "type": "ESCAPE",
          "content": "\\%"
        },
        {
          "type": "TEXT",
          "content": "behavior"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "T}\tT{"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Behavior when pool is not yet ready"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "T}"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "T{"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /dev/random"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "T}\tT{"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Blocking pool"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "T}\tT{"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If entropy too low, blocks until there is enough entropy again"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "T}\tT{"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Blocks until enough entropy gathered"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "T}"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "T{"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /dev/urandom"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "T}\tT{"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "CSPRNG output"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "T}\tT{"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Never blocks"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "T}\tT{"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Returns output from uninitialized CSPRNG (may be low entropy and unsuitable for cryptography)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "T}"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "T{"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " getrandom ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "T}\tT{"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Same as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /dev/urandom"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "T}\tT{"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Does not block once is pool ready"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "T}\tT{"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Blocks until pool ready"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "T}"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "T{"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " getrandom ()"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " GRND_RANDOM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "T}\tT{"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Same as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /dev/random"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "T}\tT{"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If entropy too low, blocks until there is enough entropy again"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "T}\tT{"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Blocks until pool ready"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "T}"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "T{"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " getrandom ()"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " GRND_NONBLOCK"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "T}\tT{"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Same as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /dev/urandom"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "T}\tT{"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Does not block once is pool ready"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "T}\tT{"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EAGAIN"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "T}"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "T{"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " getrandom ()"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " GRND_RANDOM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "+"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " GRND_NONBLOCK"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "T}\tT{"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Same as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /dev/random"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "T}\tT{"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EAGAIN"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "if not enough entropy available"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "T}\tT{"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EAGAIN"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "T}"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TE",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".ad",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Generating cryptographic keys"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The amount of seed material required to generate a cryptographic key"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "equals the effective key size of the key."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For example, a 3072-bit RSA"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or Diffie-Hellman private key has an effective key size of 128 bits"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(it requires about 2^128 operations to break) so a key generator"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "needs only 128 bits (16 bytes) of seed material from"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /dev/random ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "While some safety margin above that minimum is reasonable, as a guard"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "against flaws in the CSPRNG algorithm, no cryptographic primitive"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "available today can hope to promise more than 256 bits of security,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "so if any program reads more than 256 bits (32 bytes) from the kernel"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "random pool per invocation, or per reasonable reseed interval (not less"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "than one minute), that should be taken as a sign that its cryptography is"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " not"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "skillfully implemented."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " SEE ALSO"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " getrandom (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " getauxval (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " getentropy (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " random (4),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " urandom (4),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " signal (7)"
        }
      ]
    ]
  }
]
