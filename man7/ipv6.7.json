[
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" This man page is Copyright (C) 2000 Andi Kleen <ak@muc.de>."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" %%%LICENSE_START(VERBATIM_ONE_PARA)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Permission is granted to distribute possibly modified copies"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" of this page provided the header is included verbatim,"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" and in case of nontrivial modification author and date"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" of the modification is added to the header."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" %%%LICENSE_END"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" $Id: ipv6.7,v 1.3 2000/12/20 18:10:31 ak Exp $"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" The following socket options are undocumented"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tAll of the following are from:"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t    commit 333fad5364d6b457c8d837f7d05802d2aaf8a961"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t    Author: YOSHIFUJI Hideaki <yoshfuji@linux-ipv6.org>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t    Support several new sockopt / ancillary data in Advanced API (RFC3542)."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t\tIPV6_2292PKTINFO (2.6.14)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t\t    Formerly IPV6_PKTINFO"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t\tIPV6_2292HOPOPTS (2.6.14)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t\t    Formerly IPV6_HOPOPTS, which is documented"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t\tIPV6_2292DSTOPTS (2.6.14)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t\t    Formerly IPV6_DSTOPTS, which is documented"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t\tIPV6_2292RTHDR (2.6.14)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t\t    Formerly IPV6_RTHDR, which is documented"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t\tIPV6_2292PKTOPTIONS (2.6.14)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t\t    Formerly IPV6_PKTOPTIONS"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t\tIPV6_2292HOPLIMIT (2.6.14)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t\t    Formerly IPV6_HOPLIMIT, which is documented"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t\tIPV6_RECVHOPLIMIT (2.6.14)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t\tIPV6_RECVHOPOPTS (2.6.14)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t\tIPV6_RTHDRDSTOPTS (2.6.14)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t\tIPV6_RECVRTHDR (2.6.14)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t\tIPV6_RECVDSTOPTS (2.6.14)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tIPV6_RECVPATHMTU (2.6.35, flag value added in 2.6.14)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t    commit 793b14731686595a741d9f47726ad8b9a235385a"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t    Author: Brian Haley <brian.haley@hp.com>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tIPV6_PATHMTU (2.6.35, flag value added in 2.6.14)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t    commit 793b14731686595a741d9f47726ad8b9a235385a"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t    Author: Brian Haley <brian.haley@hp.com>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tIPV6_DONTFRAG (2.6.35, flag value added in 2.6.14)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t    commit 793b14731686595a741d9f47726ad8b9a235385a"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t    Author: Brian Haley <brian.haley@hp.com>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t    commit 4b340ae20d0e2366792abe70f46629e576adaf5e"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t    Author: Brian Haley <brian.haley@hp.com>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tIPV6_RECVTCLASS (2.6.14)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t    commit 41a1f8ea4fbfcdc4232f023732584aae2220de31"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t    Author: YOSHIFUJI Hideaki <yoshfuji@linux-ipv6.org>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t\tBased on patch from David L Stevens <dlstevens@us.ibm.com>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tIPV6_CHECKSUM (2.2)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tIPV6_NEXTHOP (2.2)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tIPV6_JOIN_ANYCAST (2.4.21 / 2.6)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tIPV6_LEAVE_ANYCAST (2.4.21 / 2.6)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tIPV6_FLOWLABEL_MGR (2.2.7 / 2.4)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tIPV6_FLOWINFO_SEND (2.2.7 / 2.4)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tIPV6_IPSEC_POLICY (2.6)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tIPV6_XFRM_POLICY (2.6)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tIPV6_TCLASS (2.6)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tIPV6_ADDR_PREFERENCES (2.6.26)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t    commit 7cbca67c073263c179f605bdbbdc565ab29d801d"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t    Author: YOSHIFUJI Hideaki <yoshfuji@linux-ipv6.org>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tIPV6_MINHOPCOUNT (2.6.35)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t    commit e802af9cabb011f09b9c19a82faef3dd315f27eb"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t    Author: Stephen Hemminger <shemminger@vyatta.com>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tIPV6_ORIGDSTADDR (2.6.37)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t    Actually a CMSG rather than a sockopt?"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t    In header file, we have IPV6_RECVORIGDSTADDR == IPV6_ORIGDSTADDR"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t    commit 6c46862280c5f55eda7750391bc65cd7e08c7535"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t    Author: Balazs Scheidler <bazsi@balabit.hu>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tIPV6_RECVORIGDSTADDR (2.6.37)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t    commit 6c46862280c5f55eda7750391bc65cd7e08c7535"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t    Author: Balazs Scheidler <bazsi@balabit.hu>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t        Support for IPV6_RECVORIGDSTADDR sockopt for UDP sockets"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t\twere contributed by Harry Mason."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tIPV6_TRANSPARENT (2.6.37)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t    commit 6c46862280c5f55eda7750391bc65cd7e08c7535"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t    Author: Balazs Scheidler <bazsi@balabit.hu>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tIPV6_UNICAST_IF (3.4)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t    commit c4062dfc425e94290ac427a98d6b4721dd2bc91f"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t    Author: Erich E. Hoover <ehoover@mines.edu>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TH",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IPV6 7 2017-09-15 \"Linux\" \"Linux Programmer's Manual\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " NAME"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "ipv6 "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": " Linux IPv6 protocol implementation"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " SYNOPSIS"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " #include <sys/socket.h>"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".br",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " #include <netinet/in.h>"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " tcp6_socket \" = socket(AF_INET6, SOCK_STREAM, 0);\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".br",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " raw6_socket \" = socket(AF_INET6, SOCK_RAW, \" protocol \");\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".br",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " udp6_socket \" = socket(AF_INET6, SOCK_DGRAM, \" protocol \");\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " DESCRIPTION"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Linux 2.2 optionally implements the Internet Protocol, version 6."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This man page contains a description of the IPv6 basic API as"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "implemented by the Linux kernel and glibc 2.1."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The interface"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is based on the BSD sockets interface; see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " socket (7)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The IPv6 API aims to be mostly compatible with the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "IPv4 API (see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ip (7))."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Only differences are described in this man page."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "To bind an"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " AF_INET6"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "socket to any process, the local address should be copied from the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " in6addr_any"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "variable which has"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " in6_addr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "type."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "In static initializations,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IN6ADDR_ANY_INIT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "may also be used, which expands to a constant expression."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Both of them are in network byte order."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The IPv6 loopback address (::1) is available in the global"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " in6addr_loopback"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "variable."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For initializations,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IN6ADDR_LOOPBACK_INIT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "should be used."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "IPv4 connections can be handled with the v6 API by using the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "v4-mapped-on-v6 address type;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "thus a program needs to support only this API type to"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "support both protocols."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This is handled transparently by the address"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "handling functions in the C library."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "IPv4 and IPv6 share the local port space."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "When you get an IPv4 connection"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or packet to an IPv6 socket, its source address will be mapped"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to v6 and it will be mapped to v6."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Address format"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "struct sockaddr_in6 {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    sa_family_t     sin6_family;   /* AF_INET6 */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    in_port_t       sin6_port;     /* port number */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint32_t        sin6_flowinfo; /* IPv6 flow information */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    struct in6_addr sin6_addr;     /* IPv6 address */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint32_t        sin6_scope_id; /* Scope ID (new in 2.4) */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "};"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "struct in6_addr {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    unsigned char   s6_addr[16];   /* IPv6 address */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "};"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sin6_family"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is always set to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " AF_INET6 ;"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sin6_port"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is the protocol port (see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sin_port"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ip (7));"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sin6_flowinfo"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is the IPv6 flow identifier;"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sin6_addr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is the 128-bit IPv6 address."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sin6_scope_id"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is an ID depending on the scope of the address."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "It is new in Linux 2.4."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Linux supports it only for link-local addresses, in that case"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sin6_scope_id"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "contains the interface index (see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " netdevice (7))"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "IPv6 supports several address types: unicast to address a single"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "host, multicast to address a group of hosts,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "anycast to address the nearest member of a group of hosts"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(not implemented in Linux), IPv4-on-IPv6 to"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "address an IPv4 host, and other reserved address types."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The address notation for IPv6 is a group of 8 4-digit hexadecimal"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "numbers, separated with a "
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": ":"
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": "."
        }
      ],
      [
        {
          "type": "ESCAPE",
          "content": "\\&"
        },
        {
          "type": "TEXT",
          "content": "\"::\" stands for a string of 0 bits."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Special addresses are ::1 for loopback and ::FFFF:<IPv4 address>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for IPv4-mapped-on-IPv6."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The port space of IPv6 is shared with IPv4."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Socket options"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "IPv6 supports some protocol-specific socket options that can be set with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " setsockopt (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and read with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " getsockopt (2)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The socket option level for IPv6 is"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IPPROTO_IPV6 ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A boolean integer flag is zero when it is false, otherwise true."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IPV6_ADDRFORM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Turn an"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " AF_INET6"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "socket into a socket of a different address family."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Only"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " AF_INET"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is currently supported for that."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "It is allowed only for IPv6 sockets"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "that are connected and bound to a v4-mapped-on-v6 address."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The argument is a pointer to an integer containing"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " AF_INET ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This is useful to pass v4-mapped sockets as file descriptors to"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "programs that don't know how to deal with the IPv6 API."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IPV6_ADD_MEMBERSHIP, IPV6_DROP_MEMBERSHIP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Control membership in multicast groups."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Argument is a pointer to a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"struct ipv6_mreq\" ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IPV6_MTU"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " getsockopt ():"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Retrieve the current known path MTU of the current socket."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Valid only when the socket has been connected."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Returns an integer."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " setsockopt ():"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Set the MTU to be used for the socket."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The MTU is limited by the device"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "MTU or the path MTU when path MTU discovery is enabled."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Argument is a pointer to integer."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IPV6_MTU_DISCOVER"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Control path-MTU discovery on the socket."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "See"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_MTU_DISCOVER"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ip (7)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for details."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IPV6_MULTICAST_HOPS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Set the multicast hop limit for the socket."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Argument is a pointer to an"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "integer."
        }
      ],
      [
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "1 in the value means use the route default, otherwise it should be"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "between 0 and 255."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IPV6_MULTICAST_IF"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Set the device for outgoing multicast packets on the socket."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This is allowed only for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SOCK_DGRAM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SOCK_RAW"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "socket."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The argument is a pointer to an interface index (see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " netdevice (7))"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in an integer."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IPV6_MULTICAST_LOOP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Control whether the socket sees multicast packets that it has send itself."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Argument is a pointer to boolean."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IPV6_RECVPKTINFO \" (since Linux 2.6.14)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Set delivery of the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IPV6_PKTINFO"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "control message on incoming datagrams."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Such control messages contain a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"struct in6_pktinfo\" ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "as per RFC 3542."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Allowed only for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SOCK_DGRAM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SOCK_RAW"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "sockets."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Argument is a pointer to a boolean value in an integer."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".nh",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IPV6_RTHDR, IPV6_AUTHHDR, IPV6_DSTOPTS, IPV6_HOPOPTS, IPV6_FLOWINFO, IPV6_HOPLIMIT"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".hy",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Set delivery of control messages for incoming datagrams containing"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "extension headers from the received packet."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IPV6_RTHDR"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "delivers the routing header,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IPV6_AUTHHDR"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "delivers the authentication header,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IPV6_DSTOPTS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "delivers the destination options,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IPV6_HOPOPTS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "delivers the hop options,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IPV6_FLOWINFO"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "delivers an integer containing the flow ID,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IPV6_HOPLIMIT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "delivers an integer containing the hop count of the packet."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The control messages have the same type as the socket option."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "All these header options can also be set for outgoing packets"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "by putting the appropriate control message into the control buffer of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sendmsg (2)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Allowed only for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SOCK_DGRAM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SOCK_RAW"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "sockets."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Argument is a pointer to a boolean value."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IPV6_RECVERR"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Control receiving of asynchronous error options."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "See"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_RECVERR"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ip (7)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for details."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Argument is a pointer to boolean."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IPV6_ROUTER_ALERT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Pass forwarded packets containing a router alert hop-by-hop option to"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "this socket."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Allowed only for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SOCK_RAW"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "sockets."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The tapped packets are not forwarded by the kernel, it is the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "user's responsibility to send them out again."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Argument is a pointer to an integer."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A positive integer indicates a router alert option value to intercept."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Packets carrying a router alert option with a value field containing"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "this integer will be delivered to the socket."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A negative integer disables delivery of packets with router alert options"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to this socket."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IPV6_UNICAST_HOPS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Set the unicast hop limit for the socket."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Argument is a pointer to an integer."
        }
      ],
      [
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "1 in the value means use the route default,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "otherwise it should be between 0 and 255."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IPV6_V6ONLY \" (since Linux 2.4.21 and 2.6)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" See RFC 3493"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If this flag is set to true (nonzero), then the socket is restricted"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to sending and receiving IPv6 packets only."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "In this case, an IPv4 and an IPv6 application can bind"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to a single port at the same time."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If this flag is set to false (zero),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "then the socket can be used to send and receive packets"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to and from an IPv6 address or an IPv4-mapped IPv6 address."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The argument is a pointer to a boolean value in an integer."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The default value for this flag is defined by the contents of the file"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc/sys/net/ipv6/bindv6only ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The default value for that file is 0 (false)."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" FLOWLABEL_MGR, FLOWINFO_SEND"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " ERRORS"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ENODEV"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The user tried to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " bind (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to a link-local IPv6 address, but the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sin6_scope_id"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in the supplied"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sockaddr_in6"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "structure is not a valid"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "interface index."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " VERSIONS"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Linux 2.4 will break binary compatibility for the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sockaddr_in6"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for 64-bit"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "hosts by changing the alignment of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " in6_addr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and adding an additional"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sin6_scope_id"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "field."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The kernel interfaces stay compatible, but a program including"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sockaddr_in6"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " in6_addr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "into other structures may not be."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This is not"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "a problem for 32-bit hosts like i386."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sin6_flowinfo"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "field is new in Linux 2.4."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "It is transparently passed/read by the kernel"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "when the passed address length contains it."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Some programs that pass a longer address buffer and then"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "check the outgoing address length may break."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " NOTES"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sockaddr_in6"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "structure is bigger than the generic"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sockaddr ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Programs that assume that all address types can be stored safely in a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " struct sockaddr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "need to be changed to use"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " struct sockaddr_storage"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for that instead."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SOL_IP ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SOL_IPV6 ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SOL_ICMPV6"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and other"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SOL_ *"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "socket options are nonportable variants of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IPPROTO_ *."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "See also"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ip (7)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " BUGS"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The IPv6 extended API as in RFC"
        },
        {
          "type": "ESCAPE",
          "content": "\\ "
        },
        {
          "type": "TEXT",
          "content": "2292 is currently only partly"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "implemented;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "although the 2.2 kernel has near complete support for receiving options,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the macros for generating IPv6 options are missing in glibc 2.1."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "IPSec support for EH and AH headers is missing."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Flow label management is not complete and not documented here."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "This man page is not complete."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " SEE ALSO"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " cmsg (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ip (7)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "RFC"
        },
        {
          "type": "ESCAPE",
          "content": "\\ "
        },
        {
          "type": "TEXT",
          "content": "2553: IPv6 BASIC API;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Linux tries to be compliant to this."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "RFC"
        },
        {
          "type": "ESCAPE",
          "content": "\\ "
        },
        {
          "type": "TEXT",
          "content": "2460: IPv6 specification."
        }
      ]
    ]
  }
]
