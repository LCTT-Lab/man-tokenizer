[
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Copyright (c) 1993 by Thomas Koenig (ig25@rz.uni-karlsruhe.de)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" and Copyright (C) 2014 Michael Kerrisk <mtk.manpages@gmail.com>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" %%%LICENSE_START(VERBATIM)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Permission is granted to make and distribute verbatim copies of this"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" manual provided the copyright notice and this permission notice are"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" preserved on all copies."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Permission is granted to copy and distribute modified versions of this"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" manual under the conditions for verbatim copying, provided that the"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" entire resulting derived work is distributed under the terms of a"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" permission notice identical to this one."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Since the Linux kernel and libraries are constantly changing, this"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" manual page may be incorrect or out-of-date.  The author(s) assume no"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" responsibility for errors or omissions, or for damages resulting from"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" the use of the information contained herein.  The author(s) may not"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" have taken the same level of care in the production of this manual,"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" which is licensed free of charge, as they might when working"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" professionally."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Formatted or processed versions of this manual, if unaccompanied by"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" the source, must acknowledge the copyright and authors of this work."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" %%%LICENSE_END"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Modified Sat Jul 24 17:28:34 1993 by Rik Faith <faith@cs.unc.edu>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Modified Sun Jun 01 17:16:34 1997 by Jochen Hein"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"   <jochen.hein@delphi.central.de>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Modified Thu Apr 25 00:43:19 2002 by Bruno Haible <bruno@clisp.org>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TH",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LOCALE 7  2017-09-15 \"Linux\" \"Linux Programmer's Manual\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " NAME"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "locale "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": " description of multilanguage support"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " SYNOPSIS"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".nf",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " #include <locale.h>"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".fi",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " DESCRIPTION"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "A locale is a set of language and cultural rules."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "These cover aspects"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "such as language for messages, different character sets, lexicographic"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "conventions, and so on."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A program needs to be able to determine its locale"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and act accordingly to be portable to different cultures."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The header"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " <locale.h>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "declares data types, functions and macros which are useful in this"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "task."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The functions it declares are"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " setlocale (3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to set the current locale, and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " localeconv (3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to get information about number formatting."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "There are different categories for locale information a program might"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "need; they are declared as macros."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Using them as the first argument"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " setlocale (3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "function, it is possible to set one of these to the desired locale:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LC_ADDRESS \" (GNU extension, since glibc 2.2)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" See ISO/IEC Technical Report 14652"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Change settings that describe the formats (e.g., postal addresses)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "used to describe locations and geography-related items."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Applications that need this information can use"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " nl_langinfo (3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to retrieve nonstandard elements, such as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " _NL_ADDRESS_COUNTRY_NAME"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(country name, in the language of the locale)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " _NL_ADDRESS_LANG_NAME"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(language name, in the language of the locale),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "which return strings such as \"Deutschland\" and \"Deutsch\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(for German-language locales)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(Other element names are listed in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " <langinfo.h> .)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LC_COLLATE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This category governs the collation rules used for"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "sorting and regular expressions,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "including character equivalence classes and"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "multicharacter collating elements."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This locale category changes the behavior of the functions"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " strcoll (3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " strxfrm (3),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "which are used to compare strings in the local alphabet."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For example,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the German sharp s is sorted as \"ss\"."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LC_CTYPE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This category determines the interpretation of byte sequences as characters"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(e.g., single versus multibyte characters), character classifications"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(e.g., alphabetic or digit), and the behavior of character classes."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "On glibc systems, this category also determines"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the character transliteration rules for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " iconv (1)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " iconv (3)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "It changes the behavior of the character handling and"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "classification functions, such as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " isupper (3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " toupper (3),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and the multibyte character functions such as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " mblen (3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " wctomb (3)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LC_IDENTIFICATION \" (GNU extension, since glibc 2.2)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" See ISO/IEC Technical Report 14652"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Change settings that relate to the metadata for the locale."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Applications that need this information can use"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " nl_langinfo (3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to retrieve nonstandard elements, such as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " _NL_IDENTIFICATION_TITLE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(title of this locale document)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " _NL_IDENTIFICATION_TERRITORY"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(geographical territory to which this locale document applies),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "which might return strings such as \"English locale for the USA\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and \"USA\"."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(Other element names are listed in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " <langinfo.h> .)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LC_MONETARY"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This category determines the formatting used for"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "monetary-related numeric values."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This changes the information returned by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " localeconv (3),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "which describes the way numbers are usually printed, with details such"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "as decimal point versus decimal comma."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This information is internally"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "used by the function"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " strfmon (3)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LC_MESSAGES"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This category affects the language in which messages are displayed"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and what an affirmative or negative answer looks like."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The GNU C library contains the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " gettext (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ngettext (3),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " rpmatch (3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "functions to ease the use of this information."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The GNU gettext family of"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "functions also obey the environment variable"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LANGUAGE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(containing a colon-separated list of locales)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "if the category is set to a valid locale other than"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"\"\"C\"\"\" ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This category also affects the behavior of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " catopen (3)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LC_MEASUREMENT \" (GNU extension, since glibc 2.2)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Change the settings relating to the measurement system in the locale"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(i.e., metric versus US customary units)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Applications can use"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " nl_langinfo (3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to retrieve the nonstandard"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " _NL_MEASUREMENT_MEASUREMENT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "element, which returns a pointer to a character"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "that has the value 1 (metric) or 2 (US customary units)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LC_NAME \" (GNU extension, since glibc 2.2)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" See ISO/IEC Technical Report 14652"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Change settings that describe the formats used to address persons."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Applications that need this information can use"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " nl_langinfo (3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to retrieve nonstandard elements, such as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " _NL_NAME_NAME_MR"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(general salutation for men)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " _NL_NAME_NAME_MS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(general salutation for women)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "elements, which return strings such as \"Herr\" and \"Frau\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(for German-language locales)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(Other element names are listed in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " <langinfo.h> .)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LC_NUMERIC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This category determines the formatting rules used for nonmonetary"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "numeric values"
        },
        {
          "type": "ESCAPE",
          "content": "\\(em"
        },
        {
          "type": "TEXT",
          "content": "for example,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the thousands separator and the radix character"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(a period in most English-speaking countries,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "but a comma in many other regions)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "It affects functions such as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " printf (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " scanf (3),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " strtod (3)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This information can also be read with the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " localeconv (3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "function."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LC_PAPER \" (GNU extension, since glibc 2.2)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" See ISO/IEC Technical Report 14652"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Change the settings relating to the dimensions of the standard paper size"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(e.g., US letter versus A4)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Applications that need the dimensions can obtain them by using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " nl_langinfo (3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to retrieve the nonstandard"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " _NL_PAPER_WIDTH"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " _NL_PAPER_HEIGHT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "elements, which return"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " int"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "values specifying the dimensions in millimeters."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LC_TELEPHONE \" (GNU extension, since glibc 2.2)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" See ISO/IEC Technical Report 14652"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Change settings that describe the formats to be used with telephone services."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Applications that need this information can use"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " nl_langinfo (3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to retrieve nonstandard elements, such as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " _NL_TELEPHONE_INT_PREFIX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(international prefix used to call numbers in this locale),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "which returns a string such as \"49\" (for Germany)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(Other element names are listed in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " <langinfo.h> .)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LC_TIME"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This category governs the formatting used for date and time values."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For example, most of Europe uses a 24-hour clock versus the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "12-hour clock used in the United States."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The setting of this category affects the behavior of functions such as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " strftime (3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " strptime (3)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LC_ALL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "All of the above."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If the second argument to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " setlocale (3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is an empty string,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"\"\"\"\"\" ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for the default locale, it is determined using the following steps:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " 1. 3"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If there is a non-null environment variable"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LC_ALL ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the value of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LC_ALL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is used."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " 2."
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If an environment variable with the same name as one of the categories"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "above exists and is non-null, its value is used for that category."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " 3."
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If there is a non-null environment variable"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LANG ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the value of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LANG"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is used."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Values about local numeric formatting is made available in a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " struct lconv"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "returned by the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " localeconv (3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "function, which has the following declaration:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "struct lconv {"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    /* Numeric (nonmonetary) information */"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    char *decimal_point;     /* Radix character */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    char *thousands_sep;     /* Separator for digit groups to left"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                                of radix character */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    char *grouping;     /* Each element is the number of digits in"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                           a group; elements with higher indices"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                           are further left.  An element with value"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                           CHAR_MAX means that no further grouping"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                           is done.  An element with value 0 means"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                           that the previous element is used for"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                           all groups further left. */"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    /* Remaining fields are for monetary information */"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    char *int_curr_symbol;   /* First three chars are a currency"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                                symbol from ISO 4217.  Fourth char"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                                is the separator.  Fifth char"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                                is "
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "ESCAPE",
          "content": "\\\\"
        },
        {
          "type": "TEXT",
          "content": "0"
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": ". */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    char *currency_symbol;   /* Local currency symbol */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    char *mon_decimal_point; /* Radix character */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    char *mon_thousands_sep; /* Like "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Ithousands_sep"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P above */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    char *mon_grouping;      /* Like "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Igrouping"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P above */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    char *positive_sign;     /* Sign for positive values */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    char *negative_sign;     /* Sign for negative values */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    char  int_frac_digits;   /* International fractional digits */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    char  frac_digits;       /* Local fractional digits */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    char  p_cs_precedes;     /* 1 if currency_symbol precedes a"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                                positive value, 0 if succeeds */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    char  p_sep_by_space;    /* 1 if a space separates"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                                currency_symbol from a positive"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                                value */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    char  n_cs_precedes;     /* 1 if currency_symbol precedes a"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                                negative value, 0 if succeeds */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    char  n_sep_by_space;    /* 1 if a space separates"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                                currency_symbol from a negative"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                                value */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    /* Positive and negative sign positions:"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "       0 Parentheses surround the quantity and currency_symbol."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "       1 The sign string precedes the quantity and currency_symbol."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "       2 The sign string succeeds the quantity and currency_symbol."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "       3 The sign string immediately precedes the currency_symbol."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "       4 The sign string immediately succeeds the currency_symbol. */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    char  p_sign_posn;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    char  n_sign_posn;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "};"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " POSIX.1-2008 extensions to the locale API"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "POSIX.1-2008 standardized a number of extensions to the locale API,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "based on implementations that first appeared in version 2.3"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "of the GNU C library."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "These extensions are designed to address the problem that"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the traditional locale APIs do not mix well with multithreaded applications"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and with applications that must deal with multiple locales."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The extensions take the form of new functions for creating and"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "manipulating locale objects"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( newlocale (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " freelocale (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " duplocale (3),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uselocale (3))"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and various new library functions with the suffix \"_l\" (e.g.,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " toupper_l (3))"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "that extend the traditional locale-dependent APIs (e.g.,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " toupper (3))"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to allow the specification of a locale object that should apply when"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "executing the function."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " ENVIRONMENT"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The following environment variable is used by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " newlocale (3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " setlocale (3),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and thus affects all unprivileged localized programs:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LOCPATH"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A list of pathnames, separated by colons ("
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": ":"
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": "),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "that should be used to find locale data."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If this variable is set,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "only the individual compiled locale data files from"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " LOCPATH"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and the system default locale data path are used;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "any available locale archives are not used (see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " localedef (1))."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The individual compiled locale data files are searched for under"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "subdirectories which depend on the currently used locale."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For example, when"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " en_GB.UTF-8"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is used for a category, the following subdirectories are searched for,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in this order:"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " en_GB.UTF-8 ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " en_GB.utf8 ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " en_GB ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " en.UTF-8 ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " en.utf8 ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " en ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " FILES"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /usr/lib/locale/locale-archive"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Usual default locale archive location."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /usr/lib/locale"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Usual default path for compiled individual locale files."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " CONFORMING TO"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "POSIX.1-2001."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" The GNU gettext functions are specified in LI18NUX2000."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " SEE ALSO"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " iconv (1),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " locale (1),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " localedef (1),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " catopen (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " gettext (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " iconv (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " localeconv (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " mbstowcs (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " newlocale (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ngettext (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " nl_langinfo (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " rpmatch (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " setlocale (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " strcoll (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " strfmon (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " strftime (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " strxfrm (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uselocale (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " wcstombs (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " locale (5),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " charsets (7),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " unicode (7),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " utf-8 (7)"
        }
      ]
    ]
  }
]
