[
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": "'\\\" t"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Copyright (c) 1993 by Thomas Koenig (ig25@rz.uni-karlsruhe.de)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" and Copyright (c) 2002, 2006 by Michael Kerrisk <mtk.manpages@gmail.com>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" and Copyright (c) 2008 Linux Foundation, written by Michael Kerrisk"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     <mtk.manpages@gmail.com>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" %%%LICENSE_START(VERBATIM)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Permission is granted to make and distribute verbatim copies of this"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" manual provided the copyright notice and this permission notice are"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" preserved on all copies."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Permission is granted to copy and distribute modified versions of this"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" manual under the conditions for verbatim copying, provided that the"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" entire resulting derived work is distributed under the terms of a"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" permission notice identical to this one."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Since the Linux kernel and libraries are constantly changing, this"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" manual page may be incorrect or out-of-date.  The author(s) assume no"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" responsibility for errors or omissions, or for damages resulting from"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" the use of the information contained herein.  The author(s) may not"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" have taken the same level of care in the production of this manual,"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" which is licensed free of charge, as they might when working"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" professionally."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Formatted or processed versions of this manual, if unaccompanied by"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" the source, must acknowledge the copyright and authors of this work."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" %%%LICENSE_END"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Modified Sat Jul 24 17:34:08 1993 by Rik Faith (faith@cs.unc.edu)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Modified Sun Jan  7 01:41:27 1996 by Andries Brouwer (aeb@cwi.nl)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Modified Sun Apr 14 12:02:29 1996 by Andries Brouwer (aeb@cwi.nl)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Modified Sat Nov 13 16:28:23 1999 by Andries Brouwer (aeb@cwi.nl)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Modified 10 Apr 2002, by Michael Kerrisk <mtk.manpages@gmail.com>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Modified  7 Jun 2002, by Michael Kerrisk <mtk.manpages@gmail.com>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tAdded information on real-time signals"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Modified 13 Jun 2002, by Michael Kerrisk <mtk.manpages@gmail.com>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tNoted that SIGSTKFLT is in fact unused"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 2004-12-03, Modified mtk, added notes on RLIMIT_SIGPENDING"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 2006-04-24, mtk, Added text on changing signal dispositions,"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t\tsignal mask, and pending signals."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 2008-07-04, mtk:"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     Added section on system call restarting (SA_RESTART)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     Added section on stop/cont signals interrupting syscalls."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 2008-10-05, mtk: various additions"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TH",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGNAL 7  2017-09-15 \"Linux\" \"Linux Programmer's Manual\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " NAME"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "signal "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": " overview of signals"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " DESCRIPTION"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Linux supports both POSIX reliable signals (hereinafter"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "\"standard signals\") and POSIX real-time signals."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Signal dispositions"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Each signal has a current"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " disposition ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "which determines how the process behaves when it is delivered"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the signal."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The entries in the \"Action\" column of the table below specify"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the default disposition for each signal, as follows:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Term"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Default action is to terminate the process."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Ign"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Default action is to ignore the signal."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Core"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Default action is to terminate the process and dump core (see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " core (5))."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Stop"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Default action is to stop the process."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Cont"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Default action is to continue the process if it is currently stopped."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "A process can change the disposition of a signal using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sigaction (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " signal (2)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(The latter is less portable when establishing a signal handler;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " signal (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for details.)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Using these system calls, a process can elect one of the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "following behaviors to occur on delivery of the signal:"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "perform the default action; ignore the signal;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or catch the signal with a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"signal handler\" ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "a programmer-defined function that is automatically invoked"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "when the signal is delivered."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(By default, the signal handler is invoked on the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "normal process stack."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "It is possible to arrange that the signal handler"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "uses an alternate stack; see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sigaltstack (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for a discussion of how to do this and when it might be useful.)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The signal disposition is a per-process attribute:"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in a multithreaded application, the disposition of a"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "particular signal is the same for all threads."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "A child created via"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " fork (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "inherits a copy of its parent's signal dispositions."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "During an"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " execve (2),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the dispositions of handled signals are reset to the default;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the dispositions of ignored signals are left unchanged."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Sending a signal"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The following system calls and library functions allow"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the caller to send a signal:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 16"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " raise (3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Sends a signal to the calling thread."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " kill (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Sends a signal to a specified process,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to all members of a specified process group,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or to all processes on the system."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " killpg (3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Sends a signal to all of the members of a specified process group."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthread_kill (3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Sends a signal to a specified POSIX thread in the same process as"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the caller."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " tgkill (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Sends a signal to a specified thread within a specific process."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(This is the system call used to implement"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthread_kill (3).)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sigqueue (3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Sends a real-time signal with accompanying data to a specified process."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Waiting for a signal to be caught"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The following system calls suspend execution of the calling"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "thread until a signal is caught"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(or an unhandled signal terminates the process):"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 16"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pause (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Suspends execution until any signal is caught."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sigsuspend (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Temporarily changes the signal mask (see below) and suspends"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "execution until one of the unmasked signals is caught."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Synchronously accepting a signal"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Rather than asynchronously catching a signal via a signal handler,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "it is possible to synchronously accept the signal, that is,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to block execution until the signal is delivered,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "at which point the kernel returns information about the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "signal to the caller."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "There are two general ways to do this:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " * 2"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sigwaitinfo (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sigtimedwait (2),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sigwait (3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "suspend execution until one of the signals in a specified"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "set is delivered."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Each of these calls returns information about the delivered signal."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " signalfd (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "returns a file descriptor that can be used to read information"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "about signals that are delivered to the caller."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Each"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " read (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "from this file descriptor blocks until one of the signals"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in the set specified in the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " signalfd (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "call is delivered to the caller."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The buffer returned by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " read (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "contains a structure describing the signal."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Signal mask and pending signals"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "A signal may be"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " blocked ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "which means that it will not be delivered until it is later unblocked."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Between the time when it is generated and when it is delivered"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "a signal is said to be"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pending ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Each thread in a process has an independent"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"signal mask\" ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "which indicates the set of signals that the thread is currently blocking."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A thread can manipulate its signal mask using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthread_sigmask (3)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "In a traditional single-threaded application,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sigprocmask (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "can be used to manipulate the signal mask."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "A child created via"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " fork (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "inherits a copy of its parent's signal mask;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the signal mask is preserved across"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " execve (2)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "A signal may be generated (and thus pending)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for a process as a whole (e.g., when sent using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " kill (2))"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or for a specific thread (e.g., certain signals,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "such as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGSEGV"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGFPE ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "generated as a"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "consequence of executing a specific machine-language instruction"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are thread directed, as are signals targeted at a specific thread using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthread_kill (3))."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A process-directed signal may be delivered to any one of the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "threads that does not currently have the signal blocked."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If more than one of the threads has the signal unblocked, then the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "kernel chooses an arbitrary thread to which to deliver the signal."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "A thread can obtain the set of signals that it currently has pending"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sigpending (2)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This set will consist of the union of the set of pending"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "process-directed signals and the set of signals pending for"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the calling thread."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "A child created via"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " fork (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "initially has an empty pending signal set;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the pending signal set is preserved across an"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " execve (2)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Standard signals"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Linux supports the standard signals listed below."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The second column of the table indicates which standard (if any)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "specified the signal: \"P1990\" indicates that the signal is described"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in the original POSIX.1-1990 standard;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "\"P2001\" indicates that the signal was added in SUSv2 and POSIX.1-2001."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TS",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "l c c l"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "____"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "lB c c l."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Signal\tStandard\tAction\tComment"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGABRT\tP1990\tCore\tAbort signal from "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Babort"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P(3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGALRM\tP1990\tTerm\tTimer signal from "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Balarm"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P(2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGBUS\tP2001\tCore\tBus error (bad memory access)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGCHLD\tP1990\tIgn\tChild stopped or terminated"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGCLD\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "\tIgn\tA synonym for "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "BSIGCHLD"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGCONT\tP1990\tCont\tContinue if stopped"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGEMT\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "\tTerm\tEmulator trap"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGFPE\tP1990\tCore\tFloating-point exception"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGHUP\tP1990\tTerm\tHangup detected on controlling terminal"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "\t\t\tor death of controlling process"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGILL\tP1990\tCore\tIllegal Instruction"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGINFO\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "\t\tA synonym for "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "BSIGPWR"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGINT\tP1990\tTerm\tInterrupt from keyboard"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGIO\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "\tTerm\tI/O now possible (4.2BSD)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGIOT\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "\tCore\tIOT trap. A synonym for "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "BSIGABRT"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGKILL\tP1990\tTerm\tKill signal"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGLOST\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "\tTerm\tFile lock lost (unused)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGPIPE\tP1990\tTerm\tBroken pipe: write to pipe with no"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "\t\t\treaders; see "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Bpipe"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P(7)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGPOLL\tP2001\tTerm\tPollable event (Sys V)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "\t\t\tSynonym for "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "BSIGIO"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGPROF\tP2001\tTerm\tProfiling timer expired"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGPWR\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "\tTerm\tPower failure (System V)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGQUIT\tP1990\tCore\tQuit from keyboard"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGSEGV\tP1990\tCore\tInvalid memory reference"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGSTKFLT\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "\tTerm\tStack fault on coprocessor (unused)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGSTOP\tP1990\tStop\tStop process"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGTSTP\tP1990\tStop\tStop typed at terminal"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGSYS\tP2001\tCore\tBad system call (SVr4);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "\t\t\tsee also "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Bseccomp"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P(2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGTERM\tP1990\tTerm\tTermination signal"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGTRAP\tP2001\tCore\tTrace/breakpoint trap"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGTTIN\tP1990\tStop\tTerminal input for background process"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGTTOU\tP1990\tStop\tTerminal output for background process"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGUNUSED\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "\tCore\tSynonymous with "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "BSIGSYS"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGURG\tP2001\tIgn\tUrgent condition on socket (4.2BSD)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGUSR1\tP1990\tTerm\tUser-defined signal 1"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGUSR2\tP1990\tTerm\tUser-defined signal 2"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGVTALRM\tP2001\tTerm\tVirtual alarm clock (4.2BSD)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGXCPU\tP2001\tCore\tCPU time limit exceeded (4.2BSD);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "\t\t\tsee "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Bsetrlimit"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P(2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGXFSZ\tP2001\tCore\tFile size limit exceeded (4.2BSD);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "\t\t\tsee "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Bsetrlimit"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P(2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGWINCH\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "\tIgn\tWindow resize signal (4.3BSD, Sun)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TE",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The signals"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGKILL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGSTOP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "cannot be caught, blocked, or ignored."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Up to and including Linux 2.2, the default behavior for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGSYS \", \" SIGXCPU \", \" SIGXFSZ \", \""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and (on architectures other than SPARC and MIPS)"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGBUS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "was to terminate the process (without a core dump)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(On some other UNIX systems the default action for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGXCPU \" and \" SIGXFSZ"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is to terminate the process without a core dump.)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Linux 2.4 conforms to the POSIX.1-2001 requirements for these signals,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "terminating the process with a core dump."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGEMT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is not specified in POSIX.1-2001, but nevertheless appears"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "on most other UNIX systems,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "where its default action is typically to terminate"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the process with a core dump."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGPWR"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(which is not specified in POSIX.1-2001) is typically ignored"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "by default on those other UNIX systems where it appears."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGIO"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(which is not specified in POSIX.1-2001) is ignored by default"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "on several other UNIX systems."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Signal numbering for standard signals"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The numeric value for each signal is given in the table below."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "As shown in the table, many signals have different numeric values"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "on different architectures."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The first numeric value in each table row shows the signal number"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "on x86, ARM, and most other architectures;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the second value is for Alpha and SPARC; the third is for MIPS;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and the last is for PARISC."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A dash ("
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": ") denotes that a signal is absent on the corresponding architecture."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TS",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "l c c c c l"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "l c c c c l"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "______"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "lB c c c c l."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Signal\tx86/ARM\tAlpha/\tMIPS\tPARISC\tNotes"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "\tmost others\tSPARC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGHUP\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\0"
        },
        {
          "type": "TEXT",
          "content": "1\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\0"
        },
        {
          "type": "TEXT",
          "content": "1\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\0"
        },
        {
          "type": "TEXT",
          "content": "1\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\0"
        },
        {
          "type": "TEXT",
          "content": "1"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGINT\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\0"
        },
        {
          "type": "TEXT",
          "content": "2\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\0"
        },
        {
          "type": "TEXT",
          "content": "2\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\0"
        },
        {
          "type": "TEXT",
          "content": "2\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\0"
        },
        {
          "type": "TEXT",
          "content": "2"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGQUIT\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\0"
        },
        {
          "type": "TEXT",
          "content": "3\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\0"
        },
        {
          "type": "TEXT",
          "content": "3\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\0"
        },
        {
          "type": "TEXT",
          "content": "3\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\0"
        },
        {
          "type": "TEXT",
          "content": "3"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGILL\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\0"
        },
        {
          "type": "TEXT",
          "content": "4\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\0"
        },
        {
          "type": "TEXT",
          "content": "4\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\0"
        },
        {
          "type": "TEXT",
          "content": "4\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\0"
        },
        {
          "type": "TEXT",
          "content": "4"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGTRAP\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\0"
        },
        {
          "type": "TEXT",
          "content": "5\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\0"
        },
        {
          "type": "TEXT",
          "content": "5\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\0"
        },
        {
          "type": "TEXT",
          "content": "5\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\0"
        },
        {
          "type": "TEXT",
          "content": "5"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGABRT\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\0"
        },
        {
          "type": "TEXT",
          "content": "6\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\0"
        },
        {
          "type": "TEXT",
          "content": "6\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\0"
        },
        {
          "type": "TEXT",
          "content": "6\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\0"
        },
        {
          "type": "TEXT",
          "content": "6"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGIOT\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\0"
        },
        {
          "type": "TEXT",
          "content": "6\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\0"
        },
        {
          "type": "TEXT",
          "content": "6\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\0"
        },
        {
          "type": "TEXT",
          "content": "6\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\0"
        },
        {
          "type": "TEXT",
          "content": "6"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGBUS\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\0"
        },
        {
          "type": "TEXT",
          "content": "7\t10\t10\t10"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGEMT\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\0"
        },
        {
          "type": "TEXT",
          "content": "7\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\0"
        },
        {
          "type": "TEXT",
          "content": "7\t-"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGFPE\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\0"
        },
        {
          "type": "TEXT",
          "content": "8\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\0"
        },
        {
          "type": "TEXT",
          "content": "8\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\0"
        },
        {
          "type": "TEXT",
          "content": "8\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\0"
        },
        {
          "type": "TEXT",
          "content": "8"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGKILL\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\0"
        },
        {
          "type": "TEXT",
          "content": "9\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\0"
        },
        {
          "type": "TEXT",
          "content": "9\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\0"
        },
        {
          "type": "TEXT",
          "content": "9\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\0"
        },
        {
          "type": "TEXT",
          "content": "9"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGUSR1\t10\t30\t16\t16"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGSEGV\t11\t11\t11\t11"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGUSR2\t12\t31\t17\t17"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGPIPE\t13\t13\t13\t13"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGALRM\t14\t14\t14\t14"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGTERM\t15\t15\t15\t15"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGSTKFLT\t16\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\0"
        },
        {
          "type": "TEXT",
          "content": "7"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGCHLD\t17\t20\t18\t18"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGCLD\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "\t18\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGCONT\t18\t19\t25\t26"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGSTOP\t19\t17\t23\t24"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGTSTP\t20\t18\t24\t25"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGTTIN\t21\t21\t26\t27"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGTTOU\t22\t22\t27\t28"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGURG\t23\t16\t21\t29"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGXCPU\t24\t24\t30\t12"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGXFSZ\t25\t25\t31\t30"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGVTALRM\t26\t26\t28\t20"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGPROF\t27\t27\t29\t21"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGWINCH\t28\t28\t20\t23"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGIO\t29\t23\t22\t22"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGPOLL\t\t\t\t\tSame as SIGIO"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGPWR\t30\t29/"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "\t19\t19"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGINFO\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "\t29/"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGLOST\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "/29\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGSYS\t31\t12\t12\t31"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SIGUNUSED\t31\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "\t31"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TE",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Note the following:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " * 3"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Where defined,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGUNUSED"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is synonymous with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGSYS ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Since glibc 2.26,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGUNUSED"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is no longer defined on any architecture."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Signal 29 is"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGINFO / SIGPWR"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(synonyms for the same value) on Alpha but"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGLOST"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "on SPARC."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Real-time signals"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Starting with version 2.2,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Linux supports real-time signals as originally defined in the POSIX.1b"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "real-time extensions (and now included in POSIX.1-2001)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The range of supported real-time signals is defined by the macros"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGRTMIN"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGRTMAX ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "POSIX.1-2001 requires that an implementation support at least"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " _POSIX_RTSIG_MAX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(8) real-time signals."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The Linux kernel supports a range of 33 different real-time"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "signals, numbered 32 to 64."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "However, the glibc POSIX threads implementation internally uses"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "two (for NPTL) or three (for LinuxThreads) real-time signals"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthreads (7)),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and adjusts the value of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGRTMIN"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "suitably (to 34 or 35)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Because the range of available real-time signals varies according"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to the glibc threading implementation (and this variation can occur"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "at run time according to the available kernel and glibc),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and indeed the range of real-time signals varies across UNIX systems,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "programs should"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"never refer to real-time signals using hard-coded numbers\" ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "but instead should always refer to real-time signals using the notation"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGRTMIN +n,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and include suitable (run-time) checks that"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGRTMIN +n"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "does not exceed"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGRTMAX ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Unlike standard signals, real-time signals have no predefined meanings:"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the entire set of real-time signals can be used for application-defined"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "purposes."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The default action for an unhandled real-time signal is to terminate the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "receiving process."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Real-time signals are distinguished by the following:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " 1. 4"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Multiple instances of real-time signals can be queued."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "By contrast, if multiple instances of a standard signal are delivered"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "while that signal is currently blocked, then only one instance is queued."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " 2. 4"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If the signal is sent using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sigqueue (3),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "an accompanying value (either an integer or a pointer) can be sent"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with the signal."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the receiving process establishes a handler for this signal using the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SA_SIGINFO"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "flag to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sigaction (2),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "then it can obtain this data via the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " si_value"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "field of the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " siginfo_t"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "structure passed as the second argument to the handler."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Furthermore, the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " si_pid"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " si_uid"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "fields of this structure can be used to obtain the PID"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and real user ID of the process sending the signal."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " 3. 4"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Real-time signals are delivered in a guaranteed order."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Multiple real-time signals of the same type are delivered in the order"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "they were sent."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If different real-time signals are sent to a process, they are delivered"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "starting with the lowest-numbered signal."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(I.e., low-numbered signals have highest priority.)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "By contrast, if multiple standard signals are pending for a process,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the order in which they are delivered is unspecified."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If both standard and real-time signals are pending for a process,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "POSIX leaves it unspecified which is delivered first."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Linux, like many other implementations, gives priority"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to standard signals in this case."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "According to POSIX, an implementation should permit at least"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " _POSIX_SIGQUEUE_MAX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(32) real-time signals to be queued to"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "a process."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "However, Linux does things differently."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "In kernels up to and including 2.6.7, Linux imposes"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "a system-wide limit on the number of queued real-time signals"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for all processes."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This limit can be viewed and (with privilege) changed via the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc/sys/kernel/rtsig-max"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "file."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A related file,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc/sys/kernel/rtsig-nr ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "can be used to find out how many real-time signals are currently queued."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "In Linux 2.6.8, these"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "interfaces were replaced by the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " RLIMIT_SIGPENDING"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "resource limit, which specifies a per-user limit for queued"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "signals; see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " setrlimit (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for further details."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The addition of real-time signals required the widening"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "of the signal set structure"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( sigset_t )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "from 32 to 64 bits."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Consequently, various system calls were superseded by new system calls"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "that supported the larger signal sets."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The old and new system calls are as follows:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TS",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "lb lb"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "l l."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Linux 2.0 and earlier\tLinux 2.2 and later"
        }
      ],
      [
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Bsigaction"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P(2)\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Brt_sigaction"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P(2)"
        }
      ],
      [
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Bsigpending"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P(2)\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Brt_sigpending"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P(2)"
        }
      ],
      [
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Bsigprocmask"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P(2)\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Brt_sigprocmask"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P(2)"
        }
      ],
      [
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Bsigreturn"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P(2)\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Brt_sigreturn"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P(2)"
        }
      ],
      [
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Bsigsuspend"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P(2)\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Brt_sigsuspend"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P(2)"
        }
      ],
      [
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Bsigtimedwait"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P(2)\t"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Brt_sigtimedwait"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P(2)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TE",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Interruption of system calls and library functions by signal handlers"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If a signal handler is invoked while a system call or library"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "function call is blocked, then either:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " * 2"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "the call is automatically restarted after the signal handler returns; or"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "the call fails with the error"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINTR ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Which of these two behaviors occurs depends on the interface and"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "whether or not the signal handler was established using the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SA_RESTART"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "flag (see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sigaction (2))."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The details vary across UNIX systems;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "below, the details for Linux."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If a blocked call to one of the following interfaces is interrupted"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "by a signal handler, then the call is automatically restarted"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "after the signal handler returns if the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SA_RESTART"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "flag was used; otherwise the call fails with the error"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINTR :"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" The following system calls use ERESTARTSYS,"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" so that they are restartable"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " * 2"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " read (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " readv (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " write (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " writev (2),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ioctl (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "calls on \"slow\" devices."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A \"slow\" device is one where the I/O call may block for an"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "indefinite time, for example, a terminal, pipe, or socket."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If an I/O call on a slow device has already transferred some"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "data by the time it is interrupted by a signal handler,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "then the call will return a success status"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(normally, the number of bytes transferred)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Note that a (local) disk is not a slow device according to this definition;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "I/O operations on disk devices are not interrupted by signals."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " open (2),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "if it can block (e.g., when opening a FIFO; see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " fifo (7))."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " wait (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " wait3 (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " wait4 (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " waitid (2),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " waitpid (2)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Socket interfaces:"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" If a timeout (setsockopt()) is in effect on the socket, then these"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" system calls switch to using EINTR.  Consequently, they and are not"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" automatically restarted, and they show the stop/cont behavior"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" described below.  (Verified from 2.6.26 source, and by experiment; mtk)"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " accept (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " connect (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " recv (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " recvfrom (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " recvmmsg (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " recvmsg (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " send (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sendto (2),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sendmsg (2),"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" FIXME What about sendmmsg()?"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "unless a timeout has been set on the socket (see below)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "File locking interfaces:"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " flock (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " F_SETLKW"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " F_OFD_SETLKW"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "operations of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " fcntl (2)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "POSIX message queue interfaces:"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " mq_receive (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " mq_timedreceive (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " mq_send (3),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " mq_timedsend (3)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " futex (2)"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(since Linux 2.6.22;"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" commit 72c1bbf308c75a136803d2d76d0e18258be14c7a"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "beforehand, always failed with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINTR )."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " getrandom (2)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthread_mutex_lock (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthread_cond_wait (3),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and related APIs."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " futex (2)"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT_BITSET ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "POSIX semaphore interfaces:"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sem_wait (3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sem_timedwait (3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(since Linux 2.6.22;"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" as a consequence of the 2.6.22 changes in the futex() implementation"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "beforehand, always failed with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINTR )."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " read (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "from an"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " inotify (7)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "file descriptor"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(since Linux 3.8;"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" commit 1ca39ab9d21ac93f94b9e3eb364ea9a5cf2aba06"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "beforehand, always failed with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINTR )."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The following interfaces are never restarted after"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "being interrupted by a signal handler,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "regardless of the use of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SA_RESTART ;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "they always fail with the error"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINTR"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "when interrupted by a signal handler:"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" These are the system calls that give EINTR or ERESTARTNOHAND"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" on interruption by a signal handler."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " * 2"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "\"Input\" socket interfaces, when a timeout"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( SO_RCVTIMEO )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "has been set on the socket using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " setsockopt (2):"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " accept (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " recv (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " recvfrom (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " recvmmsg (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(also with a non-NULL"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " timeout"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "argument),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " recvmsg (2)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "\"Output\" socket interfaces, when a timeout"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( SO_RCVTIMEO )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "has been set on the socket using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " setsockopt (2):"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " connect (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " send (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sendto (2),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sendmsg (2)."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" FIXME What about sendmmsg()?"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Interfaces used to wait for signals:"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pause (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sigsuspend (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sigtimedwait (2),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sigwaitinfo (2)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "File descriptor multiplexing interfaces:"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " epoll_wait (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " epoll_pwait (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " poll (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ppoll (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " select (2),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pselect (2)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "System V IPC interfaces:"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" On some other systems, SA_RESTART does restart these system calls"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " msgrcv (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " msgsnd (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " semop (2),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " semtimedop (2)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Sleep interfaces:"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " clock_nanosleep (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " nanosleep (2),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " usleep (3)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " io_getevents (2)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sleep (3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "function is also never restarted if interrupted by a handler,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "but gives a success return: the number of seconds remaining to sleep."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Interruption of system calls and library functions by stop signals"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "On Linux, even in the absence of signal handlers,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "certain blocking interfaces can fail with the error"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINTR"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "after the process is stopped by one of the stop signals"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and then resumed via"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGCONT ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This behavior is not sanctioned by POSIX.1, and doesn't occur"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "on other systems."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The Linux interfaces that display this behavior are:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " * 2"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "\"Input\" socket interfaces, when a timeout"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( SO_RCVTIMEO )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "has been set on the socket using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " setsockopt (2):"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " accept (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " recv (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " recvfrom (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " recvmmsg (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(also with a non-NULL"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " timeout"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "argument),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " recvmsg (2)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "\"Output\" socket interfaces, when a timeout"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( SO_RCVTIMEO )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "has been set on the socket using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " setsockopt (2):"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " connect (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " send (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sendto (2),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" FIXME What about sendmmsg()?"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sendmsg (2),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "if a send timeout"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( SO_SNDTIMEO )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "has been set."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " * 2"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " epoll_wait (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " epoll_pwait (2)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " semop (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " semtimedop (2)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sigtimedwait (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sigwaitinfo (2)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Linux 3.7 and earlier:"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " read (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "from an"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " inotify (7)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "file descriptor"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" commit 1ca39ab9d21ac93f94b9e3eb364ea9a5cf2aba06"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Linux 2.6.21 and earlier:"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " futex (2)"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sem_timedwait (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sem_wait (3)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Linux 2.6.8 and earlier:"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " msgrcv (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " msgsnd (2)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Linux 2.4 and earlier:"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " nanosleep (2)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " CONFORMING TO"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "POSIX.1, except as noted."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" It must be a *very* long time since this was true:"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .SH BUGS"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .B SIGIO"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" and"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .B SIGLOST"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" have the same value."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" The latter is commented out in the kernel source, but"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" the build process of some software still thinks that"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" signal 29 is"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .BR SIGLOST ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " NOTES"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "For a discussion of async-signal-safe functions, see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " signal-safety (7)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " SEE ALSO"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " kill (1),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " clone (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " getrlimit (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " kill (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " restart_syscall (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " rt_sigqueueinfo (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " setitimer (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " setrlimit (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sgetmask (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sigaction (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sigaltstack (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " signal (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " signalfd (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sigpending (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sigprocmask (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sigreturn (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sigsuspend (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sigwaitinfo (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " abort (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " bsd_signal (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " killpg (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " longjmp (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthread_sigqueue (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " raise (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sigqueue (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sigset (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sigsetops (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sigvec (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sigwait (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " strsignal (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sysv_signal (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " core (5),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " proc (5),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " nptl (7),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthreads (7),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sigevent (7)"
        }
      ]
    ]
  }
]
