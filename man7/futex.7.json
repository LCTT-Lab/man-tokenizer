[
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" This manpage has been automatically generated by docbook2man"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" from a DocBook document.  This tool can be found at:"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" <http://shell.ipoline.com/~elmert/comp/docbook2X/>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Please send any bug reports, improvements, comments, patches,"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" etc. to Steve Cheng <steve@ggi-project.org>."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" %%%LICENSE_START(MIT)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" This page is made available under the MIT license."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" %%%LICENSE_END"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TH",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX 7 2017-09-15 \"Linux\" \"Linux Programmer's Manual\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " NAME"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "futex "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": " fast user-space locking"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " SYNOPSIS"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".nf",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " #include <linux/futex.h>"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".fi",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " DESCRIPTION"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The Linux kernel provides futexes (\"Fast user-space mutexes\")"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "as a building block for fast user-space"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "locking and semaphores."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Futexes are very basic and lend themselves well for building higher-level"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "locking abstractions such as"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "mutexes, condition variables, read-write locks, barriers, and semaphores."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Most programmers will in fact not be using futexes directly but will"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "instead rely on system libraries built on them,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "such as the Native POSIX Thread Library (NPTL) (see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthreads (7))."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "A futex is identified by a piece of memory which can be"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "shared between processes or threads."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "In these different processes, the futex need not have identical addresses."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "In its bare form, a futex has semaphore semantics;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "it is a counter that can be incremented and decremented atomically;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "processes can wait for the value to become positive."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Futex operation occurs entirely in user space for the noncontended case."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The kernel is involved only to arbitrate the contended case."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "As any sane design will strive for noncontention,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "futexes are also optimized for this situation."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "In its bare form, a futex is an aligned integer which is"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "touched only by atomic assembler instructions."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This integer is four bytes long on all platforms."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Processes can share this integer using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " mmap (2),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "via shared memory segments, or because they share memory space,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in which case the application is commonly called multithreaded."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Semantics"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Any futex operation starts in user space,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "but it may be necessary to communicate with the kernel using the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " futex (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "system call."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "To \"up\" a futex, execute the proper assembler instructions that"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "will cause the host CPU to atomically increment the integer."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Afterward, check if it has in fact changed from 0 to 1, in which case"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "there were no waiters and the operation is done."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This is the noncontended case which is fast and should be common."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "In the contended case, the atomic increment changed the counter"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "from "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "1  (or some other negative number)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If this is detected, there are waiters."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "User space should now set the counter to 1 and instruct the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "kernel to wake up any waiters using the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAKE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "operation."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Waiting on a futex, to \"down\" it, is the reverse operation."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Atomically decrement the counter and check if it changed to 0,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in which case the operation is done and the futex was uncontended."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "In all other circumstances, the process should set the counter to "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "1"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and request that the kernel wait for another process to up the futex."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This is done using the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FUTEX_WAIT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "operation."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " futex (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "system call can optionally be passed a timeout specifying how long"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the kernel should"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "wait for the futex to be upped."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "In this case, semantics are more complex and the programmer is referred"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " futex (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "more details."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The same holds for asynchronous futex waiting."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " VERSIONS"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Initial futex support was merged in Linux 2.5.7"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "but with different semantics from those described above."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Current semantics are available from Linux 2.5.40 onward."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " NOTES"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "To reiterate, bare futexes are not intended as an easy-to-use"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "abstraction for end users."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Implementors are expected to be assembly literate and to have read"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the sources of the futex user-space library referenced"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "below."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "This man page illustrates the most common use of the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " futex (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "primitives; it is by no means the only one."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .SH AUTHORS"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .PP"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Futexes were designed and worked on by Hubertus Franke"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" (IBM Thomas J. Watson Research Center),"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Matthew Kirkwood, Ingo Molnar (Red Hat) and"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Rusty Russell (IBM Linux Technology Center)."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" This page written by bert hubert."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " SEE ALSO"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " clone (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " futex (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " get_robust_list (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " set_robust_list (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " set_tid_address (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthreads (7)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"Fuss, Futexes and Furwocks: Fast Userlevel Locking in Linux\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(proceedings of the Ottawa Linux Symposium 2002),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "futex example library, futex-*.tar.bz2"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".UR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ftp://ftp.kernel.org"
        },
        {
          "type": "ESCAPE",
          "content": "\\:"
        },
        {
          "type": "TEXT",
          "content": "/pub"
        },
        {
          "type": "ESCAPE",
          "content": "\\:"
        },
        {
          "type": "TEXT",
          "content": "/linux"
        },
        {
          "type": "ESCAPE",
          "content": "\\:"
        },
        {
          "type": "TEXT",
          "content": "/kernel"
        },
        {
          "type": "ESCAPE",
          "content": "\\:"
        },
        {
          "type": "TEXT",
          "content": "/people"
        },
        {
          "type": "ESCAPE",
          "content": "\\:"
        },
        {
          "type": "TEXT",
          "content": "/rusty/"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".UE",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ."
        }
      ]
    ]
  }
]
