[
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": "'\\\" t"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" This man page is Copyright (C) 1999 Andi Kleen <ak@muc.de>."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" %%%LICENSE_START(VERBATIM_ONE_PARA)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Permission is granted to distribute possibly modified copies"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" of this page provided the header is included verbatim,"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" and in case of nontrivial modification author and date"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" of the modification is added to the header."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" %%%LICENSE_END"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" $Id: raw.7,v 1.6 1999/06/05 10:32:08 freitag Exp $"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TH",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " RAW  7 2017-09-15 \"Linux\" \"Linux Programmer's Manual\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " NAME"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "raw "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": " Linux IPv4 raw sockets"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " SYNOPSIS"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " #include <sys/socket.h>"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".br",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " #include <netinet/in.h>"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".br",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".BI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"raw_socket = socket(AF_INET, SOCK_RAW, int \" protocol );"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " DESCRIPTION"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Raw sockets allow new IPv4 protocols to be implemented in user space."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A raw socket receives or sends the raw datagram not"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "including link level headers."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The IPv4 layer generates an IP header when sending a packet unless the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_HDRINCL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "socket option is enabled on the socket."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "When it is enabled, the packet must contain an IP header."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For receiving, the IP header is always included in the packet."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "In order to create a raw socket, a process must have the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CAP_NET_RAW"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "capability in the user namespace that governs its network namespace."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "All packets or errors matching the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " protocol"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "number specified"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for the raw socket are passed to this socket."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For a list of the allowed protocols,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "see the IANA list of assigned protocol numbers at"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".UR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " http://www.iana.org/assignments/protocol"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "numbers/"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".UE",
          "translatable": false
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " getprotobyname (3)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "A protocol of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IPPROTO_RAW"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "implies enabled"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_HDRINCL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and is able to send any IP protocol that is specified in the passed"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "header."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Receiving of all IP protocols via"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IPPROTO_RAW"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is not possible using raw sockets."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RS",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TS",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "tab(:) allbox;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "c s"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "l l."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "IP Header fields modified on sending by "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "BIP_HDRINCL"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "IP Checksum:Always filled in"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Source Address:Filled in when zero"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Packet ID:Filled in when zero"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Total Length:Always filled in"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TE",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RE",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_HDRINCL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is specified and the IP header has a nonzero destination address, then"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the destination address of the socket is used to route the packet."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "When"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " MSG_DONTROUTE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is specified, the destination address should refer to a local interface,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "otherwise a routing table lookup is done anyway but gatewayed routes"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are ignored."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_HDRINCL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "isn't set, then IP header options can be set on raw sockets with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " setsockopt (2);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ip (7)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for more information."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Starting with Linux 2.2, all IP header fields and options can be set using"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "IP socket options."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This means raw sockets are usually needed only for new"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "protocols or protocols with no user interface (like ICMP)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "When a packet is received, it is passed to any raw sockets which have"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "been bound to its protocol before it is passed to other protocol handlers"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(e.g., kernel protocol modules)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Address format"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "For sending and receiving datagrams"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( sendto (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " recvfrom (2),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and similar),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "raw sockets use the standard"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sockaddr_in"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "address structure defined in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ip (7)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sin_port"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "field could be used to specify the IP protocol number,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "but it is ignored for sending in Linux 2.2 and later, and should be always"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "set to 0 (see BUGS)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For incoming packets,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sin_port"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" commit f59fc7f30b710d45aadf715460b3e60dbe9d3418"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "is set to zero."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Socket options"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Raw socket options can be set with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " setsockopt (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and read with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " getsockopt (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "by passing the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IPPROTO_RAW"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Or SOL_RAW on Linux"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "family flag."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ICMP_FILTER"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Enable a special filter for raw sockets bound to the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IPPROTO_ICMP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "protocol."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The value has a bit set for each ICMP message type which"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "should be filtered out."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The default is to filter no ICMP messages."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "In addition, all"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ip (7)"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IPPROTO_IP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "socket options valid for datagram sockets are supported."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Error handling"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Errors originating from the network are passed to the user only when the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "socket is connected or the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_RECVERR"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "flag is enabled."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For connected sockets, only"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EMSGSIZE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EPROTO"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are passed for compatibility."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "With"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_RECVERR ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "all network errors are saved in the error queue."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " ERRORS"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EACCES"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "User tried to send to a broadcast address without having the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "broadcast flag set on the socket."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EFAULT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "An invalid memory address was supplied."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINVAL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Invalid argument."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EMSGSIZE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Packet too big."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Either Path MTU Discovery is enabled (the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_MTU_DISCOVER"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "socket flag) or the packet size exceeds the maximum allowed IPv4"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "packet size of 64"
        },
        {
          "type": "ESCAPE",
          "content": "\\ "
        },
        {
          "type": "TEXT",
          "content": "kB."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EOPNOTSUPP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Invalid flag has been passed to a socket call (like"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " MSG_OOB )."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EPERM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The user doesn't have permission to open raw sockets."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Only processes with an effective user ID of 0 or the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CAP_NET_RAW"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "attribute may do that."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EPROTO"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "An ICMP error has arrived reporting a parameter problem."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " VERSIONS"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_RECVERR"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ICMP_FILTER"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are new in Linux 2.2."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "They are Linux extensions and should not be used in portable programs."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Linux 2.0 enabled some bug-to-bug compatibility with BSD in the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "raw socket code when the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SO_BSDCOMPAT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "socket option was set; since Linux 2.2,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "this option no longer has that effect."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " NOTES"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "By default, raw sockets do path MTU (Maximum Transmission Unit) discovery."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This means the kernel"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "will keep track of the MTU to a specific target IP address and return"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EMSGSIZE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "when a raw packet write exceeds it."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "When this happens, the application should decrease the packet size."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Path MTU discovery can be also turned off using the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_MTU_DISCOVER"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "socket option or the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc/sys/net/ipv4/ip_no_pmtu_disc"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "file, see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ip (7)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for details."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "When turned off, raw sockets will fragment outgoing packets"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "that exceed the interface MTU."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "However, disabling it is not recommended"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for performance and reliability reasons."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "A raw socket can be bound to a specific local address using the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " bind (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "call."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If it isn't bound, all packets with the specified IP protocol are received."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "In addition, a raw socket can be bound to a specific network device using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SO_BINDTODEVICE ;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " socket (7)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "An"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IPPROTO_RAW"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "socket is send only."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If you really want to receive all IP packets, use a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " packet (7)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "socket with the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ETH_P_IP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "protocol."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Note that packet sockets don't reassemble IP fragments,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "unlike raw sockets."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If you want to receive all ICMP packets for a datagram socket,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "it is often better to use"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_RECVERR"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "on that particular socket; see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ip (7)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Raw sockets may tap all IP protocols in Linux, even"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "protocols like ICMP or TCP which have a protocol module in the kernel."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "In this case, the packets are passed to both the kernel module and the raw"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "socket(s)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This should not be relied upon in portable programs, many other BSD"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "socket implementation have limitations here."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Linux never changes headers passed from the user (except for filling"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in some zeroed fields as described for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_HDRINCL )."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This differs from many other implementations of raw sockets."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Raw sockets are generally rather unportable and should be avoided in"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "programs intended to be portable."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Sending on raw sockets should take the IP protocol from"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sin_port ;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "this ability was lost in Linux 2.2."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The workaround is to use"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_HDRINCL ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " BUGS"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Transparent proxy extensions are not described."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "When the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_HDRINCL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "option is set, datagrams will not be fragmented and are limited to"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the interface MTU."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Setting the IP protocol for sending in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sin_port"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "got lost in Linux 2.2."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The protocol that the socket was bound to or that"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "was specified in the initial"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " socket (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "call is always used."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .SH AUTHORS"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" This man page was written by Andi Kleen."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " SEE ALSO"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " recvmsg (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sendmsg (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " capabilities (7),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ip (7),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " socket (7)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " RFC"
        },
        {
          "type": "ESCAPE",
          "content": "\\ "
        },
        {
          "type": "TEXT",
          "content": "1191"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for path MTU discovery."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " RFC"
        },
        {
          "type": "ESCAPE",
          "content": "\\ "
        },
        {
          "type": "TEXT",
          "content": "791"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " <linux/ip.h>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "header file for the IP protocol."
        }
      ]
    ]
  }
]
