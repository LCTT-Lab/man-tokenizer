[
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": "'\\\" t"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" This man page is Copyright (C) 1999 Andi Kleen <ak@muc.de>."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" %%%LICENSE_START(VERBATIM_ONE_PARA)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Permission is granted to distribute possibly modified copies"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" of this page provided the header is included verbatim,"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" and in case of nontrivial modification author and date"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" of the modification is added to the header."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" %%%LICENSE_END"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" $Id: ip.7,v 1.19 2000/12/20 18:10:31 ak Exp $"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" FIXME The following socket options are yet to be documented"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" \tIP_XFRM_POLICY (2.5.48)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t    Needs CAP_NET_ADMIN"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" \tIP_IPSEC_POLICY (2.5.47)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t    Needs CAP_NET_ADMIN"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" \tIP_PASSSEC (2.6.17)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" \t    Boolean"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t    commit 2c7946a7bf45ae86736ab3b43d0085e43947945c"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t    Author: Catherine Zhang <cxzhang@watson.ibm.com>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tIP_MINTTL (2.6.34)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t    commit d218d11133d888f9745802146a50255a4781d37a"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t    Author: Stephen Hemminger <shemminger@vyatta.com>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tMCAST_JOIN_GROUP (2.4.22 / 2.6)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tMCAST_BLOCK_SOURCE (2.4.22 / 2.6)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tMCAST_UNBLOCK_SOURCE (2.4.22 / 2.6)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tMCAST_LEAVE_GROUP (2.4.22 / 2.6)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tMCAST_JOIN_SOURCE_GROUP (2.4.22 / 2.6)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tMCAST_LEAVE_SOURCE_GROUP (2.4.22 / 2.6)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tMCAST_MSFILTER (2.4.22 / 2.6)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\tIP_UNICAST_IF (3.4)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t    commit 76e21053b5bf33a07c76f99d27a74238310e3c71"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t    Author: Erich E. Hoover <ehoover@mines.edu>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TH",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP  7 2018-02-02 \"Linux\" \"Linux Programmer's Manual\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " NAME"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "ip "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": " Linux IPv4 protocol implementation"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " SYNOPSIS"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " #include <sys/socket.h>"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".br",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .B #include <net/netinet.h> -- does not exist anymore"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .B #include <linux/errqueue.h> -- never include <linux/foo.h>"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " #include <netinet/in.h>"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".br",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " #include <netinet/ip.h>        "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "R/* superset of previous */"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " tcp_socket \" = socket(AF_INET, SOCK_STREAM, 0);\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".br",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " udp_socket \" = socket(AF_INET, SOCK_DGRAM, 0);\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".br",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " raw_socket \" = socket(AF_INET, SOCK_RAW, \" protocol \");\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " DESCRIPTION"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Linux implements the Internet Protocol, version 4,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "described in RFC"
        },
        {
          "type": "ESCAPE",
          "content": "\\ "
        },
        {
          "type": "TEXT",
          "content": "791 and RFC"
        },
        {
          "type": "ESCAPE",
          "content": "\\ "
        },
        {
          "type": "TEXT",
          "content": "1122."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ip"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "contains a level 2 multicasting implementation conforming to RFC"
        },
        {
          "type": "ESCAPE",
          "content": "\\ "
        },
        {
          "type": "TEXT",
          "content": "1112."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "It also contains an IP router including a packet filter."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The programming interface is BSD-sockets compatible."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For more information on sockets, see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " socket (7)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "An IP socket is created using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " socket (2):"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    socket(AF_INET, socket_type, protocol);"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Valid socket types are"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SOCK_STREAM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to open a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " tcp (7)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "socket,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SOCK_DGRAM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to open a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " udp (7)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "socket, or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SOCK_RAW"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to open a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " raw (7)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "socket to access the IP protocol directly."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " protocol"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is the IP protocol in the IP header to be received or sent."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The only valid values for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " protocol"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are 0 and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IPPROTO_TCP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for TCP sockets, and 0 and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IPPROTO_UDP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for UDP sockets."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SOCK_RAW"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "you may specify a valid IANA IP protocol defined in"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "RFC"
        },
        {
          "type": "ESCAPE",
          "content": "\\ "
        },
        {
          "type": "TEXT",
          "content": "1700 assigned numbers."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "When a process wants to receive new incoming packets or connections, it"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "should bind a socket to a local interface address using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " bind (2)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "In this case, only one IP socket may be bound to any given local"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(address, port) pair."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "When"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " INADDR_ANY"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is specified in the bind call, the socket will be bound to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " all"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "local interfaces."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "When"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " listen (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is called on an unbound socket, the socket is automatically bound"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to a random free port with the local address set to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " INADDR_ANY ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "When"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " connect (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is called on an unbound socket, the socket is automatically bound"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to a random free port or to a usable shared port with the local address"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "set to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " INADDR_ANY ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "A TCP local socket address that has been bound is unavailable for"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "some time after closing, unless the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SO_REUSEADDR"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "flag has been set."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Care should be taken when using this flag as it makes TCP less reliable."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Address format"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "An IP socket address is defined as a combination of an IP interface"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "address and a 16-bit port number."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The basic IP protocol does not supply port numbers, they"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are implemented by higher level protocols like"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " udp (7)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " tcp (7)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "On raw sockets"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sin_port"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is set to the IP protocol."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "struct sockaddr_in {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    sa_family_t    sin_family; /* address family: AF_INET */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    in_port_t      sin_port;   /* port in network byte order */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    struct in_addr sin_addr;   /* internet address */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "};"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "/* Internet address. */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "struct in_addr {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint32_t       s_addr;     /* address in network byte order */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "};"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sin_family"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is always set to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " AF_INET ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This is required; in Linux 2.2 most networking functions return"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINVAL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "when this setting is missing."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sin_port"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "contains the port in network byte order."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The port numbers below 1024 are called"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"privileged ports\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(or sometimes:"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"reserved ports\" )."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Only a privileged process"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(on Linux: a process that has the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CAP_NET_BIND_SERVICE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "capability in the user namespace governing its network namespace) may"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " bind (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to these sockets."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Note that the raw IPv4 protocol as such has no concept of a"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "port, they are implemented only by higher protocols like"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " tcp (7)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " udp (7)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sin_addr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is the IP host address."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " s_addr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "member of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " struct in_addr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "contains the host interface address in network byte order."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " in_addr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "should be assigned one of the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " INADDR_*"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "values"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(e.g.,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " INADDR_LOOPBACK )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " htonl (3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or set using the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " inet_aton (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " inet_addr (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " inet_makeaddr (3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "library functions or directly with the name resolver (see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " gethostbyname (3))."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "IPv4 addresses are divided into unicast, broadcast,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and multicast addresses."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Unicast addresses specify a single interface of a host,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "broadcast addresses specify all hosts on a network, and multicast"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "addresses address all hosts in a multicast group."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Datagrams to broadcast addresses can be sent or received only when the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SO_BROADCAST"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "socket flag is set."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "In the current implementation, connection-oriented sockets are allowed"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to use only unicast addresses."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Leave a loophole for XTP @)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Note that the address and the port are always stored in"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "network byte order."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "In particular, this means that you need to call"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " htons (3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "on the number that is assigned to a port."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "All address/port manipulation"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "functions in the standard library work in network byte order."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "There are several special addresses:"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " INADDR_LOOPBACK"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(127.0.0.1)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "always refers to the local host via the loopback device;"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " INADDR_ANY"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(0.0.0.0)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "means any address for binding;"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " INADDR_BROADCAST"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(255.255.255.255)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "means any host and has the same effect on bind as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " INADDR_ANY"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for historical reasons."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Socket options"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "IP supports some protocol-specific socket options that can be set with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " setsockopt (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and read with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " getsockopt (2)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The socket option level for IP is"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IPPROTO_IP ."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" or SOL_IP on Linux"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "A boolean integer flag is zero when it is false, otherwise true."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "When an invalid socket option is specified,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " getsockopt (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " setsockopt (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "fail with the error"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ENOPROTOOPT ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_ADD_MEMBERSHIP \" (since Linux 1.2)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Join a multicast group."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Argument is an"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ip_mreqn"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "structure."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "struct ip_mreqn {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    struct in_addr imr_multiaddr; /* IP multicast group"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                                     address */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    struct in_addr imr_address;   /* IP address of local"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                                     interface */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    int            imr_ifindex;   /* interface index */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "};"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " imr_multiaddr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "contains the address of the multicast group the application"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "wants to join or leave."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "It must be a valid multicast address"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" (i.e., within the 224.0.0.0-239.255.255.255 range)"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "(or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " setsockopt (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "fails with the error"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINVAL )."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " imr_address"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is the address of the local interface with which the system"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "should join the multicast group; if it is equal to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " INADDR_ANY ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "an appropriate interface is chosen by the system."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " imr_ifindex"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is the interface index of the interface that should join/leave the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " imr_multiaddr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "group, or 0 to indicate any interface."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ip_mreqn"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "structure is available only since Linux 2.2."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For compatibility, the old"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ip_mreq"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "structure (present since Linux 1.2) is still supported;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "it differs from"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ip_mreqn"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "only by not including the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " imr_ifindex"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "field."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(The kernel determines which structure is being passed based"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "on the size passed in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " optlen .)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_ADD_MEMBERSHIP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is valid only for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " setsockopt (2)."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_ADD_SOURCE_MEMBERSHIP \" (since Linux 2.4.22 / 2.5.68)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Join a multicast group and allow receiving data only"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "from a specified source."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Argument is an"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ip_mreq_source"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "structure."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "struct ip_mreq_source {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    struct in_addr imr_multiaddr;  /* IP multicast group"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                                      address */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    struct in_addr imr_interface;  /* IP address of local"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                                      interface */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    struct in_addr imr_sourceaddr; /* IP address of"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                                      multicast source */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "};"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ip_mreq_source"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "structure is similar to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ip_mreqn"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "described under"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_ADD_MEMBERSIP ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " imr_multiaddr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "field contains the address of the multicast group the application"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "wants to join or leave."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " imr_interface"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "field is the address of the local interface with which"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the system should join the multicast group."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Finally, the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " imr_sourceaddr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "field contains the address of the source the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "application wants to receive data from."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "This option can be used multiple times to allow"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "receiving data from more than one source."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_BIND_ADDRESS_NO_PORT \" (since Linux 4.2)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" commit 90c337da1524863838658078ec34241f45d8394d"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Inform the kernel to not reserve an ephemeral port when using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " bind (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with a port number of 0."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The port will later be automatically chosen at"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " connect (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "time,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in a way that allows sharing a source port as long as the 4-tuple is unique."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_BLOCK_SOURCE \" (since Linux 2.4.22 / 2.5.68)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Stop receiving multicast data from a specific source in a given group."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This is valid only after the application has subscribed"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to the multicast group using either"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_ADD_MEMBERSHIP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_ADD_SOURCE_MEMBERSHIP ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Argument is an"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ip_mreq_source"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "structure as described under"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_ADD_SOURCE_MEMBERSHIP ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_DROP_MEMBERSHIP \" (since Linux 1.2)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Leave a multicast group."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Argument is an"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ip_mreqn"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ip_mreq"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "structure similar to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_ADD_MEMBERSHIP ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_DROP_SOURCE_MEMBERSHIP \" (since Linux 2.4.22 / 2.5.68)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Leave a source-specific group"
        },
        {
          "type": "ESCAPE",
          "content": "\\(em"
        },
        {
          "type": "TEXT",
          "content": "that is, stop receiving data from"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "a given multicast group that come from a given source."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the application has subscribed to multiple sources within"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the same group, data from the remaining sources will still be delivered."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "To stop receiving data from all sources at once, use"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_DROP_MEMBERSHIP ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Argument is an"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ip_mreq_source"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "structure as described under"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_ADD_SOURCE_MEMBERSHIP ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_FREEBIND \" (since Linux 2.4)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Precisely: 2.4.0-test10"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If enabled, this boolean option allows binding to an IP address"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "that is nonlocal or does not (yet) exist."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This permits listening on a socket,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "without requiring the underlying network interface or the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "specified dynamic IP address to be up at the time that"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the application is trying to bind to it."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This option is the per-socket equivalent of the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ip_nonlocal_bind"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "interface described below."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_HDRINCL \" (since Linux 2.0)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If enabled,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the user supplies an IP header in front of the user data."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Valid only for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SOCK_RAW"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "sockets; see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " raw (7)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for more information."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "When this flag is enabled, the values set by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_OPTIONS ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_TTL ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_TOS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are ignored."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_MSFILTER \" (since Linux 2.4.22 / 2.5.68)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This option provides access to the advanced full-state filtering API."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Argument is an"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ip_msfilter"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "structure."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "struct ip_msfilter {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    struct in_addr imsf_multiaddr; /* IP multicast group"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                                      address */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    struct in_addr imsf_interface; /* IP address of local"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                                      interface */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint32_t       imsf_fmode;     /* Filter-mode */"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    uint32_t       imsf_numsrc;    /* Number of sources in"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                                      the following array */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    struct in_addr imsf_slist[1];  /* Array of source"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                                      addresses */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "};"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "There are two macros,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " MCAST_INCLUDE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " MCAST_EXCLUDE ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "which can be used to specify the filtering mode."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Additionally, the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_MSFILTER_SIZE (n)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "macro exists to determine how much memory is needed to store"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ip_msfilter"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "structure with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " n"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "sources in the source list."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "For the full description of multicast source filtering"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "refer to RFC 3376."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_MTU \" (since Linux 2.2)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Precisely: 2.1.124"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Retrieve the current known path MTU of the current socket."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Returns an integer."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_MTU"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is valid only for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " getsockopt (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and can be employed only when the socket has been connected."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_MTU_DISCOVER \" (since Linux 2.2)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Precisely: 2.1.124"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Set or receive the Path MTU Discovery setting for a socket."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "When enabled, Linux will perform Path MTU Discovery"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "as defined in RFC"
        },
        {
          "type": "ESCAPE",
          "content": "\\ "
        },
        {
          "type": "TEXT",
          "content": "1191 on"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SOCK_STREAM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "sockets."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " non- SOCK_STREAM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "sockets,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_PMTUDISC_DO"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "forces the don't-fragment flag to be set on all outgoing packets."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "It is the user's responsibility to packetize the data"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in MTU-sized chunks and to do the retransmits if necessary."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The kernel will reject (with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EMSGSIZE )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "datagrams that are bigger than the known path MTU."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_PMTUDISC_WANT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "will fragment a datagram if needed according to the path MTU,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or will set the don't-fragment flag otherwise."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The system-wide default can be toggled between"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_PMTUDISC_WANT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_PMTUDISC_DONT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "by writing (respectively, zero and nonzero values) to the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc/sys/net/ipv4/ip_no_pmtu_disc"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "file."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TS",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "tab(:);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "c l"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "l l."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Path MTU discovery value:Meaning"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "IP_PMTUDISC_WANT:Use per-route settings."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "IP_PMTUDISC_DONT:Never do Path MTU Discovery."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "IP_PMTUDISC_DO:Always do Path MTU Discovery."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "IP_PMTUDISC_PROBE:Set DF but ignore Path MTU."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TE",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".sp",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 1"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "When PMTU discovery is enabled, the kernel automatically keeps track of"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the path MTU per destination host."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "When it is connected to a specific peer with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " connect (2),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the currently known path MTU can be retrieved conveniently using the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_MTU"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "socket option (e.g., after an"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EMSGSIZE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "error occurred)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The path MTU may change over time."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For connectionless sockets with many destinations,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the new MTU for a given destination can also be accessed using the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "error queue (see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_RECVERR )."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A new error will be queued for every incoming MTU update."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "While MTU discovery is in progress, initial packets from datagram sockets"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "may be dropped."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Applications using UDP should be aware of this and not"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "take it into account for their packet retransmit strategy."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "To bootstrap the path MTU discovery process on unconnected sockets, it"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is possible to start with a big datagram size"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(headers up to 64 kilobytes long) and let it shrink by updates of the path MTU."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "To get an initial estimate of the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "path MTU, connect a datagram socket to the destination address using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " connect (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and retrieve the MTU by calling"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " getsockopt (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_MTU"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "option."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "It is possible to implement RFC 4821 MTU probing with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SOCK_DGRAM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SOCK_RAW"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "sockets by setting a value of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_PMTUDISC_PROBE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(available since Linux 2.6.22)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This is also particularly useful for diagnostic tools such as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " tracepath (8)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "that wish to deliberately send probe packets larger than"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the observed Path MTU."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_MULTICAST_ALL \" (since Linux 2.6.31)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This option can be used to modify the delivery policy of multicast messages"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to sockets bound to the wildcard"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " INADDR_ANY"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "address."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The argument is a boolean integer (defaults to 1)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If set to 1,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the socket will receive messages from all the groups that have been joined"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "globally on the whole system."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Otherwise, it will deliver messages only from"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the groups that have been explicitly joined (for example via the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_ADD_MEMBERSHIP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "option) on this particular socket."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_MULTICAST_IF \" (since Linux 1.2)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Set the local device for a multicast socket."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The argument for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " setsockopt (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is an"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ip_mreqn"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" net: IP_MULTICAST_IF setsockopt now recognizes struct mreq"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Commit: 3a084ddb4bf299a6e898a9a07c89f3917f0713f7"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "(since Linux 3.5)"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ip_mreq"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "structure similar to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_ADD_MEMBERSHIP ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or an"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " in_addr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "structure."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(The kernel determines which structure is being passed based"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "on the size passed in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " optlen .)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " getsockopt (2),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the argument is an"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " in_addr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "structure."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_MULTICAST_LOOP \" (since Linux 1.2)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Set or read a boolean integer argument that determines whether"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "sent multicast packets should be looped back to the local sockets."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_MULTICAST_TTL \" (since Linux 1.2)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Set or read the time-to-live value of outgoing multicast packets for this"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "socket."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "It is very important for multicast packets to set the smallest TTL possible."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The default is 1 which means that multicast packets don't leave the local"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "network unless the user program explicitly requests it."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Argument is an integer."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_NODEFRAG \" (since Linux 2.6.36)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If enabled (argument is nonzero),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the reassembly of outgoing packets is disabled in the netfilter layer."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The argument is an integer."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "This option is valid only for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SOCK_RAW"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "sockets."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_OPTIONS \" (since Linux 2.0)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Precisely: 1.3.30"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Set or get the IP options to be sent with every packet from this socket."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The arguments are a pointer to a memory buffer containing the options"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and the option length."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " setsockopt (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "call sets the IP options associated with a socket."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The maximum option size for IPv4 is 40 bytes."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "See RFC"
        },
        {
          "type": "ESCAPE",
          "content": "\\ "
        },
        {
          "type": "TEXT",
          "content": "791 for the allowed options."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "When the initial connection request packet for a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SOCK_STREAM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "socket contains IP options, the IP options will be set automatically"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to the options from the initial packet with routing headers reversed."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Incoming packets are not allowed to change options after the connection"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is established."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The processing of all incoming source routing options"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is disabled by default and can be enabled by using the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " accept_source_route"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "interface."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Other options like timestamps are still handled."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For datagram sockets, IP options can be only set by the local user."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Calling"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " getsockopt (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_OPTIONS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "puts the current IP options used for sending into the supplied buffer."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_PKTINFO \" (since Linux 2.2)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Precisely: 2.1.68"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Pass an"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_PKTINFO"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ancillary message that contains a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pktinfo"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "structure that supplies some information about the incoming packet."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This only works for datagram oriented sockets."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The argument is a flag that tells the socket whether the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_PKTINFO"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "message should be passed or not."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The message itself can only be sent/retrieved"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "as control message with a packet using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " recvmsg (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sendmsg (2)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "struct in_pktinfo {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    unsigned int   ipi_ifindex;  /* Interface index */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    struct in_addr ipi_spec_dst; /* Local address */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    struct in_addr ipi_addr;     /* Header Destination"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                                    address */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "};"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ipi_ifindex"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is the unique index of the interface the packet was received on."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ipi_spec_dst"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is the local address of the packet and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ipi_addr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is the destination address in the packet header."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_PKTINFO"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is passed to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sendmsg (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" This field is grossly misnamed"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ipi_spec_dst"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is not zero, then it is used as the local source address for the routing"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "table lookup and for setting up IP source route options."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "When"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ipi_ifindex"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is not zero, the primary local address of the interface specified by the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "index overwrites"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ipi_spec_dst"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for the routing table lookup."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_RECVERR \" (since Linux 2.2)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Precisely: 2.1.15"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Enable extended reliable error message passing."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "When enabled on a datagram socket, all"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "generated errors will be queued in a per-socket error queue."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "When the user receives an error from a socket operation,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the errors can be received by calling"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " recvmsg (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " MSG_ERRQUEUE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "flag set."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sock_extended_err"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "structure describing the error will be passed in an ancillary message with"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the type"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_RECVERR"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and the level"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IPPROTO_IP ."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" or SOL_IP on Linux"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "This is useful for reliable error handling on unconnected sockets."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The received data portion of the error queue contains the error packet."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_RECVERR"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "control message contains a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sock_extended_err"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "structure:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#define SO_EE_ORIGIN_NONE    0"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#define SO_EE_ORIGIN_LOCAL   1"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#define SO_EE_ORIGIN_ICMP    2"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#define SO_EE_ORIGIN_ICMP6   3"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "struct sock_extended_err {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint32_t ee_errno;   /* error number */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint8_t  ee_origin;  /* where the error originated */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint8_t  ee_type;    /* type */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint8_t  ee_code;    /* code */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint8_t  ee_pad;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint32_t ee_info;    /* additional information */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint32_t ee_data;    /* other data */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    /* More data may follow */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "};"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "struct sockaddr *SO_EE_OFFENDER(struct sock_extended_err *);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ee_errno"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "contains the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " errno"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "number of the queued error."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ee_origin"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is the origin code of where the error originated."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The other fields are protocol-specific."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The macro"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SO_EE_OFFENDER"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "returns a pointer to the address of the network object"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "where the error originated from given a pointer to the ancillary message."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If this address is not known, the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sa_family"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "member of the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sockaddr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "contains"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " AF_UNSPEC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and the other fields of the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sockaddr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are undefined."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "IP uses the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sock_extended_err"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "structure as follows:"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ee_origin"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is set to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SO_EE_ORIGIN_ICMP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for errors received as an ICMP packet, or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SO_EE_ORIGIN_LOCAL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for locally generated errors."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Unknown values should be ignored."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ee_type"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ee_code"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are set from the type and code fields of the ICMP header."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ee_info"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "contains the discovered MTU for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EMSGSIZE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "errors."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The message also contains the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sockaddr_in of the node"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "caused the error, which can be accessed with the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SO_EE_OFFENDER"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "macro."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sin_family"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "field of the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SO_EE_OFFENDER"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "address is"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " AF_UNSPEC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "when the source was unknown."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "When the error originated from the network, all IP options"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( IP_OPTIONS \", \" IP_TTL \", \""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "etc.) enabled on the socket and contained in the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "error packet are passed as control messages."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The payload of the packet causing the error is returned as normal payload."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" FIXME . Is it a good idea to document that? It is a dubious feature."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" On"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .B SOCK_STREAM"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" sockets,"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .B IP_RECVERR"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" has slightly different semantics. Instead of"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" saving the errors for the next timeout, it passes all incoming"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" errors immediately to the user."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" This might be useful for very short-lived TCP connections which"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" need fast error handling. Use this option with care:"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" it makes TCP unreliable"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" by not allowing it to recover properly from routing"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" shifts and other normal"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" conditions and breaks the protocol specification."
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Note that TCP has no error queue;"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " MSG_ERRQUEUE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is not permitted on"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SOCK_STREAM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "sockets."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_RECVERR"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is valid for TCP, but all errors are returned by socket function return or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SO_ERROR"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "only."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "For raw sockets,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_RECVERR"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "enables passing of all received ICMP errors to the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "application, otherwise errors are only reported on connected sockets"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "It sets or retrieves an integer boolean flag."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_RECVERR"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "defaults to off."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_RECVOPTS \" (since Linux 2.2)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Precisely: 2.1.15"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Pass all incoming IP options to the user in a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_OPTIONS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "control message."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The routing header and other options are already filled in"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for the local host."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Not supported for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SOCK_STREAM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "sockets."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_RECVORIGDSTADDR \" (since Linux 2.6.29)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" commit e8b2dfe9b4501ed0047459b2756ba26e5a940a69"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "This boolean option enables the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_ORIGDSTADDR"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ancillary message in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " recvmsg (2),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in which the kernel returns the original destination address"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "of the datagram being received."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The ancillary message contains a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"struct sockaddr_in\" ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_RECVTOS \" (since Linux 2.2)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Precisely: 2.1.68"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If enabled, the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_TOS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ancillary message is passed with incoming packets."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "It contains a byte which specifies the Type of Service/Precedence"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "field of the packet header."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Expects a boolean integer flag."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_RECVTTL \" (since Linux 2.2)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Precisely: 2.1.68"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "When this flag is set, pass a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_TTL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "control message with the time-to-live"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "field of the received packet as a byte."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Not supported for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SOCK_STREAM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "sockets."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_RETOPTS \" (since Linux 2.2)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Precisely: 2.1.15"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Identical to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_RECVOPTS ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "but returns raw unprocessed options with timestamp and route record"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "options not filled in for this hop."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_ROUTER_ALERT \" (since Linux 2.2)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Precisely: 2.1.68"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Pass all to-be forwarded packets with the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "IP Router Alert option set to this socket."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Valid only for raw sockets."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This is useful, for instance, for user-space RSVP daemons."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The tapped packets are not forwarded by the kernel; it is"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the user's responsibility to send them out again."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Socket binding is ignored,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "such packets are only filtered by protocol."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Expects an integer flag."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_TOS \" (since Linux 1.0)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Set or receive the Type-Of-Service (TOS) field that is sent"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with every IP packet originating from this socket."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "It is used to prioritize packets on the network."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "TOS is a byte."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "There are some standard TOS flags defined:"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IPTOS_LOWDELAY"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to minimize delays for interactive traffic,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IPTOS_THROUGHPUT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to optimize throughput,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IPTOS_RELIABILITY"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to optimize for reliability,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IPTOS_MINCOST"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "should be used for \"filler data\" where slow transmission doesn't matter."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "At most one of these TOS values can be specified."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Other bits are invalid and shall be cleared."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Linux sends"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IPTOS_LOWDELAY"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "datagrams first by default,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "but the exact behavior depends on the configured queueing discipline."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" FIXME elaborate on this"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Some high-priority levels may require superuser privileges (the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CAP_NET_ADMIN"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "capability)."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" The priority can also be set in a protocol-independent way by the"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .RB ( SOL_SOCKET \", \" SO_PRIORITY )"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" socket option (see"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .BR socket (7))."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_TRANSPARENT \" (since Linux 2.6.24)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" commit f5715aea4564f233767ea1d944b2637a5fd7cd2e"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     This patch introduces the IP_TRANSPARENT socket option: enabling that"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     will make the IPv4 routing omit the non-local source address check on"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     output. Setting IP_TRANSPARENT requires NET_ADMIN capability."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" http://lwn.net/Articles/252545/"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Setting this boolean option enables transparent proxying on this socket."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This socket option allows"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the calling application to bind to a nonlocal IP address and operate"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "both as a client and a server with the foreign address as the local endpoint."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "NOTE: this requires that routing be set up in a way that"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "packets going to the foreign address are routed through the TProxy box"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(i.e., the system hosting the application that employs the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_TRANSPARENT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "socket option)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Enabling this socket option requires superuser privileges"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CAP_NET_ADMIN"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "capability)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "TProxy redirection with the iptables TPROXY target also requires that"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "this option be set on the redirected socket."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_TTL \" (since Linux 1.0)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Set or retrieve the current time-to-live field that is used in every packet"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "sent from this socket."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_UNBLOCK_SOURCE \" (since Linux 2.4.22 / 2.5.68)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Unblock previously blocked multicast source."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Returns"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EADDRNOTAVAIL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "when given source is not being blocked."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Argument is an"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ip_mreq_source"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "structure as described under"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_ADD_SOURCE_MEMBERSHIP ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " /proc interfaces"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The IP protocol"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "supports a set of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "interfaces to configure some global parameters."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The parameters can be accessed by reading or writing files in the directory"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc/sys/net/ipv4/ ."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" FIXME As at 2.6.12, 14 Jun 2005, the following are undocumented:"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"  ip_queue_maxlen"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"  ip_conntrack_max"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Interfaces described as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " Boolean"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "take an integer value, with a nonzero value (\"true\") meaning that"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the corresponding option is enabled, and a zero value (\"false\")"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "meaning that the option is disabled."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ip_always_defrag \" (Boolean; since Linux 2.2.13)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "[New with kernel 2.2.13; in earlier kernel versions this feature"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "was controlled at compile time by the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CONFIG_IP_ALWAYS_DEFRAG"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "option; this option is not present in 2.4.x and later]"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "When this boolean flag is enabled (not equal 0), incoming fragments"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(parts of IP packets"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "that arose when some host between origin and destination decided"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "that the packets were too large and cut them into pieces) will be"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "reassembled (defragmented) before being processed, even if they are"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "about to be forwarded."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Enable only if running either a firewall that is the sole link"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to your network or a transparent proxy; never ever use it for a"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "normal router or host."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Otherwise, fragmented communication can be disturbed"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "if the fragments travel over different links."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Defragmentation also has a large memory and CPU time cost."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "This is automagically turned on when masquerading or transparent"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "proxying are configured."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ip_autoconfig \" (since Linux 2.2 to 2.6.17)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Precisely: since 2.1.68"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" FIXME document ip_autoconfig"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Not documented."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ip_default_ttl \" (integer; default: 64; since Linux 2.2)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Precisely: 2.1.15"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Set the default time-to-live value of outgoing packets."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This can be changed per socket with the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_TTL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "option."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ip_dynaddr \" (Boolean; default: disabled; since Linux 2.0.31)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Enable dynamic socket address and masquerading entry rewriting on interface"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "address change."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This is useful for dialup interface with changing IP addresses."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "0 means no rewriting, 1 turns it on and 2 enables verbose mode."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ip_forward \" (Boolean; default: disabled; since Linux 1.2)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Enable IP forwarding with a boolean flag."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "IP forwarding can be also set on a per-interface basis."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ip_local_port_range \" (since Linux 2.2)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Precisely: since 2.1.68"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "This file contains two integers that define the default local port range"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "allocated to sockets that are not explicitly bound to a port number"
        },
        {
          "type": "ESCAPE",
          "content": "\\(em"
        },
        {
          "type": "TEXT",
          "content": "that"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is, the range used for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"ephemeral ports\" ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "An ephemeral port is allocated to a socket in the following circumstances:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RS",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " * 3"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "the port number in a socket address is specified as 0 when calling"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " bind (2);"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " listen (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is called on a stream socket that was not previously bound;"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " connect (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "was called on a socket that was not previously bound;"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sendto (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is called on a datagram socket that was not previously bound."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RE",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Allocation of ephemeral ports starts with the first number in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ip_local_port_range"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and ends with the second number."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the range of ephemeral ports is exhausted,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "then the relevant system call returns an error (but see BUGS)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Note that the port range in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ip_local_port_range"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "should not conflict with the ports used by masquerading"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(although the case is handled)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Also, arbitrary choices may cause problems with some firewall packet"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "filters that make assumptions about the local ports in use."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The first number should be at least greater than 1024,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or better, greater than 4096, to avoid clashes"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with well known ports and to minimize firewall problems."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ip_no_pmtu_disc \" (Boolean; default: disabled; since Linux 2.2)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Precisely: 2.1.15"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If enabled, don't do Path MTU Discovery for TCP sockets by default."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Path MTU discovery may fail if misconfigured firewalls (that drop"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "all ICMP packets) or misconfigured interfaces (e.g., a point-to-point"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "link where the both ends don't agree on the MTU) are on the path."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "It is better to fix the broken routers on the path than to turn off"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Path MTU Discovery globally, because not doing it incurs a high cost"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to the network."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" The following is from 2.6.12: Documentation/networking/ip-sysctl.txt"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ip_nonlocal_bind \" (Boolean; default: disabled; since Linux 2.4)\""
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Precisely: patch-2.4.0-test10"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If set, allows processes to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " bind (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to nonlocal IP addresses,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "which can be quite useful, but may break some applications."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" The following is from 2.6.12: Documentation/networking/ip-sysctl.txt"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ip6frag_time \" (integer; default: 30)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Time in seconds to keep an IPv6 fragment in memory."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" The following is from 2.6.12: Documentation/networking/ip-sysctl.txt"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ip6frag_secret_interval \" (integer; default: 600)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Regeneration interval (in seconds) of the hash secret (or lifetime"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for the hash secret) for IPv6 fragments."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ipfrag_high_thresh \" (integer), \" ipfrag_low_thresh \" (integer)\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the amount of queued IP fragments reaches"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ipfrag_high_thresh ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the queue is pruned down to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ipfrag_low_thresh ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Contains an integer with the number of bytes."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " neigh/*"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "See"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " arp (7)."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" FIXME Document the conf/*/* interfaces"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" FIXME Document the route/* interfaces"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Ioctls"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "All ioctls described in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " socket (7)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "apply to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ip ."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 2006-04-02, mtk"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" commented out the following because ipchains is obsolete"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .PP"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" The ioctls to configure firewalling are documented in"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .BR ipfw (4)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" from the"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .B ipchains"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" package."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Ioctls to configure generic device parameters are described in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " netdevice (7)."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" FIXME Add a discussion of multicasting"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " ERRORS"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" FIXME document all errors."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     We should really fix the kernels to give more uniform"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     error returns (ENOMEM vs ENOBUFS, EPERM vs EACCES etc.)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EACCES"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The user tried to execute an operation without the necessary permissions."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "These include:"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "sending a packet to a broadcast address without having the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SO_BROADCAST"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "flag set;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "sending a packet via a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " prohibit"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "route;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "modifying firewall settings without superuser privileges (the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CAP_NET_ADMIN"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "capability);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "binding to a privileged port without superuser privileges (the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CAP_NET_BIND_SERVICE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "capability)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EADDRINUSE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Tried to bind to an address already in use."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EADDRNOTAVAIL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A nonexistent interface was requested or the requested source"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "address was not local."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EAGAIN"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Operation on a nonblocking socket would block."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EALREADY"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A connection operation on a nonblocking socket is already in progress."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ECONNABORTED"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A connection was closed during an"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " accept (2)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EHOSTUNREACH"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "No valid routing table entry matches the destination address."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This error can be caused by an ICMP message from a remote router or"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for the local routing table."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINVAL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Invalid argument passed."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For send operations this can be caused by sending to a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " blackhole"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "route."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EISCONN"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " connect (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "was called on an already connected socket."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EMSGSIZE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Datagram is bigger than an MTU on the path and it cannot be fragmented."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ENOBUFS \", \" ENOMEM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Not enough free memory."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This often means that the memory allocation is limited by the socket"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "buffer limits, not by the system memory, but this is not 100% consistent."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ENOENT"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIOCGSTAMP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "was called on a socket where no packet arrived."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ENOPKG"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A kernel subsystem was not configured."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ENOPROTOOPT \" and \" EOPNOTSUPP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Invalid socket option passed."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ENOTCONN"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The operation is defined only on a connected socket, but the socket wasn't"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "connected."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EPERM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "User doesn't have permission to set high priority, change configuration,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or send signals to the requested process or group."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EPIPE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The connection was unexpectedly closed or shut down by the other end."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ESOCKTNOSUPPORT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The socket is not configured or an unknown socket type was requested."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Other errors may be generated by the overlaying protocols; see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " tcp (7),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " raw (7),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " udp (7),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " socket (7)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " NOTES"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_FREEBIND ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_MSFILTER ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_MTU ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_MTU_DISCOVER ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_RECVORIGDSTADDR ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_PKTINFO ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_RECVERR ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_ROUTER_ALERT ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_TRANSPARENT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are Linux-specific."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" IP_PASSSEC is Linux-specific"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" IP_XFRM_POLICY is Linux-specific"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" IP_IPSEC_POLICY is a nonstandard extension, also present on some BSDs"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Be very careful with the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SO_BROADCAST"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "option "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": " it is not privileged in Linux."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "It is easy to overload the network"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with careless broadcasts."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For new application protocols"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "it is better to use a multicast group instead of broadcasting."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Broadcasting is discouraged."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Some other BSD sockets implementations provide"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_RCVDSTADDR"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_RECVIF"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "socket options to get the destination address and the interface of"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "received datagrams."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Linux has the more general"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_PKTINFO"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for the same task."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Some BSD sockets implementations also provide an"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_RECVTTL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "option, but an ancillary message with type"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_RECVTTL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is passed with the incoming packet."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This is different from the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_TTL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "option used in Linux."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Using the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SOL_IP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "socket options level isn't portable; BSD-based stacks use the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IPPROTO_IP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "level."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " INADDR_ANY"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(0.0.0.0) and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " INADDR_BROADCAST"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(255.255.255.255) are byte-order-neutral."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": " This means"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " htonl (3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "has no effect on them."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Compatibility"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "For compatibility with Linux 2.0, the obsolete"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".BI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"socket(AF_INET, SOCK_PACKET, \" protocol )"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "syntax is still supported to open a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " packet (7)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "socket."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This is deprecated and should be replaced by"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".BI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"socket(AF_PACKET, SOCK_RAW, \" protocol )"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "instead."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The main difference is the new"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sockaddr_ll"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "address structure for generic link layer information instead of the old"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sockaddr_pkt ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " BUGS"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "There are too many inconsistent error values."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The error used to diagnose exhaustion of the ephemeral port range differs"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "across the various system calls"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( connect (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " bind (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " listen (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sendto (2))"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "that can assign ephemeral ports."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The ioctls to configure IP-specific interface options and ARP tables are"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "not described."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .PP"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Some versions of glibc forget to declare"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .IR in_pktinfo ."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Workaround currently is to copy it into your program from this man page."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Receiving the original destination address with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " MSG_ERRQUEUE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " msg_name"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " recvmsg (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "does not work in some 2.2 kernels."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .SH AUTHORS"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" This man page was written by Andi Kleen."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " SEE ALSO"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " recvmsg (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sendmsg (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " byteorder (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ipfw (4),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " capabilities (7),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " icmp (7),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ipv6 (7),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " netlink (7),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " raw (7),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " socket (7),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " tcp (7),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " udp (7),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ip (8)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "RFC"
        },
        {
          "type": "ESCAPE",
          "content": "\\ "
        },
        {
          "type": "TEXT",
          "content": "791 for the original IP specification."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "RFC"
        },
        {
          "type": "ESCAPE",
          "content": "\\ "
        },
        {
          "type": "TEXT",
          "content": "1122 for the IPv4 host requirements."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "RFC"
        },
        {
          "type": "ESCAPE",
          "content": "\\ "
        },
        {
          "type": "TEXT",
          "content": "1812 for the IPv4 router requirements."
        }
      ]
    ]
  }
]
