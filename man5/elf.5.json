[
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t$OpenBSD: elf.5,v 1.12 2003/10/27 20:23:58 jmc Exp $"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"Copyright (c) 1999 Jeroen Ruigrok van der Werven"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"All rights reserved."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" %%%LICENSE_START(PERMISSIVE_MISC)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"Redistribution and use in source and binary forms, with or without"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"modification, are permitted provided that the following conditions"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"are met:"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"1. Redistributions of source code must retain the above copyright"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"   notice, this list of conditions and the following disclaimer."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"2. Redistributions in binary form must reproduce the above copyright"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"   notice, this list of conditions and the following disclaimer in the"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"   documentation and/or other materials provided with the distribution."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"SUCH DAMAGE."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" %%%LICENSE_END"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"\t$FreeBSD: src/share/man/man5/elf.5,v 1.21 2001/10/01 16:09:23 ru Exp $"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Slightly adapted - aeb, 2004-01-01"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 2005-07-15, Mike Frysinger <vapier@gentoo.org>, various fixes"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 2007-10-11, Mike Frysinger <vapier@gentoo.org>, various fixes"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 2007-12-08, mtk, Converted from mdoc to man macros"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TH",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ELF 5 2018-04-30 \"Linux\" \"Linux Programmer's Manual\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " NAME"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "elf "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": " format of Executable and Linking Format (ELF) files"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " SYNOPSIS"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".nf",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .B #include <elf_abi.h>"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " #include <elf.h>"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".fi",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " DESCRIPTION"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The header file"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " <elf.h>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "defines the format of ELF executable binary files."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Amongst these files are"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "normal executable files, relocatable object files, core files, and shared"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "objects."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "An executable file using the ELF file format consists of an ELF header,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "followed by a program header table or a section header table, or both."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The ELF header is always at offset zero of the file."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The program header"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "table and the section header table's offset in the file are defined in the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ELF header."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The two tables describe the rest of the particularities of"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the file."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Applications which wish to process ELF binary files for their native"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" architecture only should include"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .I <elf_abi.h>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" in their source code."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" These applications should need to refer to"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" all the types and structures by their generic names"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" \"Elf_xxx\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" and to the macros by"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" ELF_xxx\"."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Applications written this way can be compiled on any architecture,"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" regardless of whether the host is 32-bit or 64-bit."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .PP"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Should an application need to process ELF files of an unknown"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" architecture, then the application needs to explicitly use either"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" \"Elf32_xxx\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" or"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" \"Elf64_xxx\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" type and structure names."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Likewise, the macros need to be identified by"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" \"ELF32_xxx\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" or"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" \"ELF64_xxx\"."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .PP"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "This header file describes the above mentioned headers as C structures"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and also includes structures for dynamic sections, relocation sections and"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "symbol tables."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Basic types"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The following types are used for N-bit architectures (N=32,64,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ElfN"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "stands for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " Elf32"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " Elf64 ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uintN_t"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "stands for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uint32_t"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uint64_t ):"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ElfN_Addr       Unsigned program address, uintN_t"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ElfN_Off        Unsigned file offset, uintN_t"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ElfN_Section    Unsigned section index, uint16_t"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ElfN_Versym     Unsigned version symbol information, uint16_t"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Elf_Byte        unsigned char"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ElfN_Half       uint16_t"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ElfN_Sword      int32_t"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ElfN_Word       uint32_t"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ElfN_Sxword     int64_t"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ElfN_Xword      uint64_t"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Elf32_Size  Unsigned object size"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "(Note: the *BSD terminology is a bit different."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "There,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " Elf64_Half"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "twice as large as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " Elf32_Half ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " Elf64Quarter"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is used for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " uint16_t ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "In order to avoid confusion these types are replaced by explicit ones"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in the below.)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "All data structures that the file format defines follow the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "\"natural\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "size and alignment guidelines for the relevant class."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If necessary,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "data structures contain explicit padding to ensure 4-byte alignment"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for 4-byte objects, to force structure sizes to a multiple of 4, and so on."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " ELF header (Ehdr)"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The ELF header is described by the type"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " Elf32_Ehdr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " Elf64_Ehdr :"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#define EI_NIDENT 16"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "typedef struct {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    unsigned char e_ident[EI_NIDENT];"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint16_t      e_type;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint16_t      e_machine;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint32_t      e_version;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    ElfN_Addr     e_entry;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    ElfN_Off      e_phoff;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    ElfN_Off      e_shoff;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint32_t      e_flags;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint16_t      e_ehsize;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint16_t      e_phentsize;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint16_t      e_phnum;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint16_t      e_shentsize;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint16_t      e_shnum;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint16_t      e_shstrndx;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "} ElfN_Ehdr;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The fields have the following meanings:"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".nr",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " l1_indent 10"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\n"
        },
        {
          "type": "TEXT",
          "content": "[l1_indent]"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " e_ident"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This array of bytes specifies how to interpret the file,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "independent of the processor or the file's remaining contents."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Within this array everything is named by macros, which start with"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the prefix"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EI_"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and may contain values which start with the prefix"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ELF ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The following macros are defined:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RS",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 9"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EI_MAG0"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The first byte of the magic number."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "It must be filled with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ELFMAG0 ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(0: 0x7f)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EI_MAG1"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The second byte of the magic number."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "It must be filled with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ELFMAG1 ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(1: "
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": "E"
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": ")"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EI_MAG2"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The third byte of the magic number."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "It must be filled with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ELFMAG2 ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(2: "
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": "L"
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": ")"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EI_MAG3"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The fourth byte of the magic number."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "It must be filled with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ELFMAG3 ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(3: "
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": "F"
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": ")"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EI_CLASS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The fifth byte identifies the architecture for this binary:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RS",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 14"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PD",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 0"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ELFCLASSNONE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This class is invalid."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ELFCLASS32"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This defines the 32-bit architecture."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "It supports machines with files"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and virtual address spaces up to 4 Gigabytes."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ELFCLASS64"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This defines the 64-bit architecture."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PD",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RE",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EI_DATA"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The sixth byte specifies the data encoding of the processor-specific"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "data in the file."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Currently, these encodings are supported:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RS",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 9"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 14"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PD",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 0"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ELFDATANONE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Unknown data format."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ELFDATA2LSB"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Two's complement, little-endian."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ELFDATA2MSB"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Two's complement, big-endian."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PD",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RE",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EI_VERSION"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The seventh byte is the version number of the ELF specification:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PD",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 0"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RS",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 14"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EV_NONE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Invalid version."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EV_CURRENT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Current version."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PD",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RE",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\".El"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EI_OSABI"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The eighth byte identifies the operating system"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and ABI to which the object is targeted."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Some fields in other ELF structures have flags"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and values that have platform-specific meanings;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the interpretation of those fields is determined by the value of this byte."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For example:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RS",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 21"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PD",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 0"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ELFOSABI_NONE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Same as ELFOSABI_SYSV"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 0"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ELFOSABI_SYSV"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "UNIX System V ABI"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 0"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" synonym: ELFOSABI_NONE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ELFOSABI_HPUX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "HP-UX ABI"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 1"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ELFOSABI_NETBSD"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "NetBSD ABI"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 2"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ELFOSABI_LINUX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Linux ABI"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 3"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .TP"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .BR ELFOSABI_HURD"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Hurd ABI"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 4"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .TP"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .BR ELFOSABI_86OPEN"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 86Open Common IA32 ABI"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 5"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ELFOSABI_SOLARIS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Solaris ABI"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 6"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .TP"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .BR ELFOSABI_MONTEREY"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Monterey project ABI"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Now replaced by"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" ELFOSABI_AIX"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 7"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ELFOSABI_IRIX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "IRIX ABI"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 8"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ELFOSABI_FREEBSD"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "FreeBSD ABI"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 9"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ELFOSABI_TRU64"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "TRU64 UNIX ABI"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 10"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" ELFOSABI_MODESTO"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 11"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" ELFOSABI_OPENBSD"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 12"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ELFOSABI_ARM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ARM architecture ABI"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 97"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ELFOSABI_STANDALONE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Stand-alone (embedded) ABI"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 255"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PD",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RE",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EI_ABIVERSION"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The ninth byte identifies the version of the ABI"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to which the object is targeted."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This field is used to distinguish among incompatible versions of an ABI."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The interpretation of this version number"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is dependent on the ABI identified by the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EI_OSABI"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "field."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Applications conforming to this specification use the value 0."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EI_PAD"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Start of padding."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "These bytes are reserved and set to zero."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Programs"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "which read them should ignore them."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The value for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EI_PAD"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "will change in"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the future if currently unused bytes are given meanings."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" As reported by Yuri Kozlov and confirmed by Mike Frysinger, EI_BRAND is"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" not in GABI (http://www.sco.com/developers/gabi/latest/ch4.eheader.html)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" It looks to be a BSDism"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .TP"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .BR EI_BRAND"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Start of architecture identification."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EI_NIDENT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The size of the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " e_ident"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "array."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RE",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " e_type"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This member of the structure identifies the object file type:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RS",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 16"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PD",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 0"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ET_NONE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "An unknown type."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ET_REL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A relocatable file."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ET_EXEC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "An executable file."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ET_DYN"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A shared object."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ET_CORE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A core file."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PD",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RE",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " e_machine"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This member specifies the required architecture for an individual file."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For example:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RS",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\n"
        },
        {
          "type": "TEXT",
          "content": "[l1_indent]"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 16"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PD",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 0"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EM_NONE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "An unknown machine"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 0"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EM_M32"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "AT&T WE 32100"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 1"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EM_SPARC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Sun Microsystems SPARC"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 2"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EM_386"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Intel 80386"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 3"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EM_68K"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Motorola 68000"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 4"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EM_88K"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Motorola 88000"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 5"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .TP"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .BR EM_486"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Intel 80486"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 6"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EM_860"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Intel 80860"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 7"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EM_MIPS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "MIPS RS3000 (big-endian only)"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 8"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" EM_S370"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 9"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .TP"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .BR EM_MIPS_RS4_BE"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" MIPS RS4000 (big-endian only). Deprecated"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 10"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" EM_MIPS_RS3_LE (MIPS R3000 little-endian)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 10"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EM_PARISC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "HP/PA"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 15"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EM_SPARC32PLUS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SPARC with enhanced instruction set"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 18"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EM_PPC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "PowerPC"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 20"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EM_PPC64"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "PowerPC 64-bit"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 21"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EM_S390"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "IBM S/390"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 22"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EM_ARM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Advanced RISC Machines"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 40"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EM_SH"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Renesas SuperH"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 42"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EM_SPARCV9"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "SPARC v9 64-bit"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 43"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EM_IA_64"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Intel Itanium"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 50"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EM_X86_64"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "AMD x86-64"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 62"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EM_VAX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "DEC Vax"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 75"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" EM_CRIS"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 76"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .TP"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .BR EM_ALPHA"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Compaq [DEC] Alpha"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .TP"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .BR EM_ALPHA_EXP"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Compaq [DEC] Alpha with enhanced instruction set"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PD",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RE",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " e_version"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This member identifies the file version:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RS",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 16"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PD",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 0"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EV_NONE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Invalid version"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EV_CURRENT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Current version"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PD",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RE",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " e_entry"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This member gives the virtual address to which the system first transfers"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "control, thus starting the process."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the file has no associated entry"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "point, this member holds zero."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " e_phoff"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This member holds the program header table's file offset in bytes."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the file has no program header table, this member holds zero."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " e_shoff"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This member holds the section header table's file offset in bytes."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "file has no section header table, this member holds zero."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " e_flags"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This member holds processor-specific flags associated with the file."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Flag names take the form EF_`machine_flag'."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Currently, no flags have been defined."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " e_ehsize"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This member holds the ELF header's size in bytes."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " e_phentsize"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This member holds the size in bytes of one entry in the file's"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "program header table; all entries are the same size."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " e_phnum"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This member holds the number of entries in the program header"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "table."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Thus the product of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " e_phentsize"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " e_phnum"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "gives the table's size"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in bytes."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If a file has no program header,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " e_phnum"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "holds the value zero."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If the number of entries in the program header table is"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "larger than or equal to"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" This is a Linux extension, added in Linux 2.6.34."
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PN_XNUM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(0xffff), this member holds"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PN_XNUM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(0xffff) and the real number of entries in the program header table is held"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sh_info"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "member of the initial entry in section header table."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Otherwise, the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sh_info"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "member of the initial entry contains the value zero."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RS",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\n"
        },
        {
          "type": "TEXT",
          "content": "[l1_indent]"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 9"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PN_XNUM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This is defined as 0xffff, the largest number"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " e_phnum"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "can have, specifying where the actual number of program headers is assigned."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PD",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RE",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " e_shentsize"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This member holds a sections header's size in bytes."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A section header is one"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "entry in the section header table; all entries are the same size."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " e_shnum"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This member holds the number of entries in the section header table."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Thus"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the product of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " e_shentsize"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " e_shnum"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "gives the section header table's size in bytes."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If a file has no section"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "header table,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " e_shnum"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "holds the value of zero."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If the number of entries in the section header table is"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "larger than or equal to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHN_LORESERVE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(0xff00),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " e_shnum"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "holds the value zero and the real number of entries in the section header"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "table is held in the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sh_size"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "member of the initial entry in section header table."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Otherwise, the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sh_size"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "member of the initial entry in the section header table holds"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the value zero."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " e_shstrndx"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This member holds the section header table index of the entry associated"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with the section name string table."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the file has no section name string"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "table, this member holds the value"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHN_UNDEF ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If the index of section name string table section is"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "larger than or equal to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHN_LORESERVE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(0xff00), this member holds"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHN_XINDEX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(0xffff) and the real index of the section name string table section"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is held in the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sh_link"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "member of the initial entry in section header table."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Otherwise, the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sh_link"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "member of the initial entry in section header table contains the value zero."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Program header (Phdr)"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "An executable or shared object file's program header table is an array of"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "structures, each describing a segment or other information the system needs"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to prepare the program for execution."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "An object file"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " segment"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "contains one or more"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sections ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Program headers are meaningful only for executable and shared object files."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A file specifies its own program header size with the ELF header's"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " e_phentsize"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " e_phnum"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "members."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The ELF program header is described by the type"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " Elf32_Phdr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " Elf64_Phdr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "depending on the architecture:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "typedef struct {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint32_t   p_type;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    Elf32_Off  p_offset;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    Elf32_Addr p_vaddr;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    Elf32_Addr p_paddr;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint32_t   p_filesz;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint32_t   p_memsz;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint32_t   p_flags;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint32_t   p_align;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "} Elf32_Phdr;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "typedef struct {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint32_t   p_type;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint32_t   p_flags;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    Elf64_Off  p_offset;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    Elf64_Addr p_vaddr;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    Elf64_Addr p_paddr;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint64_t   p_filesz;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint64_t   p_memsz;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint64_t   p_align;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "} Elf64_Phdr;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The main difference between the 32-bit and the 64-bit program header lies"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in the location of the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " p_flags"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "member in the total struct."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 10"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " p_type"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This member of the structure indicates what kind of segment this array"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "element describes or how to interpret the array element's information."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RS",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 10"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 12"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PT_NULL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The array element is unused and the other members' values are undefined."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This lets the program header have ignored entries."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PT_LOAD"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The array element specifies a loadable segment, described by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " p_filesz"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " p_memsz ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The bytes from the file are mapped to the beginning of the memory"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "segment."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the segment's memory size"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " p_memsz"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is larger than the file size"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " p_filesz ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "\"extra\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "bytes are defined to hold the value 0 and to follow the segment's"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "initialized area."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The file size may not be larger than the memory size."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Loadable segment entries in the program header table appear in ascending"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "order, sorted on the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " p_vaddr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "member."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PT_DYNAMIC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The array element specifies dynamic linking information."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PT_INTERP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The array element specifies the location and size of a null-terminated"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "pathname to invoke as an interpreter."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This segment type is meaningful"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "only for executable files (though it may occur for shared objects)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "However it may not occur more than once in a file."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If it is present, it must precede any loadable segment entry."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PT_NOTE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The array element specifies the location of notes (ElfN_Nhdr)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PT_SHLIB"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This segment type is reserved but has unspecified semantics."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Programs that"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "contain an array element of this type do not conform to the ABI."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PT_PHDR"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The array element, if present,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "specifies the location and size of the program header table itself,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "both in the file and in the memory image of the program."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This segment type may not occur more than once in a file."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Moreover, it may"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "occur only if the program header table is part of the memory image of the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "program."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If it is present, it must precede any loadable segment entry."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PT_LOPROC \", \" PT_HIPROC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Values in the inclusive range"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " [ PT_LOPROC \", \" PT_HIPROC ]"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are reserved for processor-specific semantics."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PT_GNU_STACK"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "GNU extension which is used by the Linux kernel to control the state of the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "stack via the flags set in the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " p_flags"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "member."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RE",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " p_offset"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This member holds the offset from the beginning of the file at which"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the first byte of the segment resides."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " p_vaddr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This member holds the virtual address at which the first byte of the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "segment resides in memory."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " p_paddr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "On systems for which physical addressing is relevant, this member is"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "reserved for the segment's physical address."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Under"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "BSD"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "this member is"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "not used and must be zero."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " p_filesz"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This member holds the number of bytes in the file image of the segment."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "It may be zero."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " p_memsz"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This member holds the number of bytes in the memory image of the segment."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "It may be zero."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " p_flags"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This member holds a bit mask of flags relevant to the segment:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RS",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\n"
        },
        {
          "type": "TEXT",
          "content": "[l1_indent]"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PD",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 0"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PF_X"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "An executable segment."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PF_W"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A writable segment."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PF_R"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A readable segment."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PD",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RE",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "A text segment commonly has the flags"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PF_X"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PF_R ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A data segment commonly has"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PF_X ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PF_W ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PF_R ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " p_align"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This member holds the value to which the segments are aligned in memory"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and in the file."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Loadable process segments must have congruent values for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " p_vaddr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " p_offset ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "modulo the page size."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Values of zero and one mean no alignment is required."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Otherwise,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " p_align"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "should be a positive, integral power of two, and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " p_vaddr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "should equal"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " p_offset ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "modulo"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " p_align ."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Section header (Shdr)"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "A file's section header table lets one locate all the file's sections."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "section header table is an array of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " Elf32_Shdr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " Elf64_Shdr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "structures."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ELF header's"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " e_shoff"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "member gives the byte offset from the beginning of the file to the section"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "header table."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " e_shnum"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "holds the number of entries the section header table contains."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " e_shentsize"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "holds the size in bytes of each entry."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "A section header table index is a subscript into this array."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Some section"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "header table indices are reserved:"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the initial entry and the indices between"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHN_LORESERVE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHN_HIRESERVE ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The initial entry is used in ELF extensions for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " e_phnum ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " e_shnum"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " e_strndx ;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in other cases, each field in the initial entry is set to zero."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "An object file does not have sections for"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "these special indices:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHN_UNDEF"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This value marks an undefined, missing, irrelevant,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or otherwise meaningless section reference."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHN_LORESERVE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This value specifies the lower bound of the range of reserved indices."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHN_LOPROC \", \" SHN_HIPROC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Values greater in the inclusive range"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " [ SHN_LOPROC \", \" SHN_HIPROC ]"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are reserved for processor-specific semantics."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHN_ABS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This value specifies the absolute value for the corresponding reference."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "example, a symbol defined relative to section number"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHN_ABS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "has an absolute value and is not affected by relocation."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHN_COMMON"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Symbols defined relative to this section are common symbols,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "such as FORTRAN COMMON or unallocated C external variables."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHN_HIRESERVE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This value specifies the upper bound of the range of reserved indices."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "system reserves indices between"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHN_LORESERVE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHN_HIRESERVE ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "inclusive."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The section header table does not contain entries for the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "reserved indices."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The section header has the following structure:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "typedef struct {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint32_t   sh_name;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint32_t   sh_type;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint32_t   sh_flags;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    Elf32_Addr sh_addr;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    Elf32_Off  sh_offset;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint32_t   sh_size;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint32_t   sh_link;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint32_t   sh_info;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint32_t   sh_addralign;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint32_t   sh_entsize;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "} Elf32_Shdr;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "typedef struct {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint32_t   sh_name;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint32_t   sh_type;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint64_t   sh_flags;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    Elf64_Addr sh_addr;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    Elf64_Off  sh_offset;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint64_t   sh_size;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint32_t   sh_link;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint32_t   sh_info;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint64_t   sh_addralign;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint64_t   sh_entsize;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "} Elf64_Shdr;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "No real differences exist between the 32-bit and 64-bit section headers."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\n"
        },
        {
          "type": "TEXT",
          "content": "[l1_indent]"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sh_name"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This member specifies the name of the section."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Its value is an index"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "into the section header string table section, giving the location of"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "a null-terminated string."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sh_type"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This member categorizes the section's contents and semantics."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RS",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\n"
        },
        {
          "type": "TEXT",
          "content": "[l1_indent]"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 15"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_NULL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This value marks the section header as inactive."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "It does not"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "have an associated section."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Other members of the section header"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "have undefined values."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_PROGBITS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section holds information defined by the program, whose"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "format and meaning are determined solely by the program."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_SYMTAB"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section holds a symbol table."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Typically,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_SYMTAB"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "provides symbols for link editing, though it may also be used"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for dynamic linking."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "As a complete symbol table, it may contain"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "many symbols unnecessary for dynamic linking."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "An object file can"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "also contain a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_DYNSYM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "section."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_STRTAB"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section holds a string table."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "An object file may have multiple"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "string table sections."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_RELA"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section holds relocation entries with explicit addends, such"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "as type"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " Elf32_Rela"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for the 32-bit class of object files."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "An object may have multiple"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "relocation sections."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_HASH"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section holds a symbol hash table."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "An object participating in"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "dynamic linking must contain a symbol hash table."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "An object file may"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "have only one hash table."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_DYNAMIC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section holds information for dynamic linking."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "An object file may"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "have only one dynamic section."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_NOTE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section holds notes (ElfN_Nhdr)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_NOBITS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A section of this type occupies no space in the file but otherwise"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "resembles"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_PROGBITS ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Although this section contains no bytes, the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sh_offset"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "member contains the conceptual file offset."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_REL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section holds relocation offsets without explicit addends, such"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "as type"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " Elf32_Rel"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for the 32-bit class of object files."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "An object file may have multiple"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "relocation sections."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_SHLIB"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section is reserved but has unspecified semantics."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_DYNSYM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section holds a minimal set of dynamic linking symbols."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "An"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "object file can also contain a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_SYMTAB"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "section."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_LOPROC \", \" SHT_HIPROC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Values in the inclusive range"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " [ SHT_LOPROC \", \" SHT_HIPROC ]"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are reserved for processor-specific semantics."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_LOUSER"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This value specifies the lower bound of the range of indices reserved for"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "application programs."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_HIUSER"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This value specifies the upper bound of the range of indices reserved for"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "application programs."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Section types between"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_LOUSER"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_HIUSER"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "may be used by the application, without conflicting with current or future"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "system-defined section types."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RE",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sh_flags"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Sections support one-bit flags that describe miscellaneous attributes."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If a flag bit is set in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sh_flags ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the attribute is"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "\"on\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for the section."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Otherwise, the attribute is"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "\"off\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or does not apply."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Undefined attributes are set to zero."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RS",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\n"
        },
        {
          "type": "TEXT",
          "content": "[l1_indent]"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 15"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHF_WRITE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section contains data that should be writable during process"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "execution."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHF_ALLOC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section occupies memory during process execution."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Some control"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "sections do not reside in the memory image of an object file."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "attribute is off for those sections."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHF_EXECINSTR"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section contains executable machine instructions."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHF_MASKPROC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "All bits included in this mask are reserved for processor-specific"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "semantics."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RE",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sh_addr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If this section appears in the memory image of a process, this member"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "holds the address at which the section's first byte should reside."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Otherwise, the member contains zero."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sh_offset"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This member's value holds the byte offset from the beginning of the file"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to the first byte in the section."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "One section type,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_NOBITS ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "occupies no space in the file, and its"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sh_offset"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "member locates the conceptual placement in the file."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sh_size"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This member holds the section's size in bytes."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Unless the section type"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_NOBITS ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the section occupies"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sh_size"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "bytes in the file."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A section of type"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_NOBITS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "may have a nonzero size, but it occupies no space in the file."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sh_link"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This member holds a section header table index link, whose interpretation"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "depends on the section type."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sh_info"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This member holds extra information, whose interpretation depends on the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "section type."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sh_addralign"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Some sections have address alignment constraints."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If a section holds a"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "doubleword, the system must ensure doubleword alignment for the entire"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "section."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "That is, the value of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sh_addr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "must be congruent to zero, modulo the value of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sh_addralign ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Only zero and positive integral powers of two are allowed."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The value 0 or 1 means that the section has no alignment constraints."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sh_entsize"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Some sections hold a table of fixed-sized entries, such as a symbol table."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For such a section, this member gives the size in bytes for each entry."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This member contains zero if the section does not hold a table of"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "fixed-size entries."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Various sections hold program and control information:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\n"
        },
        {
          "type": "TEXT",
          "content": "[l1_indent]"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " .bss"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section holds uninitialized data that contributes to the program's"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "memory image."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "By definition, the system initializes the data with zeros"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "when the program begins to run."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section is of type"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_NOBITS ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The attribute types are"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHF_ALLOC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHF_WRITE ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " .comment"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section holds version control information."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section is of type"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_PROGBITS ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "No attribute types are used."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " .ctors"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section holds initialized pointers to the C++ constructor functions."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section is of type"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_PROGBITS ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The attribute types are"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHF_ALLOC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHF_WRITE ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " .data"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section holds initialized data that contribute to the program's"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "memory image."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section is of type"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_PROGBITS ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The attribute types are"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHF_ALLOC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHF_WRITE ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " .data1"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section holds initialized data that contribute to the program's"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "memory image."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section is of type"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_PROGBITS ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The attribute types are"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHF_ALLOC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHF_WRITE ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " .debug"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section holds information for symbolic debugging."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The contents"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are unspecified."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section is of type"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_PROGBITS ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "No attribute types are used."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " .dtors"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section holds initialized pointers to the C++ destructor functions."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section is of type"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_PROGBITS ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The attribute types are"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHF_ALLOC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHF_WRITE ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " .dynamic"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section holds dynamic linking information."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The section's attributes"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "will include the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHF_ALLOC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "bit."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Whether the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHF_WRITE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "bit is set is processor-specific."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section is of type"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_DYNAMIC ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "See the attributes above."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " .dynstr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section holds strings needed for dynamic linking, most commonly"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the strings that represent the names associated with symbol table entries."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section is of type"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_STRTAB ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The attribute type used is"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHF_ALLOC ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " .dynsym"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section holds the dynamic linking symbol table."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section is of type"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_DYNSYM ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The attribute used is"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHF_ALLOC ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " .fini"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section holds executable instructions that contribute to the process"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "termination code."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "When a program exits normally the system arranges to"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "execute the code in this section."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section is of type"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_PROGBITS ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The attributes used are"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHF_ALLOC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHF_EXECINSTR ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " .gnu.version"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section holds the version symbol table, an array of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ElfN_Half"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "elements."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section is of type"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_GNU_versym ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The attribute type used is"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHF_ALLOC ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " .gnu.version_d"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section holds the version symbol definitions, a table of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ElfN_Verdef"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "structures."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section is of type"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_GNU_verdef ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The attribute type used is"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHF_ALLOC ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " .gnu.version_r"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section holds the version symbol needed elements, a table of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ElfN_Verneed"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "structures."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section is of"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "type"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_GNU_versym ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The attribute type used is"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHF_ALLOC ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " .got"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section holds the global offset table."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section is of type"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_PROGBITS ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The attributes are processor-specific."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " .hash"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section holds a symbol hash table."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section is of type"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_HASH ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The attribute used is"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHF_ALLOC ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " .init"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section holds executable instructions that contribute to the process"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "initialization code."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "When a program starts to run the system arranges to execute"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the code in this section before calling the main program entry point."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section is of type"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_PROGBITS ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The attributes used are"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHF_ALLOC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHF_EXECINSTR ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " .interp"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section holds the pathname of a program interpreter."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the file has"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "a loadable segment that includes the section, the section's attributes will"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "include the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHF_ALLOC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "bit."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Otherwise, that bit will be off."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section is of type"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_PROGBITS ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " .line"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section holds line number information for symbolic debugging,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "which describes the correspondence between the program source and"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the machine code."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The contents are unspecified."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section is of type"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_PROGBITS ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "No attribute types are used."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " .note"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section holds various notes."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section is of type"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_NOTE ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "No attribute types are used."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " .note.ABI-tag"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section is used to declare the expected run-time ABI of the ELF image."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "It may include the operating system name and its run-time versions."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section is of type"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_NOTE ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The only attribute used is"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHF_ALLOC ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " .note.gnu.build-id"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section is used to hold an ID that uniquely identifies"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the contents of the ELF image."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Different files with the same build ID should contain the same executable"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "content."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "See the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "build"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "id"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "option to the GNU linker ("
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Bld"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "R (1)) for more details."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section is of type"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_NOTE ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The only attribute used is"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHF_ALLOC ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " .note.GNU-stack"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section is used in Linux object files for declaring stack attributes."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section is of type"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_PROGBITS ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The only attribute used is"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHF_EXECINSTR ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This indicates to the GNU linker that the object file requires an"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "executable stack."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " .note.openbsd.ident"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "OpenBSD native executables usually contain this section"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to identify themselves so the kernel can bypass any compatibility"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ELF binary emulation tests when loading the file."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " .plt"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section holds the procedure linkage table."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section is of type"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_PROGBITS ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The attributes are processor-specific."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " .relNAME"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section holds relocation information as described below."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the file"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "has a loadable segment that includes relocation, the section's attributes"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "will include the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHF_ALLOC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "bit."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Otherwise, the bit will be off."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "By convention,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "\"NAME\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is supplied by the section to which the relocations apply."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Thus a relocation"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "section for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " .text"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "normally would have the name"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " .rel.text ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section is of type"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_REL ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " .relaNAME"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section holds relocation information as described below."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the file"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "has a loadable segment that includes relocation, the section's attributes"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "will include the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHF_ALLOC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "bit."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Otherwise, the bit will be off."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "By convention,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "\"NAME\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is supplied by the section to which the relocations apply."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Thus a relocation"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "section for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " .text"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "normally would have the name"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " .rela.text ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section is of type"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_RELA ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " .rodata"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section holds read-only data that typically contributes to a"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "nonwritable segment in the process image."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section is of type"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_PROGBITS ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The attribute used is"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHF_ALLOC ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " .rodata1"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section holds read-only data that typically contributes to a"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "nonwritable segment in the process image."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section is of type"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_PROGBITS ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The attribute used is"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHF_ALLOC ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " .shstrtab"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section holds section names."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section is of type"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_STRTAB ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "No attribute types are used."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " .strtab"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section holds strings, most commonly the strings that represent the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "names associated with symbol table entries."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the file has a loadable"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "segment that includes the symbol string table, the section's attributes"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "will include the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHF_ALLOC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "bit."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Otherwise, the bit will be off."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section is of type"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_STRTAB ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " .symtab"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section holds a symbol table."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the file has a loadable segment"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "that includes the symbol table, the section's attributes will include"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHF_ALLOC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "bit."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Otherwise, the bit will be off."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section is of type"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_SYMTAB ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " .text"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section holds the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "\"text\","
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or executable instructions, of a program."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This section is of type"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHT_PROGBITS ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The attributes used are"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHF_ALLOC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHF_EXECINSTR ."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " String and symbol tables"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "String table sections hold null-terminated character sequences, commonly"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "called strings."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The object file uses these strings to represent symbol"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and section names."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "One references a string as an index into the string"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "table section."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The first byte, which is index zero, is defined to hold"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "a null byte ("
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "ESCAPE",
          "content": "\\\\"
        },
        {
          "type": "TEXT",
          "content": "0"
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": ")."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Similarly, a string table's last byte is defined to"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "hold a null byte, ensuring null termination for all strings."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "An object file's symbol table holds information needed to locate and"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "relocate a program's symbolic definitions and references."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A symbol table"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "index is a subscript into this array."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "typedef struct {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint32_t      st_name;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    Elf32_Addr    st_value;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint32_t      st_size;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    unsigned char st_info;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    unsigned char st_other;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint16_t      st_shndx;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "} Elf32_Sym;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "typedef struct {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint32_t      st_name;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    unsigned char st_info;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    unsigned char st_other;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint16_t      st_shndx;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    Elf64_Addr    st_value;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint64_t      st_size;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "} Elf64_Sym;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The 32-bit and 64-bit versions have the same members, just in a different"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "order."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\n"
        },
        {
          "type": "TEXT",
          "content": "[l1_indent]"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " st_name"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This member holds an index into the object file's symbol string table,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "which holds character representations of the symbol names."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the value"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is nonzero, it represents a string table index that gives the symbol"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "name."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Otherwise, the symbol has no name."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " st_value"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This member gives the value of the associated symbol."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " st_size"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Many symbols have associated sizes."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This member holds zero if the symbol"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "has no size or an unknown size."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " st_info"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This member specifies the symbol's type and binding attributes:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RS",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\n"
        },
        {
          "type": "TEXT",
          "content": "[l1_indent]"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 12"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " STT_NOTYPE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The symbol's type is not defined."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " STT_OBJECT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The symbol is associated with a data object."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " STT_FUNC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The symbol is associated with a function or other executable code."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " STT_SECTION"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The symbol is associated with a section."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Symbol table entries of"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "this type exist primarily for relocation and normally have"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " STB_LOCAL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "bindings."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " STT_FILE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "By convention, the symbol's name gives the name of the source file"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "associated with the object file."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A file symbol has"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " STB_LOCAL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "bindings, its section index is"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SHN_ABS ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and it precedes the other"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " STB_LOCAL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "symbols of the file, if it is present."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " STT_LOPROC \", \" STT_HIPROC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Values in the inclusive range"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " [ STT_LOPROC \", \" STT_HIPROC ]"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are reserved for processor-specific semantics."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " STB_LOCAL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Local symbols are not visible outside the object file containing their"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "definition."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Local symbols of the same name may exist in multiple files"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "without interfering with each other."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " STB_GLOBAL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Global symbols are visible to all object files being combined."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "One file's"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "definition of a global symbol will satisfy another file's undefined"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "reference to the same symbol."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " STB_WEAK"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Weak symbols resemble global symbols, but their definitions have lower"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "precedence."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " STB_LOPROC \", \" STB_HIPROC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Values in the inclusive range"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " [ STB_LOPROC \", \" STB_HIPROC ]"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are reserved for processor-specific semantics."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RE",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "There are macros for packing and unpacking the binding and type fields:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RS",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\n"
        },
        {
          "type": "TEXT",
          "content": "[l1_indent]"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ELF32_ST_BIND( "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Iinfo"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P ) \", \" ELF64_ST_BIND( "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Iinfo"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Extract a binding from an"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " st_info"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "value."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ELF32_ST_TYPE( "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Iinfo ) \", \" ELF64_ST_TYPE( "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Iinfo"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Extract a type from an"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " st_info"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "value."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ELF32_ST_INFO( "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Ibind"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P \", \" "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Itype"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P ) \", \" "
        },
        {
          "type": "ESCAPE",
          "content": "\\"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ELF64_ST_INFO( "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Ibind"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P \", \" "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Itype"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Convert a binding and a type into an"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " st_info"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "value."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RE",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " st_other"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This member defines the symbol visibility."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RS",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\n"
        },
        {
          "type": "TEXT",
          "content": "[l1_indent]"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 16"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PD",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 0"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " STV_DEFAULT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Default symbol visibility rules."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Global and weak symbols are available to other modules;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "references in the local module can be interposed"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "by definitions in other modules."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " STV_INTERNAL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Processor-specific hidden class."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " STV_HIDDEN"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Symbol is unavailable to other modules;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "references in the local module always resolve to the local symbol"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(i.e., the symbol can't be interposed by definitions in other modules)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " STV_PROTECTED"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Symbol is available to other modules,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "but references in the local module always resolve to the local symbol."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PD",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "There are macros for extracting the visibility type:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ELF32_ST_VISIBILITY (other)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ELF64_ST_VISIBILITY (other)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RE",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " st_shndx"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Every symbol table entry is"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "\"defined\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in relation to some section."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This member holds the relevant section"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "header table index."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Relocation entries (Rel & Rela)"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Relocation is the process of connecting symbolic references with"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "symbolic definitions."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Relocatable files must have information that"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "describes how to modify their section contents, thus allowing executable"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and shared object files to hold the right information for a process's"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "program image."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Relocation entries are these data."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Relocation structures that do not need an addend:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "typedef struct {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    Elf32_Addr r_offset;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint32_t   r_info;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "} Elf32_Rel;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "typedef struct {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    Elf64_Addr r_offset;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint64_t   r_info;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "} Elf64_Rel;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Relocation structures that need an addend:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "typedef struct {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    Elf32_Addr r_offset;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint32_t   r_info;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    int32_t    r_addend;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "} Elf32_Rela;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "typedef struct {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    Elf64_Addr r_offset;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    uint64_t   r_info;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    int64_t    r_addend;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "} Elf64_Rela;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\n"
        },
        {
          "type": "TEXT",
          "content": "[l1_indent]"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " r_offset"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This member gives the location at which to apply the relocation action."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For a relocatable file, the value is the byte offset from the beginning"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "of the section to the storage unit affected by the relocation."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For an"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "executable file or shared object, the value is the virtual address of"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the storage unit affected by the relocation."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " r_info"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This member gives both the symbol table index with respect to which the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "relocation must be made and the type of relocation to apply."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Relocation"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "types are processor-specific."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "When the text refers to a relocation"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "entry's relocation type or symbol table index, it means the result of"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "applying"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ELF[32|64]_R_TYPE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ELF[32|64]_R_SYM ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "respectively, to the entry's"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " r_info"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "member."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " r_addend"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This member specifies a constant addend used to compute the value to be"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "stored into the relocatable field."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Dynamic tags (Dyn)"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " .dynamic"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "section contains a series of structures that hold relevant"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "dynamic linking information."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " d_tag"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "member controls the interpretation"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " d_un ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "typedef struct {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    Elf32_Sword    d_tag;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    union {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        Elf32_Word d_val;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        Elf32_Addr d_ptr;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    } d_un;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "} Elf32_Dyn;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "extern Elf32_Dyn _DYNAMIC[];"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "typedef struct {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    Elf64_Sxword    d_tag;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    union {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        Elf64_Xword d_val;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        Elf64_Addr  d_ptr;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    } d_un;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "} Elf64_Dyn;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "extern Elf64_Dyn _DYNAMIC[];"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\n"
        },
        {
          "type": "TEXT",
          "content": "[l1_indent]"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " d_tag"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This member may have any of the following values:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RS",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\n"
        },
        {
          "type": "TEXT",
          "content": "[l1_indent]"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 12"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " DT_NULL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Marks end of dynamic section"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " DT_NEEDED"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "String table offset to name of a needed library"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " DT_PLTRELSZ"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Size in bytes of PLT relocation entries"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " DT_PLTGOT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Address of PLT and/or GOT"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " DT_HASH"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Address of symbol hash table"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " DT_STRTAB"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Address of string table"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " DT_SYMTAB"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Address of symbol table"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " DT_RELA"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Address of Rela relocation table"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " DT_RELASZ"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Size in bytes of the Rela relocation table"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " DT_RELAENT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Size in bytes of a Rela relocation table entry"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " DT_STRSZ"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Size in bytes of string table"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " DT_SYMENT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Size in bytes of a symbol table entry"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " DT_INIT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Address of the initialization function"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " DT_FINI"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Address of the termination function"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " DT_SONAME"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "String table offset to name of shared object"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " DT_RPATH"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "String table offset to library search path (deprecated)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " DT_SYMBOLIC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Alert linker to search this shared object before the executable for symbols"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " DT_REL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Address of Rel relocation table"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " DT_RELSZ"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Size in bytes of Rel relocation table"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " DT_RELENT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Size in bytes of a Rel table entry"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " DT_PLTREL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Type of relocation entry to which the PLT refers (Rela or Rel)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " DT_DEBUG"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Undefined use for debugging"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " DT_TEXTREL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Absence of this entry indicates that no relocation entries should"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "apply to a nonwritable segment"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " DT_JMPREL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Address of relocation entries associated solely with the PLT"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " DT_BIND_NOW"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Instruct dynamic linker to process all relocations before"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "transferring control to the executable"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " DT_RUNPATH"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "String table offset to library search path"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " DT_LOPROC \", \" DT_HIPROC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Values in the inclusive range"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " [ DT_LOPROC \", \" DT_HIPROC ]"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are reserved for processor-specific semantics"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RE",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " d_val"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This member represents integer values with various interpretations."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " d_ptr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This member represents program virtual addresses."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "When interpreting"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "these addresses, the actual address should be computed based on the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "original file value and memory base address."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Files do not contain"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "relocation entries to fixup these addresses."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " _DYNAMIC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Array containing all the dynamic structures in the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " .dynamic"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "section."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This is automatically populated by the linker."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" GABI ELF Reference for Note Sections:"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" http://www.sco.com/developers/gabi/latest/ch5.pheader.html#note_section"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Note that it implies the sizes and alignments of notes depend on the ELF"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" size (e.g. 32-bit ELFs have three 4-byte words and use 4-byte alignment"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" while 64-bit ELFs use 8-byte words & alignment), but that is not the case"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" in the real world.  Notes always have three 4-byte words as can be seen"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" in the source links below (remember that Elf64_Word is a 32-bit quantity)."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" glibc:    https://sourceware.org/git/?p=glibc.git;a=blob;f=elf/elf.h;h=9e59b3275917549af0cebe1f2de9ded3b7b10bf2#l1173"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" binutils: https://sourceware.org/git/?p=binutils-gdb.git;a=blob;f=binutils/readelf.c;h=274ddd17266aef6e4ad1f67af8a13a21500ff2af#l15943"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Linux:    https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/include/uapi/linux/elf.h?h=v4.8#n422"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Solaris:  https://docs.oracle.com/cd/E23824_01/html/819-0690/chapter6-18048.html"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" FreeBSD:  https://svnweb.freebsd.org/base/head/sys/sys/elf_common.h?revision=303677&view=markup#l33"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" NetBSD:   https://www.netbsd.org/docs/kernel/elf-notes.html"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" OpenBSD:  https://github.com/openbsd/src/blob/master/sys/sys/exec_elf.h#L533"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Notes (Nhdr)"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "ELF notes allow for appending arbitrary information for the system to use."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "They are largely used by core files"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( e_type"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ET_CORE ),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "but many projects define their own set of extensions."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For example,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the GNU tool chain uses ELF notes to pass information from"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the linker to the C library."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Note sections contain a series of notes (see the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " struct"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "definitions below)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Each note is followed by the name field (whose length is defined in"
        }
      ],
      [
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "In_namesz"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "R) and then by the descriptor field (whose length is defined in"
        }
      ],
      [
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "In_descsz"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "R) and whose starting address has a 4 byte alignment."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Neither field is defined in the note struct due to their arbitrary lengths."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "An example for parsing out two consecutive notes should clarify their layout"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in memory:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "void *memory, *name, *desc;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Elf64_Nhdr *note, *next_note;"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "/* The buffer is pointing to the start of the section/segment */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "note = memory;"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "/* If the name is defined, it follows the note */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "name = note->n_namesz == 0 ? NULL : memory + sizeof(*note);"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "/* If the descriptor is defined, it follows the name"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "   (with alignment) */"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "desc = note->n_descsz == 0 ? NULL :"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "       memory + sizeof(*note) + ALIGN_UP(note->n_namesz, 4);"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "/* The next note follows both (with alignment) */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "next_note = memory + sizeof(*note) +"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                     ALIGN_UP(note->n_namesz, 4) +"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                     ALIGN_UP(note->n_descsz, 4);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Keep in mind that the interpretation of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " n_type"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "depends on the namespace defined by the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " n_namesz"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "field."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " n_namesz"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "field is not set (e.g., is 0), then there are two sets of notes:"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "one for core files and one for all other ELF types."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the namespace is unknown, then tools will usually fallback to these sets"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "of notes as well."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "typedef struct {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    Elf32_Word n_namesz;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    Elf32_Word n_descsz;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    Elf32_Word n_type;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "} Elf32_Nhdr;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "typedef struct {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    Elf64_Word n_namesz;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    Elf64_Word n_descsz;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    Elf64_Word n_type;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "} Elf64_Nhdr;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\n"
        },
        {
          "type": "TEXT",
          "content": "[l1_indent]"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " n_namesz"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The length of the name field in bytes."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The contents will immediately follow this note in memory."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The name is null terminated."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For example, if the name is \"GNU\", then"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " n_namesz"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "will be set to 4."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " n_descsz"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The length of the descriptor field in bytes."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The contents will immediately follow the name field in memory."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " n_type"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Depending on the value of the name field, this member may have any of the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "following values:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RS",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\n"
        },
        {
          "type": "TEXT",
          "content": "[l1_indent]"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 5"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " Core files (e_type = ET_CORE)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Notes used by all core files."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "These are highly operating system or architecture specific and often require"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "close coordination with kernels, C libraries, and debuggers."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "These are used when the namespace is the default (i.e.,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " n_namesz"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "will be set to 0), or a fallback when the namespace is unknown."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RS",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 21"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PD",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 0"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_PRSTATUS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "prstatus struct"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_FPREGSET"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "fpregset struct"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_PRPSINFO"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "prpsinfo struct"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_PRXREG"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "prxregset struct"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_TASKSTRUCT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "task structure"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_PLATFORM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "String from sysinfo(SI_PLATFORM)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_AUXV"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "auxv array"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_GWINDOWS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "gwindows struct"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_ASRS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "asrset struct"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_PSTATUS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "pstatus struct"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_PSINFO"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "psinfo struct"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_PRCRED"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "prcred struct"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_UTSNAME"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "utsname struct"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_LWPSTATUS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "lwpstatus struct"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_LWPSINFO"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "lwpinfo struct"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_PRFPXREG"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "fprxregset struct"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_SIGINFO"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "siginfo_t (size might increase over time)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_FILE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Contains information about mapped files"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_PRXFPREG"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "user_fxsr_struct"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_PPC_VMX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "PowerPC Altivec/VMX registers"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_PPC_SPE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "PowerPC SPE/EVR registers"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_PPC_VSX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "PowerPC VSX registers"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_386_TLS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "i386 TLS slots (struct user_desc)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_386_IOPERM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "x86 io permission bitmap (1=deny)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_X86_XSTATE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "x86 extended state using xsave"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_S390_HIGH_GPRS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "s390 upper register halves"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_S390_TIMER"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "s390 timer register"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_S390_TODCMP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "s390 time-of-day (TOD) clock comparator register"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_S390_TODPREG"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "s390 time-of-day (TOD) programmable register"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_S390_CTRS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "s390 control registers"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_S390_PREFIX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "s390 prefix register"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_S390_LAST_BREAK"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "s390 breaking event address"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_S390_SYSTEM_CALL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "s390 system call restart data"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_S390_TDB"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "s390 transaction diagnostic block"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_ARM_VFP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ARM VFP/NEON registers"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_ARM_TLS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ARM TLS register"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_ARM_HW_BREAK"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ARM hardware breakpoint registers"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_ARM_HW_WATCH"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ARM hardware watchpoint registers"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_ARM_SYSTEM_CALL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ARM system call number"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PD",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RE",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " n_name = GNU"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Extensions used by the GNU tool chain."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RS",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_GNU_ABI_TAG"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Operating system (OS) ABI information."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The desc field will be 4 words:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PD",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 0"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RS",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\(bu"
        },
        {
          "type": "TEXT",
          "content": " 2"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "word 0: OS descriptor"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "("
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "BELF_NOTE_OS_LINUX"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "R, "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "BELF_NOTE_OS_GNU"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "R, and so on)`"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\(bu"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "word 1: major version of the ABI"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\(bu"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "word 2: minor version of the ABI"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\(bu"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "word 3: subminor version of the ABI"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RE",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PD",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_GNU_HWCAP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Synthetic hwcap information."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The desc field begins with two words:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PD",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 0"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RS",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\(bu"
        },
        {
          "type": "TEXT",
          "content": " 2"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "word 0: number of entries"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\(bu"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "word 1: bit mask of enabled entries"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RE",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PD",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Then follow variable-length entries, one byte followed by a null-terminated"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "hwcap name string."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The byte gives the bit number to test if enabled, (1U << bit) & bit mask."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_GNU_BUILD_ID"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Unique build ID as generated by the GNU"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ld (1)"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "build"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "id"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "option."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The desc consists of any nonzero number of bytes."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_GNU_GOLD_VERSION"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The desc contains the GNU Gold linker version used."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RE",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " Default/unknown namespace (e_type != ET_CORE)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "These are used when the namespace is the default (i.e.,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " n_namesz"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "will be set to 0), or a fallback when the namespace is unknown."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RS",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 21"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PD",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 0"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_VERSION"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A version string of some sort."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " NT_ARCH"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Architecture information."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PD",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RE",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RE",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " NOTES"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" OpenBSD"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" ELF support first appeared in"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" OpenBSD 1.2,"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" although not all supported platforms use it as the native"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" binary file format."
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "ELF first appeared in"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "System V."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The ELF format is an adopted standard."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The extensions for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " e_phnum ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " e_shnum"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " e_strndx"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "respectively are"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Linux extensions."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Sun, BSD and AMD64 also support them; for further information,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "look under SEE ALSO."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .SH AUTHORS"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" The original version of this manual page was written by"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .An Jeroen Ruigrok van der Werven"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .Aq asmodai@FreeBSD.org"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" with inspiration from BSDi's"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .Bsx"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .Nm elf"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" man page."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " SEE ALSO"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " as (1),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " elfedit (1),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " gdb (1),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ld (1),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " nm (1),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " objdump (1),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " patchelf (1),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " readelf (1),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " size (1),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " strings (1),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " strip (1),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " execve (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " dl_iterate_phdr (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " core (5)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Hewlett-Packard,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"Elf-64 Object File Format\" ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Santa Cruz Operation,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"System V Application Binary Interface\" ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "UNIX System Laboratories,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "\"Object Files\","
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"Executable and Linking Format (ELF)\" ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Sun Microsystems,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"Linker and Libraries Guide\" ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "AMD64 ABI Draft,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"System V Application Binary Interface AMD64 Architecture Processor Supplement\" ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  }
]
