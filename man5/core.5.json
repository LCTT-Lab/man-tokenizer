[
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Copyright (c) 2006, 2008 by Michael Kerrisk <mtk.manpages@gmail.com>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" %%%LICENSE_START(VERBATIM)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Permission is granted to make and distribute verbatim copies of this"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" manual provided the copyright notice and this permission notice are"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" preserved on all copies."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Permission is granted to copy and distribute modified versions of this"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" manual under the conditions for verbatim copying, provided that the"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" entire resulting derived work is distributed under the terms of a"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" permission notice identical to this one."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Since the Linux kernel and libraries are constantly changing, this"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" manual page may be incorrect or out-of-date.  The author(s) assume no"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" responsibility for errors or omissions, or for damages resulting from"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" the use of the information contained herein.  The author(s) may not"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" have taken the same level of care in the production of this manual,"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" which is licensed free of charge, as they might when working"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" professionally."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Formatted or processed versions of this manual, if unaccompanied by"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" the source, must acknowledge the copyright and authors of this work."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" %%%LICENSE_END"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TH",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CORE 5 2017-09-15 \"Linux\" \"Linux Programmer's Manual\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " NAME"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "core "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": " core dump file"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " DESCRIPTION"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The default action of certain signals is to cause a process to terminate"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and produce a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"core dump file\" ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "a disk file containing an image of the process's memory at"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the time of termination."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This image can be used in a debugger (e.g.,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " gdb (1))"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to inspect the state of the program at the time that it terminated."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "A list of the signals which cause a process to dump core can be found in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " signal (7)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "A process can set its soft"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " RLIMIT_CORE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "resource limit to place an upper limit on the size of the core dump file"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "that will be produced if it receives a \"core dump\" signal; see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " getrlimit (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for details."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "There are various circumstances in which a core dump file is"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "not produced:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " * 3"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The process does not have permission to write the core file."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(By default, the core file is called"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " core"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " core.pid ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "where"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pid"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is the ID of the process that dumped core,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and is created in the current working directory."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "See below for details on naming.)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Writing the core file fails if the directory in which"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "it is to be created is nonwritable,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or if a file with the same name exists and"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is not writable"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or is not a regular file"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(e.g., it is a directory or a symbolic link)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "A (writable, regular) file with the same name as would be used for the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "core dump already exists, but there is more than one hard link to that"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "file."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The filesystem where the core dump file would be created is full;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or has run out of inodes; or is mounted read-only;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or the user has reached their quota for the filesystem."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The directory in which the core dump file is to be created does"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "not exist."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " RLIMIT_CORE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(core file size) or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " RLIMIT_FSIZE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(file size) resource limits for the process are set to zero; see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " getrlimit (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and the documentation of the shell's"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ulimit"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "command"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( limit"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " csh (1))."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The binary being executed by the process does not have read"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "permission enabled."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The process is executing a set-user-ID (set-group-ID) program"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "that is owned by a user (group) other than the real user (group)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ID of the process,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or the process is executing a program that has file capabilities (see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " capabilities (7))."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(However, see the description of the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " prctl (2)"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PR_SET_DUMPABLE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "operation, and the description of the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc/sys/fs/suid_dumpable"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" FIXME . Perhaps relocate discussion of /proc/sys/fs/suid_dumpable"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" and PR_SET_DUMPABLE to this page?"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "file in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " proc (5).)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc/sys/kernel/core_pattern"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is empty and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc/sys/kernel/core_uses_pid"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "contains the value 0."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(These files are described below.)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Note that if"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc/sys/kernel/core_pattern"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is empty and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc/sys/kernel/core_uses_pid"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "contains the value 1,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "core dump files will have names of the form"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " .pid ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and such files are hidden unless one uses the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ls (1)"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " -a"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "option."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "(Since Linux 3.7)"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" commit 046d662f481830e652ac34cd112249adde16452a"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The kernel was configured without the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CONFIG_COREDUMP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "option."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "In addition,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "a core dump may exclude part of the address space of the process if the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " madvise (2)"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " MADV_DONTDUMP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "flag was employed."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "On systems that employ"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " systemd (1)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "as the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " init"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "framework, core dumps may instead be placed in a location determined by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " systemd (1)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "See below for further details."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Naming of core dump files"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "By default, a core dump file is named"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " core ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "but the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc/sys/kernel/core_pattern"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "file (since Linux 2.6 and 2.4.21)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "can be set to define a template that is used to name core dump files."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The template can contain % specifiers which are substituted"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "by the following values when a core file is created:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RS",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 4"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PD",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 0"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 4"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "%%"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "a single % character"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "%c"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "core file size soft resource limit of crashing process (since Linux 2.6.24)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "%d"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Added in git commit 12a2b4b2241e318b4f6df31228e4272d2c2968a1"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "dump mode"
        },
        {
          "type": "ESCAPE",
          "content": "\\(em"
        },
        {
          "type": "TEXT",
          "content": "same as value returned by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " prctl (2)"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PR_GET_DUMPABLE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(since Linux 3.7)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "%e"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "executable filename (without path prefix)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "%E"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "pathname of executable,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with slashes ("
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": "/"
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": ") replaced by exclamation marks ("
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": "!"
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": ")"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(since Linux 3.0)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "%g"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(numeric) real GID of dumped process"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "%h"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "hostname (same as "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Inodename"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P returned by "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Buname"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P(2))"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "%i"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "TID of thread that triggered core dump,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "as seen in the PID namespace in which the thread resides"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" commit b03023ecbdb76c1dec86b41ed80b123c22783220"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "(since Linux 3.18)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "%I"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "TID of thread that triggered core dump, as seen in the initial PID namespace"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" commit b03023ecbdb76c1dec86b41ed80b123c22783220"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "(since Linux 3.18)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "%p"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "PID of dumped process,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "as seen in the PID namespace in which the process resides"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "%P"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Added in git commit 65aafb1e7484b7434a0c1d4c593191ebe5776a2f"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "PID of dumped process, as seen in the initial PID namespace"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(since Linux 3.12)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "%s"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "number of signal causing dump"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "%t"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "time of dump, expressed as seconds since the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Epoch, 1970-01-01 00:00:00 +0000 (UTC)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "%u"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(numeric) real UID of dumped process"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PD",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RE",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "A single % at the end of the template is dropped from the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "core filename, as is the combination of a % followed by any"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "character other than those listed above."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "All other characters in the template become a literal"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "part of the core filename."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The template may include "
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": "/"
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": " characters, which are interpreted"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "as delimiters for directory names."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The maximum size of the resulting core filename is 128 bytes (64 bytes"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in kernels before 2.6.19)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The default value in this file is \"core\"."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For backward compatibility, if"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc/sys/kernel/core_pattern"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "does not include"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " %p"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc/sys/kernel/core_uses_pid"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(see below)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is nonzero, then .PID will be appended to the core filename."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Paths are interpreted according to the settings that are active for the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "crashing process."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "That means the crashing process's mount namespace (see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " mount_namespaces (7)),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "its current working directory (found via"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " getcwd (2)),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and its root directory (see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " chroot (2))."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Since version 2.4, Linux has also provided"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "a more primitive method of controlling"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the name of the core dump file."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc/sys/kernel/core_uses_pid"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "file contains the value 0, then a core dump file is simply named"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " core ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If this file contains a nonzero value, then the core dump file includes"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the process ID in a name of the form"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " core.PID ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Since Linux 3.6,"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" 9520628e8ceb69fa9a4aee6b57f22675d9e1b709"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "if"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc/sys/fs/suid_dumpable"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is set to 2 (\"suidsafe\"), the pattern must be either an absolute pathname"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(starting with a leading "
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": "/"
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": " character) or a pipe, as defined below."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Piping core dumps to a program"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Since kernel 2.6.19, Linux supports an alternate syntax for the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc/sys/kernel/core_pattern"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "file."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the first character of this file is a pipe symbol ("
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "B|"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "then the remainder of the line is interpreted as the command-line for"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "a user-space program (or script) that is to be executed."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Instead of being written to a disk file, the core dump is given as"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "standard input to the program."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Note the following points:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " * 3"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The program must be specified using an absolute pathname (or a"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "pathname relative to the root directory, "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "I/"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and must immediately follow the '|' character."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The command-line arguments can include any of"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the % specifiers listed above."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For example, to pass the PID of the process that is being dumped, specify"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " %p"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in an argument."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The process created to run the program runs as user and group"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " root ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Running as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " root"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "does not confer any exceptional security bypasses."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Namely, LSMs (e.g., SELinux) are still active and may prevent the handler"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "from accessing details about the crashed process via"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc/[pid] ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The program pathname is interpreted with respect to the initial mount namespace"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "as it is always executed there."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "It is not affected by the settings"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(e.g., root directory, mount namespace, current working directory)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "of the crashing process."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The process runs in the initial namespaces"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(PID, mount, user, and so on)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and not in the namespaces of the crashing process."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "One can utilize specifiers such as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " %P"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to find the right"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc/[pid]"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "directory and probe/enter the crashing process's namespaces if needed."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The process starts with its current working directory"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "as the root directory."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If desired, it is possible change to the working directory of"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the dumping process by employing the value provided by the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " %P"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "specifier to change to the location of the dumping process via"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc/[pid]/cwd ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Command-line arguments can be supplied to the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "program (since Linux 2.6.24),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "delimited by white space (up to a total line length of 128 bytes)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " RLIMIT_CORE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "limit is not enforced for core dumps that are piped to a program"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "via this mechanism."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " /proc/sys/kernel/core_pipe_limit"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "When collecting core dumps via a pipe to a user-space program,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "it can be useful for the collecting program to gather data about"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the crashing process from that process's"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc/[pid]"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "directory."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "In order to do this safely,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the kernel must wait for the program collecting the core dump to exit,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "so as not to remove the crashing process's"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc/[pid]"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "files prematurely."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This in turn creates the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "possibility that a misbehaving collecting program can block"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the reaping of a crashed process by simply never exiting."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Since Linux 2.6.32,"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" commit a293980c2e261bd5b0d2a77340dd04f684caff58"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc/sys/kernel/core_pipe_limit"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "can be used to defend against this possibility."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The value in this file defines how many concurrent crashing"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "processes may be piped to user-space programs in parallel."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If this value is exceeded, then those crashing processes above this value"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are noted in the kernel log and their core dumps are skipped."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "A value of 0 in this file is special."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "It indicates that unlimited processes may be captured in parallel,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "but that no waiting will take place (i.e., the collecting"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "program is not guaranteed access to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc/<crashing-PID> )."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The default value for this file is 0."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Controlling which mappings are written to the core dump"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Since kernel 2.6.23, the Linux-specific"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc/[pid]/coredump_filter"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "file can be used to control which memory segments are written to the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "core dump file in the event that a core dump is performed for the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "process with the corresponding process ID."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The value in the file is a bit mask of memory mapping types (see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " mmap (2))."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If a bit is set in the mask, then memory mappings of the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "corresponding type are dumped; otherwise they are not dumped."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The bits in this file have the following meanings:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PD",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 0"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RS",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 4"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "bit 0"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Dump anonymous private mappings."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "bit 1"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Dump anonymous shared mappings."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "bit 2"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Dump file-backed private mappings."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "bit 3"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Dump file-backed shared mappings."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" file-backed shared mappings of course also update the underlying"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" mapped file."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "bit 4 (since Linux 2.6.24)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Dump ELF headers."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "bit 5 (since Linux 2.6.28)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Dump private huge pages."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "bit 6 (since Linux 2.6.28)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Dump shared huge pages."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "bit 7 (since Linux 4.4)"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" commit ab27a8d04b32b6ee8c30c14c4afd1058e8addc82"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Dump private DAX pages."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "bit 8 (since Linux 4.4)"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" commit ab27a8d04b32b6ee8c30c14c4afd1058e8addc82"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Dump shared DAX pages."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RE",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PD",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "By default, the following bits are set: 0, 1, 4 (if the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CONFIG_CORE_DUMP_DEFAULT_ELF_HEADERS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "kernel configuration option is enabled), and 5."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This default can be modified at boot time using the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " coredump_filter"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "boot option."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The value of this file is displayed in hexadecimal."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(The default value is thus displayed as 33.)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Memory-mapped I/O pages such as frame buffer are never dumped, and"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "virtual DSO"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( vdso (7))"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "pages are always dumped, regardless of the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " coredump_filter"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "value."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "A child process created via"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " fork (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "inherits its parent's"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " coredump_filter"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "value;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " coredump_filter"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "value is preserved across an"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " execve (2)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "It can be useful to set"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " coredump_filter"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in the parent shell before running a program, for example:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"$\" \" echo 0x7 > /proc/self/coredump_filter\""
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"$\" \" ./some_program\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "This file is provided only if the kernel was built with the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CONFIG_ELF_CORE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "configuration option."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Core dumps and systemd"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "On systems using the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " systemd (1)"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " init"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "framework, core dumps may be placed in a location determined by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " systemd (1)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "To do this,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " systemd (1)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "employs the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " core_pattern"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "feature that allows piping core dumps to a program."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "One can verify this by checking whether core dumps are being piped to the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " systemd-coredump (8)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "program:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "$ "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Bcat /proc/sys/kernel/core_pattern"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "|/usr/lib/systemd/systemd-coredump %P %u %g %s %t %c %e"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "In this case, core dumps will be placed in the location configured for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " systemd-coredump (8),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "typically as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " lz4 (1)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "compressed files in the directory"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /var/lib/systemd/coredump/ ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "One can list the core dumps that have been recorded by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " systemd-coredump (8)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " coredumpctl (1):"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +2n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "$ "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Bcoredumpctl list | tail -5"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Wed 2017-10-11 22:25:30 CEST  2748 1000 1000 3 present  /usr/bin/sleep"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Thu 2017-10-12 06:29:10 CEST  2716 1000 1000 3 present  /usr/bin/sleep"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Thu 2017-10-12 06:30:50 CEST  2767 1000 1000 3 present  /usr/bin/sleep"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Thu 2017-10-12 06:37:40 CEST  2918 1000 1000 3 present  /usr/bin/cat"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Thu 2017-10-12 08:13:07 CEST  2955 1000 1000 3 present  /usr/bin/cat"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The information shown for each core dump includes the date and time"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "of the dump, the PID, UID, and GID  of the dumping process,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the signal number that caused the core dump,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and the pathname of the executable that was being run by the dumped process."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Various options to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " coredumpctl (1)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "allow a specified coredump file to be pulled from the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " systemd (1)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "location into a specified file."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For example, to extract the core dump for PID 2955 shown above to a file named"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " core"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in the current directory, one could use:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "$ "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Bcoredumpctl dump 2955 -o core"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "For more extensive details, see the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " coredumpctl (1)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "manual page."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "To disable the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " systemd (1)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "mechanism that archives core dumps, restoring to something more like"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "traditional Linux behavior, one can set an override for the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " systemd (1)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "mechanism, using something like:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +2n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "# echo \"kernel.core_pattern=core.%p\" > /etc/sysctl.d/50-coredump.conf"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "# /lib/systemd/systemd-sysctl"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " NOTES"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " gdb (1)"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " gcore"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "command can be used to obtain a core dump of a running process."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "In Linux versions up to and including 2.6.27,"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Changed with commit 6409324b385f3f63a03645b4422e3be67348d922"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "if a multithreaded process (or, more precisely, a process that"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "shares its memory with another process by being created with the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CLONE_VM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "flag of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " clone (2))"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "dumps core, then the process ID is always appended to the core filename,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "unless the process ID was already included elsewhere in the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "filename via a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " %p"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "specification in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc/sys/kernel/core_pattern ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(This is primarily useful when employing the obsolete"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "LinuxThreads implementation,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "where each thread of a process has a different PID.)"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Always including the PID in the name of the core file made"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" sense for LinuxThreads, where each thread had a unique PID,"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" but doesn't seem to serve any purpose with NPTL, where all the"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" threads in a process share the same PID (as POSIX.1 requires)."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Probably the behavior is maintained so that applications using"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" LinuxThreads continue appending the PID (the kernel has no easy"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" way of telling which threading implementation the user-space"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" application is using). -- mtk, April 2006"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " EXAMPLE"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The program below can be used to demonstrate the use of the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "pipe syntax in the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc/sys/kernel/core_pattern"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "file."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The following shell session demonstrates the use of this program"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(compiled to create an executable named"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " core_pattern_pipe_test ):"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"$\" \" cc "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "o core_pattern_pipe_test core_pattern_pipe_test.c\""
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"$\" \" su\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Password:"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"#\" \" echo "
        },
        {
          "type": "ESCAPE",
          "content": "\\(dq"
        },
        {
          "type": "TEXT",
          "content": "|$PWD/core_pattern_pipe_test %p "
        },
        {
          "type": "ESCAPE",
          "content": "\\"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "UID=%u GID=%g sig=%s"
        },
        {
          "type": "ESCAPE",
          "content": "\\(dq"
        },
        {
          "type": "TEXT",
          "content": " > "
        },
        {
          "type": "ESCAPE",
          "content": "\\e"
        },
        {
          "type": "TEXT",
          "content": "\""
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"    /proc/sys/kernel/core_pattern\""
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"#\" \" exit\""
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"$\" \" sleep 100\""
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"^"
        },
        {
          "type": "ESCAPE",
          "content": "\\e"
        },
        {
          "type": "TEXT",
          "content": "\" \"                     # type control-backslash\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Quit (core dumped)"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"$\" \" cat core.info\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "argc=5"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "argc[0]=</home/mtk/core_pattern_pipe_test>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "argc[1]=<20575>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "argc[2]=<UID=1000>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "argc[3]=<GID=100>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "argc[4]=<sig=3>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Total bytes in core dump: 282624"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Program source"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "ESCAPE",
          "content": "\\&"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "/* core_pattern_pipe_test.c */"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "#define _GNU_SOURCE"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#include <sys/stat.h>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#include <fcntl.h>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#include <limits.h>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#include <stdio.h>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#include <stdlib.h>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#include <unistd.h>"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "#define BUF_SIZE 1024"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "int"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "main(int argc, char *argv[])"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "{"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    int tot, j;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    ssize_t nread;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    char buf[BUF_SIZE];"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    FILE *fp;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    char cwd[PATH_MAX];"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    /* Change our current working directory to that of the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "       crashing process */"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    snprintf(cwd, PATH_MAX, \"/proc/%s/cwd\", argv[1]);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    chdir(cwd);"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    /* Write output to file \"core.info\" in that directory */"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    fp = fopen(\"core.info\", \"w+\");"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    if (fp == NULL)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        exit(EXIT_FAILURE);"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    /* Display command"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "line arguments given to core_pattern"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "       pipe program */"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    fprintf(fp, \"argc=%d"
        },
        {
          "type": "ESCAPE",
          "content": "\\\\"
        },
        {
          "type": "TEXT",
          "content": "n\", argc);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    for (j = 0; j < argc; j++)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        fprintf(fp, \"argc[%d]=<%s>"
        },
        {
          "type": "ESCAPE",
          "content": "\\\\"
        },
        {
          "type": "TEXT",
          "content": "n\", j, argv[j]);"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    /* Count bytes in standard input (the core dump) */"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    tot = 0;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    while ((nread = read(STDIN_FILENO, buf, BUF_SIZE)) > 0)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        tot += nread;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    fprintf(fp, \"Total bytes in core dump: %d"
        },
        {
          "type": "ESCAPE",
          "content": "\\\\"
        },
        {
          "type": "TEXT",
          "content": "n\", tot);"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    fclose(fp);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    exit(EXIT_SUCCESS);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "}"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " SEE ALSO"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " bash (1),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " coredumpctl (1),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " gdb (1),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " getrlimit (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " mmap (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " prctl (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sigaction (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " elf (5),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " proc (5),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthreads (7),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " signal (7),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " systemd-coredump (8)"
        }
      ]
    ]
  }
]
