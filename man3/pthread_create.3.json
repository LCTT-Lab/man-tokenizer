[
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Copyright (c) 2008 Linux Foundation, written by Michael Kerrisk"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     <mtk.manpages@gmail.com>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" %%%LICENSE_START(VERBATIM)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Permission is granted to make and distribute verbatim copies of this"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" manual provided the copyright notice and this permission notice are"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" preserved on all copies."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Permission is granted to copy and distribute modified versions of this"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" manual under the conditions for verbatim copying, provided that the"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" entire resulting derived work is distributed under the terms of a"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" permission notice identical to this one."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Since the Linux kernel and libraries are constantly changing, this"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" manual page may be incorrect or out-of-date.  The author(s) assume no"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" responsibility for errors or omissions, or for damages resulting from"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" the use of the information contained herein.  The author(s) may not"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" have taken the same level of care in the production of this manual,"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" which is licensed free of charge, as they might when working"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" professionally."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Formatted or processed versions of this manual, if unaccompanied by"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" the source, must acknowledge the copyright and authors of this work."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" %%%LICENSE_END"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TH",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PTHREAD_CREATE 3 2018-04-30 \"Linux\" \"Linux Programmer's Manual\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " NAME"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "pthread_create "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": " create a new thread"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " SYNOPSIS"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".nf",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " #include <pthread.h>"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".BI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"int pthread_create(pthread_t *\" thread \", const pthread_attr_t *\" attr ,"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".BI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"                   void *(*\" start_routine \") (void *), void *\" arg );"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".fi",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Compile and link with "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "I"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "pthread"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " DESCRIPTION"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthread_create ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "function starts a new thread in the calling process."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The new thread starts execution by invoking"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " start_routine ();"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " arg"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is passed as the sole argument of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " start_routine ()."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The new thread terminates in one of the following ways:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " * 2"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "It calls"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthread_exit (3),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "specifying an exit status value that is available to another thread"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in the same process that calls"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthread_join (3)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "It returns from"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " start_routine ()."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This is equivalent to calling"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthread_exit (3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with the value supplied in the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " return"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "statement."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "It is canceled (see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthread_cancel (3))."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Any of the threads in the process calls"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " exit (3),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or the main thread performs a return from"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " main ()."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This causes the termination of all threads in the process."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " attr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "argument points to a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthread_attr_t"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "structure whose contents are used at thread creation time to"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "determine attributes for the new thread;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "this structure is initialized using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthread_attr_init (3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and related functions."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " attr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is NULL,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "then the thread is created with default attributes."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Before returning, a successful call to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthread_create ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "stores the ID of the new thread in the buffer pointed to by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " thread ;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "this identifier is used to refer to the thread"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in subsequent calls to other pthreads functions."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The new thread inherits a copy of the creating thread's signal mask"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( pthread_sigmask (3))."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The set of pending signals for the new thread is empty"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( sigpending (2))."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The new thread does not inherit the creating thread's"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "alternate signal stack"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( sigaltstack (2))."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The new thread inherits the calling thread's floating-point environment"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( fenv (3))."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The initial value of the new thread's CPU-time clock is 0"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthread_getcpuclockid (3))."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" CLOCK_THREAD_CPUTIME_ID in clock_gettime(2)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Linux-specific details"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The new thread inherits copies of the calling thread's capability sets"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " capabilities (7))"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and CPU affinity mask (see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sched_setaffinity (2))."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " RETURN VALUE"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "On success,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthread_create ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "returns 0;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "on error, it returns an error number, and the contents of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " *thread"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are undefined."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " ERRORS"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EAGAIN"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Insufficient resources to create another thread."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EAGAIN"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" NOTE! The following should match the description in fork(2)"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "A system-imposed limit on the number of threads was encountered."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "There are a number of limits that may trigger this error: the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " RLIMIT_NPROC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "soft resource limit (set via"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " setrlimit (2)),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "which limits the number of processes and threads for a real user ID,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "was reached;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the kernel's system-wide limit on the number of processes and threads,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc/sys/kernel/threads-max ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "was reached (see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " proc (5));"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or the maximum number of PIDs,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc/sys/kernel/pid_max ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "was reached (see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " proc (5))."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EINVAL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Invalid settings in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " attr ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" FIXME . Test the following"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " EPERM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "No permission to set the scheduling policy and parameters specified in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " attr ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " ATTRIBUTES"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "For an explanation of the terms used in this section, see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " attributes (7)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TS",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "allbox;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "lb lb lb"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "l l l."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Interface\tAttribute\tValue"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "T{"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthread_create ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "T}\tThread safety\tMT-Safe"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TE",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".sp",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 1"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " CONFORMING TO"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "POSIX.1-2001, POSIX.1-2008."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " NOTES"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "See"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthread_self (3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for further information on the thread ID returned in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " *thread"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthread_create ()."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Unless real-time scheduling policies are being employed,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "after a call to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthread_create (),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "it is indeterminate which thread"
        },
        {
          "type": "ESCAPE",
          "content": "\\(em"
        },
        {
          "type": "TEXT",
          "content": "the caller or the new thread"
        },
        {
          "type": "ESCAPE",
          "content": "\\(em"
        },
        {
          "type": "TEXT",
          "content": "will"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "next execute."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "A thread may either be"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " joinable"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " detached ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If a thread is joinable, then another thread can call"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthread_join (3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to wait for the thread to terminate and fetch its exit status."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Only when a terminated joinable thread has been joined are"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the last of its resources released back to the system."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "When a detached thread terminates,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "its resources are automatically released back to the system:"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "it is not possible to join with the thread in order to obtain"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "its exit status."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Making a thread detached is useful for some types of daemon threads"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "whose exit status the application does not need to care about."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "By default, a new thread is created in a joinable state, unless"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " attr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "was set to create the thread in a detached state (using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthread_attr_setdetachstate (3))."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Under the NPTL threading implementation, if the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " RLIMIT_STACK"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "soft resource limit"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"at the time the program started\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "has any value other than \"unlimited\","
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "then it determines the default stack size of new threads."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthread_attr_setstacksize (3),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the stack size attribute can be explicitly set in the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " attr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "argument used to create a thread,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in order to obtain a stack size other than the default."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " RLIMIT_STACK"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "resource limit is set to \"unlimited\","
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "a per-architecture value is used for the stack size."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Here is the value for a few architectures:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RS",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TS",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "allbox;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "lb lb"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "l r."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Architecture\tDefault stack size"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "i386\t2 MB"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "IA-64\t32 MB"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "PowerPC\t4 MB"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "S/390\t2 MB"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Sparc-32\t2 MB"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Sparc-64\t4 MB"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "x86_64\t2 MB"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TE",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RE",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " BUGS"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "In the obsolete LinuxThreads implementation,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "each of the threads in a process has a different process ID."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This is in violation of the POSIX threads specification,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and is the source of many other nonconformances to the standard; see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthreads (7)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " EXAMPLE"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The program below demonstrates the use of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthread_create (),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "as well as a number of other functions in the pthreads API."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "In the following run,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "on a system providing the NPTL threading implementation,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the stack size defaults to the value given by the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "\"stack size\" resource limit:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"$\" \" ulimit "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "s\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "8192            # The stack size limit is 8 MB (0x800000 bytes)"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"$\" \" ./a.out hola salut servus\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Thread 1: top of stack near 0xb7dd03b8; argv_string=hola"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Thread 2: top of stack near 0xb75cf3b8; argv_string=salut"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Thread 3: top of stack near 0xb6dce3b8; argv_string=servus"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Joined with thread 1; returned value was HOLA"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Joined with thread 2; returned value was SALUT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Joined with thread 3; returned value was SERVUS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "In the next run, the program explicitly sets a stack size of 1"
        },
        {
          "type": "ESCAPE",
          "content": "\\ "
        },
        {
          "type": "TEXT",
          "content": "MB (using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthread_attr_setstacksize (3))"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "for the created threads:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"$\" \" ./a.out "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "s 0x100000 hola salut servus\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Thread 1: top of stack near 0xb7d723b8; argv_string=hola"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Thread 2: top of stack near 0xb7c713b8; argv_string=salut"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Thread 3: top of stack near 0xb7b703b8; argv_string=servus"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Joined with thread 1; returned value was HOLA"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Joined with thread 2; returned value was SALUT"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Joined with thread 3; returned value was SERVUS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Program source"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "ESCAPE",
          "content": "\\&"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#include <pthread.h>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#include <string.h>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#include <stdio.h>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#include <stdlib.h>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#include <unistd.h>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#include <errno.h>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#include <ctype.h>"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "#define handle_error_en(en, msg) "
        },
        {
          "type": "ESCAPE",
          "content": "\\\\"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        do { errno = en; perror(msg); exit(EXIT_FAILURE); } while (0)"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "#define handle_error(msg) "
        },
        {
          "type": "ESCAPE",
          "content": "\\\\"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        do { perror(msg); exit(EXIT_FAILURE); } while (0)"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "struct thread_info {    /* Used as argument to thread_start() */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    pthread_t thread_id;        /* ID returned by pthread_create() */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    int       thread_num;       /* Application"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "defined thread # */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    char     *argv_string;      /* From command"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "line argument */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "};"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "/* Thread start function: display address near top of our stack,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "   and return upper"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "cased copy of argv_string */"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "static void *"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "thread_start(void *arg)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "{"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    struct thread_info *tinfo = arg;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    char *uargv, *p;"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    printf(\"Thread %d: top of stack near %p; argv_string=%s"
        },
        {
          "type": "ESCAPE",
          "content": "\\\\"
        },
        {
          "type": "TEXT",
          "content": "n\","
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "            tinfo"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": ">thread_num, &p, tinfo"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": ">argv_string);"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    uargv = strdup(tinfo"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": ">argv_string);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    if (uargv == NULL)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        handle_error(\"strdup\");"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    for (p = uargv; *p != "
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "ESCAPE",
          "content": "\\\\"
        },
        {
          "type": "TEXT",
          "content": "0"
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": "; p++)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        *p = toupper(*p);"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    return uargv;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "}"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "int"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "main(int argc, char *argv[])"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "{"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    int s, tnum, opt, num_threads;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    struct thread_info *tinfo;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    pthread_attr_t attr;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    int stack_size;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    void *res;"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    /* The \""
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "s\" option specifies a stack size for our threads */"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    stack_size = "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "1;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    while ((opt = getopt(argc, argv, \"s:\")) != "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "1) {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        switch (opt) {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        case "
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": "s"
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": ":"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "            stack_size = strtoul(optarg, NULL, 0);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "            break;"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "        default:"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "            fprintf(stderr, \"Usage: %s ["
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "s stack-size] arg..."
        },
        {
          "type": "ESCAPE",
          "content": "\\\\"
        },
        {
          "type": "TEXT",
          "content": "n\","
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                    argv[0]);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "            exit(EXIT_FAILURE);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        }"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    }"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    num_threads = argc "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": " optind;"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    /* Initialize thread creation attributes */"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    s = pthread_attr_init(&attr);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    if (s != 0)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        handle_error_en(s, \"pthread_attr_init\");"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    if (stack_size > 0) {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        s = pthread_attr_setstacksize(&attr, stack_size);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        if (s != 0)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "            handle_error_en(s, \"pthread_attr_setstacksize\");"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    }"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    /* Allocate memory for pthread_create() arguments */"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    tinfo = calloc(num_threads, sizeof(struct thread_info));"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    if (tinfo == NULL)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        handle_error(\"calloc\");"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    /* Create one thread for each command"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "line argument */"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    for (tnum = 0; tnum < num_threads; tnum++) {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        tinfo[tnum].thread_num = tnum + 1;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        tinfo[tnum].argv_string = argv[optind + tnum];"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "        /* The pthread_create() call stores the thread ID into"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "           corresponding element of tinfo[] */"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "        s = pthread_create(&tinfo[tnum].thread_id, &attr,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                           &thread_start, &tinfo[tnum]);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        if (s != 0)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "            handle_error_en(s, \"pthread_create\");"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    }"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    /* Destroy the thread attributes object, since it is no"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "       longer needed */"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    s = pthread_attr_destroy(&attr);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    if (s != 0)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        handle_error_en(s, \"pthread_attr_destroy\");"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    /* Now join with each thread, and display its returned value */"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    for (tnum = 0; tnum < num_threads; tnum++) {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        s = pthread_join(tinfo[tnum].thread_id, &res);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        if (s != 0)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "            handle_error_en(s, \"pthread_join\");"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "        printf(\"Joined with thread %d; returned value was %s"
        },
        {
          "type": "ESCAPE",
          "content": "\\\\"
        },
        {
          "type": "TEXT",
          "content": "n\","
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                tinfo[tnum].thread_num, (char *) res);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        free(res);      /* Free memory allocated by thread */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    }"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    free(tinfo);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    exit(EXIT_SUCCESS);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "}"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " SEE ALSO"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".ad",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " l"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".nh",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " getrlimit (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthread_attr_init (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthread_cancel (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthread_detach (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthread_equal (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthread_exit (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthread_getattr_np (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthread_join (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthread_self (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthread_setattr_default_np (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthreads (7)"
        }
      ]
    ]
  }
]
