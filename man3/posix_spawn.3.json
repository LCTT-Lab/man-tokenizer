[
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Copyright (c) 2009 Bill O. Gallmeister (bgallmeister@gmail.com)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" and Copyright 2010 Michael Kerrisk <mtk.manpages@gmail.com>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" %%%LICENSE_START(VERBATIM)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Permission is granted to make and distribute verbatim copies of this"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" manual provided the copyright notice and this permission notice are"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" preserved on all copies."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Permission is granted to copy and distribute modified versions of this"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" manual under the conditions for verbatim copying, provided that the"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" entire resulting derived work is distributed under the terms of a"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" permission notice identical to this one."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Since the Linux kernel and libraries are constantly changing, this"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" manual page may be incorrect or out-of-date.  The author(s) assume no"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" responsibility for errors or omissions, or for damages resulting from"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" the use of the information contained herein.  The author(s) may not"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" have taken the same level of care in the production of this manual,"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" which is licensed free of charge, as they might when working"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" professionally."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Formatted or processed versions of this manual, if unaccompanied by"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" the source, must acknowledge the copyright and authors of this work."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" %%%LICENSE_END"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" References consulted:"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     Linux glibc source code"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     POSIX 1003.1-2004 documentation"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"     (http://www.opengroup.org/onlinepubs/009695399)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TH",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " POSIX_SPAWN 3 2017-09-15 \"GNU\" \"Linux Programmer's Manual\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " NAME"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "posix_spawn, posix_spawnp "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": " spawn a process"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " SYNOPSIS"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".nf",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " #include <spawn.h>"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".BI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"int posix_spawn(pid_t *\" pid \", const char *\" path ,"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".BI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"                const posix_spawn_file_actions_t *\" file_actions ,"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".BI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"                const posix_spawnattr_t *\" attrp ,"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".BI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"                char *const \" argv[] \", char *const \" envp[] );"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".BI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"int posix_spawnp(pid_t *\" pid \", const char *\" file ,"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".BI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"                const posix_spawn_file_actions_t *\" file_actions ,"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".BI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"                const posix_spawnattr_t *\" attrp ,"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".BI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"                char *const \" argv[] \", char *const \" envp[] );"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".fi",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " DESCRIPTION"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawn ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawnp ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "functions are used to create a new child process that executes"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "a specified file."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "These functions were specified by POSIX to provide a standardized method"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "of creating new processes on machines that lack the capability"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to support the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " fork (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "system call."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "These machines are generally small, embedded systems lacking MMU support."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawn ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawnp ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "functions provide the functionality of a combined"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " fork (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " exec (3),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with some optional housekeeping steps in the child process before the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " exec (3)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "These functions are not meant to replace the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " fork (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " execve (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "system calls."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "In fact, they provide only a subset of the functionality"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "that can be achieved by using the system calls."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The only difference between"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawn ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawnp ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is the manner in which they specify the file to be executed by"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the child process."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "With"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawn (),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the executable file is specified as a pathname"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(which can be absolute or relative)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "With"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawnp (),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the executable file is specified as a simple filename;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the system searches for this file in the list of directories specified by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " PATH"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(in the same way as for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " execvp (3))."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For the remainder of this page, the discussion is phrased in terms of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawn (),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with the understanding that"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawnp ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "differs only on the point just described."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The remaining arguments to these two functions are as follows:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " * 3"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pid"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "argument points to a buffer that is used to return the process ID"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "of the new child process."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " file_actions"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "argument points to a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"spawn file actions object\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "that specifies file-related actions to be performed in the child"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "between the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " fork (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " exec (3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "steps."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This object is initialized and populated before the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawn ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "call using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawn_file_actions_init (3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawn_file_actions_* ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "functions."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " attrp"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "argument points to an"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " attributes objects"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "that specifies various attributes of the created child process."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This object is initialized and populated before the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawn ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "call using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawnattr_init (3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawnattr_* ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "functions."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " argv"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " envp"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "arguments specify the argument list and environment for the program"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "that is executed in the child process, as for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " execve (2)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Below, the functions are described in terms of a three-step process: the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " fork()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "step, the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pre- exec ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "step (executed in the child),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " exec ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "step (executed in the child)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " fork() step"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawn ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "function commences by calling"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " fork (2),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or possibly"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " vfork (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(see below)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The PID of the new child process is placed in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " *pid ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawn ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "function then returns control to the parent process."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Subsequently, the parent can use one of the system calls described in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " wait (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to check the status of the child process."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the child fails in any of the housekeeping steps described below,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or fails to execute the desired file,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "it exits with a status of 127."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The child process is created using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " vfork (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "instead of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " fork (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "when either of the following is true:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " * 3"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " spawn-flags"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "element of the attributes object pointed to by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " attrp"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "contains the GNU-specific flag"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " POSIX_SPAWN_USEVFORK ;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " file_actions"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is NULL and the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " spawn-flags"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "element of the attributes object pointed to by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " attrp"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "does "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Inot"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P contain"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " POSIX_SPAWN_SETSIGMASK ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " POSIX_SPAWN_SETSIGDEF ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " POSIX_SPAWN_SETSCHEDPARAM ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " POSIX_SPAWN_SETSCHEDULER ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " POSIX_SPAWN_SETPGROUP ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " POSIX_SPAWN_RESETIDS ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "In other words,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " vfork (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is used if the caller requests it,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or if there is no cleanup expected in the child before it"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " exec (3)s"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the requested file."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " pre-exec() step: housekeeping"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "In between the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " fork (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " exec (3),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "a child process may need to perform a set of housekeeping actions."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawn ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawnp ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "functions support a small, well-defined set of system tasks that the child"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "process can accomplish before it executes the executable file."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "These operations are controlled by the attributes object pointed to by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " attrp"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and the file actions object pointed to by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " file_actions ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "In the child, processing is done in the following sequence:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " 1. 3"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Process attribute actions: signal mask, signal default handlers,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "scheduling algorithm and parameters,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "process group, and effective user and group IDs"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are changed as specified by the attributes object pointed to by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " attrp ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " 2."
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "File actions, as specified in the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " file_actions"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "argument,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are performed in the order that they were specified using calls to the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawn_file_actions_add* ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "functions."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " 3."
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "File descriptors with the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FD_CLOEXEC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "flag set are closed."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "All process attributes in the child,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "other than those affected by attributes specified in the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "object pointed to by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " attrp"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and the file actions in the object pointed to by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " file_actions ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "will be affected as though the child was created with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " fork (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and it executed the program with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " execve (2)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The process attributes actions are defined by the attributes object"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "pointed to by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " attrp ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " spawn-flags"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "attribute (set using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawnattr_setflags (3))"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "controls the general actions that occur,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and other attributes in the object specify values"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to be used during those actions."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The effects of the flags that may be specified in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " spawn-flags"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are as follows:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " 8"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " POSIX_SPAWN_SETSIGMASK"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Set the signal mask to the signal set specified in the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " spawn-sigmask"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "attribute"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" FIXME ."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" (see"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .BR posix_spawnattr_setsigmask (3))"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "of the object pointed to by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " attrp ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " POSIX_SPAWN_SETSIGMASK"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "flag is not set, then the child inherits the parent's signal mask."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " POSIX_SPAWN_SETSIGDEF"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Reset the disposition of all signals in the set specified in the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " spawn-sigdefault"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "attribute"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" FIXME ."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" (see"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .BR posix_spawnattr_setsigdefault (3))"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "of the object pointed to by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " attrp"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to the default."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For the treatment of the dispositions of signals not specified in the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " spawn-sigdefault"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "attribute, or the treatment when"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " POSIX_SPAWN_SETSIGDEF"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is not specified, see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " execve (2)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " POSIX_SPAWN_SETSCHEDPARAM"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" (POSIX_PRIORITY_SCHEDULING only)"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If this flag is set, and the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " POSIX_SPAWN_SETSCHEDULER"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "flag is not set, then set the scheduling parameters"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to the parameters specified in the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " spawn-schedparam"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "attribute"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" FIXME ."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" (see"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .BR posix_spawnattr_setschedparam (3))"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "of the object pointed to by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " attrp ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " POSIX_SPAWN_SETSCHEDULER"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Set the scheduling policy algorithm and parameters of the child,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "as follows:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RS",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " * 3"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The scheduling policy is set to the value specified in the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " spawn-schedpolicy"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "attribute"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" FIXME ."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" (see"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .BR posix_spawnattr_setpolicy (3))"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "of the object pointed to by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " attrp ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The scheduling parameters are set to the value specified in the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " spawn-schedparam"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "attribute"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" FIXME ."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" (see"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .BR posix_spawnattr_setschedparam (3))"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "of the object pointed to by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " attrp"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(but see BUGS)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " POSIX_SPAWN_SETSCHEDPARAM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " POSIX_SPAWN_SETSCHEDPOLICY"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "flags are not specified,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the child inherits the corresponding scheduling attributes from the parent."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".RE",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " POSIX_SPAWN_RESETIDS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If this flag is set,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "reset the effective UID and GID to the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "real UID and GID of the parent process."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If this flag is not set,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "then the child retains the effective UID and GID of the parent."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "In either case, if the set-user-ID and set-group-ID permission"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "bits are enabled on the executable file, their effect will override"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the setting of the effective UID and GID (se"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " execve (2))."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " POSIX_SPAWN_SETPGROUP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Set the process group to the value specified in the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " spawn-pgroup"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "attribute"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" FIXME ."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" (see"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .BR posix_spawnattr_setpgroup (3))"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "of the object pointed to by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " attrp ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " spawn-pgroup"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "attribute has the value 0,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the child's process group ID is made the same as its process ID."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " POSIX_SPAWN_SETPGROUP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "flag is not set, the child inherits the parent's process group ID."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " attrp"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is NULL, then the default behaviors described above for each flag apply."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" mtk: I think we probably don't want to say the following, since it"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\"      could lead people to do the wrong thing"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" The POSIX standard tells you to call"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" this function to de-initialize the attributes object pointed to by"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .I attrp"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" when you are done with it;"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" however, on Linux systems this operation is a no-op."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " file_actions"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "argument specifies a sequence of file operations"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "that are performed in the child process after"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the general processing described above, and before it performs the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " exec (3)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " file_actions"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is NULL, then no special action is taken, and standard"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " exec (3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "semantics apply--file descriptors open before the exec"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "remain open in the new process,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "except those for which the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " FD_CLOEXEC"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "flag has been set."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "File locks remain in place."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " file_actions"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is not NULL, then it contains an ordered set of requests to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " open (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " close (2),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " dup2 (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "files."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "These requests are added to the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " file_actions"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawn_file_actions_addopen (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawn_file_actions_addclose (3),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawn_file_actions_adddup2 (3)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The requested operations are performed in the order they were added to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " file_actions ."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" FIXME . I think the following is best placed in the"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" posix_spawn_file_actions_adddup2(3) page, and a similar statement is"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" also needed in posix_spawn_file_actions_addclose(3)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Note that you can specify file descriptors in"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .I posix_spawn_file_actions_adddup2 (3)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" which would not be usable if you called"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .BR dup2 (2)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" at that time--i.e., file descriptors that are opened or"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" closed by the earlier operations"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" added to"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .I file_actions ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "If any of the housekeeping actions fails"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(due to bogus values being passed or other reasons why signal handling,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "process scheduling, process group ID functions,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and file descriptor operations might fail),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the child process exits with exit value 127."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " exec() step"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Once the child has successfully forked and performed"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "all requested pre-exec steps,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the child runs the requested executable."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The child process takes its environment from the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " envp"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "argument, which is interpreted as if it had been passed to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " execve (2)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The arguments to the created process come from the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " argv"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "argument, which is processed as for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " execve (2)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " RETURN VALUE"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Upon successful completion,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawn ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawnp ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "place the PID of the child process in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pid ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and return 0."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If there is an error before or during the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " fork (2),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "then no child is created,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the contents of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " *pid"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are unspecified,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and these functions return an error number as described below."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Even when these functions return a success status,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the child process may still fail for a plethora of reasons related to its"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "pre-"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Bexec"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "R() initialization."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "In addition, the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " exec (3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "may fail."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "In all of these cases, the child process will exit with the exit value of 127."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " ERRORS"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawn ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawnp ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "functions fail only in the case where the underlying"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " fork (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " vfork (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "call fails;  in these cases, these functions return an error number,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "which will be one of the errors described for"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " fork (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "or"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " vfork (2)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "In addition, these functions fail if:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ENOSYS"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Function not supported on this system."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " VERSIONS"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawn ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawnp ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "functions are available since glibc 2.2."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " CONFORMING TO"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "POSIX.1-2001, POSIX.1-2008."
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" FIXME . This piece belongs in spawnattr_setflags(3)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" The"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .B POSIX_SPAWN_USEVFORK"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" flag is a GNU extension; the"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .B _GNU_SOURCE"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" feature test macro must be defined (before including any header files)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" to obtain the definition of this constant."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " NOTES"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The housekeeping activities in the child are controlled by"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the objects pointed to by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " attrp"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(for non-file actions) and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " file_actions"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "In POSIX parlance, the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawnattr_t"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawn_file_actions_t"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "data types are referred to as objects,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and their elements are not specified by name."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Portable programs should initialize these objects using"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "only the POSIX-specified functions."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(In other words,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "although these objects may be implemented as structures containing fields,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "portable programs must avoid dependence on such implementation details.)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "According to POSIX, it unspecified whether fork handlers established with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthread_atfork (3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are called when"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawn ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is invoked."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "On glibc,"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Tested on glibc 2.12"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "fork handlers are called only if the child is created using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " fork (2)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "There is no \"posix_fspawn\" function (i.e., a function that is to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawn ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "as"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " fexecve (3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " execve (2))."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "However, this functionality can be obtained by specifying the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " path"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "argument as one of the files in the caller's"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc/self/fd"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "directory."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " BUGS"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "POSIX.1 says that when"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " POSIX_SPAWN_SETSCHEDULER"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is specified in"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " spawn-flags ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "then the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " POSIX_SPAWN_SETSCHEDPARAM"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(if present) is ignored."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "However, before glibc 2.14, calls to"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawn ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "failed with an error if"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" http://sourceware.org/bugzilla/show_bug.cgi?id=12052"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " POSIX_SPAWN_SETSCHEDULER"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "was specified without also specifying"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " POSIX_SPAWN_SETSCHEDPARAM ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " EXAMPLE"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The program below demonstrates the use of various functions in the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "POSIX spawn API."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The program accepts command-line attributes that can be used"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to create file actions and attributes objects."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The remaining command-line arguments are used as the executable name"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and command-line arguments of the program that is executed in the child."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "In the first run, the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " date (1)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "command is executed in the child, and the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawn ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "call employs no file actions or attributes objects."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "$ "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "B./a.out date"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "PID of child: 7634"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Tue Feb  1 19:47:50 CEST 2011"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Child status: exited, status=0"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "In the next run, the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "c"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "command-line option is used to create a file actions object that closes"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "standard output in the child."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Consequently,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " date (1)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "fails when trying to perform output and exits with a status of 1."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "$ "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "B./a.out -c date"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "PID of child: 7636"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "date: write error: Bad file descriptor"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Child status: exited, status=1"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "In the next run, the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "s"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "command-line option is used to create an attributes object that"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "specifies that all (blockable) signals in the child should be blocked."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Consequently, trying to kill child with the default signal sent by"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " kill (1)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(i.e.,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGTERM )"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "fails, because that signal is blocked."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Therefore, to kill the child,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SIGKILL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is necessary"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".RB",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ( SIGKILL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "can't be blocked)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "$ "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "B./a.out -s sleep 60 &"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "[1] 7637"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "$ PID of child: 7638"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "$ "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Bkill 7638"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "$ "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Bkill -KILL 7638"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "$ Child status: killed by signal 9"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "[1]+  Done                    ./a.out -s sleep 60"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "When we try to execute a nonexistent command in the child, the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " exec (3)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "fails and the child exits with a status of 127."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "$ "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "B./a.out xxxxx"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "PID of child: 10190"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Child status: exited, status=127"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SS",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " Program source"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "ESCAPE",
          "content": "\\&"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#include <spawn.h>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#include <stdio.h>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#include <unistd.h>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#include <stdlib.h>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#include <string.h>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#include <wait.h>"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "#include <errno.h>"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "#define errExit(msg)    do { perror(msg); "
        },
        {
          "type": "ESCAPE",
          "content": "\\\\"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                             exit(EXIT_FAILURE); } while (0)"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "#define errExitEN(en, msg) "
        },
        {
          "type": "ESCAPE",
          "content": "\\\\"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                        do { errno = en; perror(msg); "
        },
        {
          "type": "ESCAPE",
          "content": "\\\\"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                             exit(EXIT_FAILURE); } while (0)"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "char **environ;"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "int"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "main(int argc, char *argv[])"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "{"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    pid_t child_pid;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    int s, opt, status;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    sigset_t mask;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    posix_spawnattr_t attr;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    posix_spawnattr_t *attrp;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    posix_spawn_file_actions_t file_actions;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    posix_spawn_file_actions_t *file_actionsp;"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    /* Parse command"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "line options, which can be used to specify an"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "       attributes object and file actions object for the child. */"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    attrp = NULL;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    file_actionsp = NULL;"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    while ((opt = getopt(argc, argv, \"sc\")) != "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "1) {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        switch (opt) {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        case "
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": "c"
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": ":       /* "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "c: close standard output in child */"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "            /* Create a file actions object and add a \"close\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "               action to it */"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "            s = posix_spawn_file_actions_init(&file_actions);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "            if (s != 0)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                errExitEN(s, \"posix_spawn_file_actions_init\");"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "            s = posix_spawn_file_actions_addclose(&file_actions,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                                                  STDOUT_FILENO);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "            if (s != 0)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                errExitEN(s, \"posix_spawn_file_actions_addclose\");"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "            file_actionsp = &file_actions;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "            break;"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "        case "
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": "s"
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": ":       /* "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "s: block all signals in child */"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "            /* Create an attributes object and add a \"set signal mask\""
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "               action to it */"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "            s = posix_spawnattr_init(&attr);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "            if (s != 0)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                errExitEN(s, \"posix_spawnattr_init\");"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "            s = posix_spawnattr_setflags(&attr, POSIX_SPAWN_SETSIGMASK);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "            if (s != 0)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                errExitEN(s, \"posix_spawnattr_setflags\");"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "            sigfillset(&mask);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "            s = posix_spawnattr_setsigmask(&attr, &mask);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "            if (s != 0)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                errExitEN(s, \"posix_spawnattr_setsigmask\");"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "            attrp = &attr;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "            break;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        }"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    }"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    /* Spawn the child. The name of the program to execute and the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "       command"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "line arguments are taken from the command"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "line arguments"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "       of this program. The environment of the program execed in the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "       child is made the same as the parent"
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": "s environment. */"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    s = posix_spawnp(&child_pid, argv[optind], file_actionsp, attrp,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                     &argv[optind], environ);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    if (s != 0)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        errExitEN(s, \"posix_spawn\");"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    /* Destroy any objects that we created earlier */"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    if (attrp != NULL) {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        s = posix_spawnattr_destroy(attrp);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        if (s != 0)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "            errExitEN(s, \"posix_spawnattr_destroy\");"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    }"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    if (file_actionsp != NULL) {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        s = posix_spawn_file_actions_destroy(file_actionsp);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        if (s != 0)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "            errExitEN(s, \"posix_spawn_file_actions_destroy\");"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    }"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    printf(\"PID of child: %ld"
        },
        {
          "type": "ESCAPE",
          "content": "\\\\"
        },
        {
          "type": "TEXT",
          "content": "n\", (long) child_pid);"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    /* Monitor status of the child until it terminates */"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    do {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        s = waitpid(child_pid, &status, WUNTRACED | WCONTINUED);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        if (s == "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": "1)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "            errExit(\"waitpid\");"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "        printf(\"Child status: \");"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        if (WIFEXITED(status)) {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "            printf(\"exited, status=%d"
        },
        {
          "type": "ESCAPE",
          "content": "\\\\"
        },
        {
          "type": "TEXT",
          "content": "n\", WEXITSTATUS(status));"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        } else if (WIFSIGNALED(status)) {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "            printf(\"killed by signal %d"
        },
        {
          "type": "ESCAPE",
          "content": "\\\\"
        },
        {
          "type": "TEXT",
          "content": "n\", WTERMSIG(status));"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        } else if (WIFSTOPPED(status)) {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "            printf(\"stopped by signal %d"
        },
        {
          "type": "ESCAPE",
          "content": "\\\\"
        },
        {
          "type": "TEXT",
          "content": "n\", WSTOPSIG(status));"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        } else if (WIFCONTINUED(status)) {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "            printf(\"continued"
        },
        {
          "type": "ESCAPE",
          "content": "\\\\"
        },
        {
          "type": "TEXT",
          "content": "n\");"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        }"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    } while (!WIFEXITED(status) && !WIFSIGNALED(status));"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "    exit(EXIT_SUCCESS);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "}"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " SEE ALSO"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".nh",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "COMMENT_INLINE",
          "content": "\\\" Disable hyphenation"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".ad",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " l"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " close (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " dup2 (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " execl (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " execlp (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " fork (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " open (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sched_setparam (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sched_setscheduler (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " setpgid (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " setuid (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sigaction (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sigprocmask (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawn_file_actions_addclose (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawn_file_actions_adddup2 (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawn_file_actions_addopen (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawn_file_actions_destroy (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawn_file_actions_init (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawnattr_destroy (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawnattr_getflags (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawnattr_getpgroup (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawnattr_getschedparam (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawnattr_getschedpolicy (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawnattr_getsigdefault (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawnattr_getsigmask (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawnattr_init (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawnattr_setflags (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawnattr_setpgroup (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawnattr_setschedparam (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawnattr_setschedpolicy (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawnattr_setsigdefault (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " posix_spawnattr_setsigmask (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " pthread_atfork (3),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " <spawn.h>,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Base Definitions volume of POSIX.1-2001,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " http://www.opengroup.org/unix/online.html"
        }
      ]
    ]
  }
]
