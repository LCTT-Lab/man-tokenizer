[
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" This man page is Copyright (C) 1999 Andi Kleen <ak@muc.de>."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" %%%LICENSE_START(VERBATIM_ONE_PARA)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Permission is granted to distribute possibly modified copies"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" of this page provided the header is included verbatim,"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" and in case of nontrivial modification author and date"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" of the modification is added to the header."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" %%%LICENSE_END"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" $Id: cmsg.3,v 1.8 2000/12/20 18:10:31 ak Exp $"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TH",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CMSG 3 2017-09-15 \"Linux\" \"Linux Programmer's Manual\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " NAME"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "CMSG_ALIGN, CMSG_SPACE, CMSG_NXTHDR, CMSG_FIRSTHDR "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": " access ancillary data"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " SYNOPSIS"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".nf",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " #include <sys/socket.h>"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".BI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"struct cmsghdr *CMSG_FIRSTHDR(struct msghdr *\" msgh );"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".BI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"struct cmsghdr *CMSG_NXTHDR(struct msghdr *\" msgh \" ,"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"                            struct cmsghdr *\" cmsg );"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".BI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"size_t CMSG_ALIGN(size_t \" length );"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".BI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"size_t CMSG_SPACE(size_t \" length );"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".BI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"size_t CMSG_LEN(size_t \" length );"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".BI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"unsigned char *CMSG_DATA(struct cmsghdr *\" cmsg );"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".fi",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " DESCRIPTION"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "These macros are used to create and access control messages (also called"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "ancillary data) that are not a part of the socket payload."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This control information may"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "include the interface the packet was received on, various rarely used header"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "fields, an extended error description, a set of file descriptors, or UNIX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "credentials."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For instance, control messages can be used to send"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "additional header fields such as IP options."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Ancillary data is sent by calling"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sendmsg (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and received by calling"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " recvmsg (2)."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "See their manual pages for more information."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "Ancillary data is a sequence of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " cmsghdr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "structures with appended data."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "See the specific protocol man pages for the available control message types."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The maximum ancillary buffer size allowed per socket can be set using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " /proc/sys/net/core/optmem_max ;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " socket (7)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " cmsghdr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "structure is defined as follows:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "struct cmsghdr {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    size_t cmsg_len;    /* Data byte count, including header"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                           (type is socklen_t in POSIX) */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    int    cmsg_level;  /* Originating protocol */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    int    cmsg_type;   /* Protocol-specific type */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "/* followed by"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "   unsigned char cmsg_data[]; */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "};"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The sequence of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " cmsghdr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "structures should never be accessed directly."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Instead, use only the following macros:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " * 3"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CMSG_FIRSTHDR ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "returns a pointer to the first"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " cmsghdr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in the ancillary"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "data buffer associated with the passed"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " msghdr ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "It returns NULL if there isn't enough space for a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " cmsghdr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "in the buffer."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CMSG_NXTHDR ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "returns the next valid"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " cmsghdr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "after the passed"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " cmsghdr ."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "It returns NULL when there isn't enough space left in the buffer."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "When initializing a buffer that will contain a series of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " cmsghdr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "structures (e.g., to be sent with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sendmsg (2)),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "that buffer should first be zero-initialized"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to ensure the correct operation of"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CMSG_NXTHDR ()."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CMSG_ALIGN (),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "given a length, returns it including the required alignment."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This is a"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "constant expression."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CMSG_SPACE ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "returns the number of bytes an ancillary element with payload of the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "passed data length occupies."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This is a constant expression."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CMSG_DATA ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "returns a pointer to the data portion of a"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " cmsghdr ."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " *"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CMSG_LEN ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "returns the value to store in the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " cmsg_len"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "member of the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " cmsghdr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "structure, taking into account any necessary"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "alignment."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "It takes the data length as an argument."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This is a constant"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "expression."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "To create ancillary data, first initialize the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " msg_controllen"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "member of the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " msghdr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "with the length of the control message buffer."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Use"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CMSG_FIRSTHDR ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "on the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " msghdr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to get the first control message and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CMSG_NXTHDR ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to get all subsequent ones."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "In each control message, initialize"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " cmsg_len"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "(with"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CMSG_LEN ()),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the other"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " cmsghdr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "header fields, and the data portion using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CMSG_DATA ()."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Finally, the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " msg_controllen"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "field of the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".I",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " msghdr"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "should be set to the sum of the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CMSG_SPACE ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "of the length of"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "all control messages in the buffer."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "For more information on the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " msghdr ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "see"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " recvmsg (2)."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " CONFORMING TO"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "This ancillary data model conforms to the POSIX.1g draft, 4.4BSD-Lite,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the IPv6 advanced API described in RFC"
        },
        {
          "type": "ESCAPE",
          "content": "\\ "
        },
        {
          "type": "TEXT",
          "content": "2292 and SUSv2."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CMSG_ALIGN ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is a Linux extension."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " NOTES"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "For portability, ancillary data should be accessed using only the macros"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "described here."
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CMSG_ALIGN ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "is a Linux extension and should not be used in portable programs."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "In Linux,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CMSG_LEN (),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CMSG_DATA (),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " CMSG_ALIGN ()"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "are constant expressions (assuming their argument is constant),"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "meaning that these values can be used to declare the size of global variables."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "This may not be portable, however."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " EXAMPLE"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "This code looks for the"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".B",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " IP_TTL"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "option in a received ancillary buffer:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "struct msghdr msgh;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "struct cmsghdr *cmsg;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "int *ttlptr;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "int received_ttl;"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "/* Receive auxiliary data in msgh */"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "for (cmsg = CMSG_FIRSTHDR(&msgh); cmsg != NULL;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        cmsg = CMSG_NXTHDR(&msgh, cmsg)) {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    if (cmsg"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": ">cmsg_level == IPPROTO_IP"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "            && cmsg"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": ">cmsg_type == IP_TTL) {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        ttlptr = (int *) CMSG_DATA(cmsg);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        received_ttl = *ttlptr;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "        break;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    }"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "}"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "if (cmsg == NULL) {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    /* Error: IP_TTL not enabled or small buffer or I/O error */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "}"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The code below passes an array of file descriptors over a"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "UNIX domain socket using"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " SCM_RIGHTS :"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " +4n"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": ".EX"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "struct msghdr msg = { 0 };"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "struct cmsghdr *cmsg;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "int myfds[NUM_FD];  /* Contains the file descriptors to pass */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "char iobuf[1];"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "struct iovec io = {"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    .iov_base = iobuf,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    .iov_len = sizeof(iobuf)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "};"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "union {         /* Ancillary data buffer, wrapped in a union"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "                   in order to ensure it is suitably aligned */"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    char buf[CMSG_SPACE(sizeof(myfds))];"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "    struct cmsghdr align;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "} u;"
        }
      ]
    ]
  },
  {
    "type": "empty",
    "lines": [
      [

      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "msg.msg_iov = &io;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "msg.msg_iovlen = 1;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "msg.msg_control = u.buf;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "msg.msg_controllen = sizeof(u.buf);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "cmsg = CMSG_FIRSTHDR(&msg);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "cmsg"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": ">cmsg_level = SOL_SOCKET;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "cmsg"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": ">cmsg_type = SCM_RIGHTS;"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "cmsg"
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": ">cmsg_len = CMSG_LEN(sizeof(int) * NUM_FD);"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "memcpy(CMSG_DATA(cmsg), myfds, NUM_FD * sizeof(int));"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": ".EE"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".in",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " SEE ALSO"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " recvmsg (2),"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " sendmsg (2)"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "RFC"
        },
        {
          "type": "ESCAPE",
          "content": "\\ "
        },
        {
          "type": "TEXT",
          "content": "2292"
        }
      ]
    ]
  }
]
