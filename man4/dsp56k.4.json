[
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": "'\\\" t"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Copyright (c) 2000 lars brinkhoff <lars@nocrew.org>"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" %%%LICENSE_START(GPLv2+_DOC_FULL)"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" This is free documentation; you can redistribute it and/or"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" modify it under the terms of the GNU General Public License as"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" published by the Free Software Foundation; either version 2 of"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" the License, or (at your option) any later version."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" The GNU General Public License's references to \"object code\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" and \"executables\" are to be interpreted as the output of any"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" document formatting or typesetting system, including"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" intermediate and printed output."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" This manual is distributed in the hope that it will be useful,"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" but WITHOUT ANY WARRANTY; without even the implied warranty of"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" GNU General Public License for more details."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" You should have received a copy of the GNU General Public"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" License along with this manual; if not, see"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" <http://www.gnu.org/licenses/>."
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" %%%LICENSE_END"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Modified, Thu Jan 27 19:16:19 CET 2000, lars@nocrew.org"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".TH",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " DSP56K 4 2017-09-15 \"Linux\" \"Linux Programmer's Manual\""
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " NAME"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "dsp56k "
        },
        {
          "type": "ESCAPE",
          "content": "\\-"
        },
        {
          "type": "TEXT",
          "content": " DSP56001 interface device"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " SYNOPSIS"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".nf",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "#include <asm/dsp56k.h>"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".BI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"ssize_t read(int \" fd \", void *\" data \", size_t \" length );"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".BI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"ssize_t write(int \" fd \", void *\" data \", size_t \" length );"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".BI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"int ioctl(int \" fd \", DSP56K_UPLOAD, struct dsp56k_upload *\" program );"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".BI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"int ioctl(int \" fd \", DSP56K_SET_TX_WSIZE, int \" wsize );"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".BI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"int ioctl(int \" fd \", DSP56K_SET_RX_WSIZE, int \" wsize );"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".BI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"int ioctl(int \" fd \", DSP56K_HOST_FLAGS, struct dsp56k_host_flags *\" flags );"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".BI",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " \"int ioctl(int \" fd \", DSP56K_HOST_CMD, int \" cmd );"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".fi",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " CONFIGURATION"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The dsp56k device is a character device with major number 55 and minor"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "number 0."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " DESCRIPTION"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The Motorola DSP56001 is a fully programmable 24-bit digital signal"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "processor found in Atari Falcon030-compatible computers."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Idsp56k"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P special file is used to control the DSP56001, and"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to send and receive data using the bidirectional handshaked host"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "port."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "To send a data stream to the signal processor, use"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " write (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "device, and"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " read (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to receive processed data."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The data can be sent or"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "received in 8, 16, 24, or 32-bit quantities on the host side, but will"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "always be seen as 24-bit quantities in the DSP56001."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".PP",
          "translatable": false
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "The following"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ioctl (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "calls are used to control the"
        }
      ],
      [
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Idsp56k"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P device:"
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "BDSP56K_UPLOAD"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "resets the DSP56001 and uploads a program."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The third"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ioctl (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "argument must be a pointer to a "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Istruct dsp56k_binary"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P with members"
        }
      ],
      [
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Ibin"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P pointing to a DSP56001 binary program, and "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Ilen"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P set to"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the length of the program, counted in 24-bit words."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "BDSP56K_SET_TX_WSIZE"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "sets the transmit word size."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Allowed values are in the range 1 to 4,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and is the number of bytes that will be sent at a time to the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "DSP56001."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "These data quantities will either be padded with zero"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "bytes, or truncated to fit the native 24-bit data format of the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "DSP56001."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "BDSP56K_SET_RX_WSIZE"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "sets the receive word size."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Allowed values are in the range 1 to 4,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "and is the number of bytes that will be received at a time from the"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "DSP56001."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "These data quantities will either truncated, or padded with"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "a null byte ("
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "ESCAPE",
          "content": "\\\\"
        },
        {
          "type": "TEXT",
          "content": "0"
        },
        {
          "type": "ESCAPE",
          "content": "\\(aq"
        },
        {
          "type": "TEXT",
          "content": ") to fit the native 24-bit data format of the DSP56001."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "BDSP56K_HOST_FLAGS"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "read and write the host flags."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The host flags are four"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "general-purpose bits that can be read by both the hosting computer and"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the DSP56001."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Bits 0 and 1 can be written by the host, and bits 2 and"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "3 can be written by the DSP56001."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "To access the host flags, the third"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".BR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ioctl (2)"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "argument must be a pointer"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to a "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Istruct dsp56k_host_flags"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "If bit 0 or 1 is set in the"
        }
      ],
      [
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Idir"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P member, the corresponding bit in "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Iout"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P will be written"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "to the host flags."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "The state of all host flags will be returned in"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "the lower four bits of the "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "Istatus"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P member."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".IP",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " "
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "BDSP56K_HOST_CMD"
        },
        {
          "type": "ESCAPE",
          "content": "\\f"
        },
        {
          "type": "TEXT",
          "content": "P"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "sends a host command."
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "Allowed values are in the range 0 to 31, and is a"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "user-defined command handled by the program running in the DSP56001."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " FILES"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "TEXT",
          "content": "/dev/dsp56k"
        }
      ]
    ]
  },
  {
    "type": "comment",
    "lines": [
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" .SH AUTHORS"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Fredrik Noring <noring@nocrew.org>, lars brinkhoff <lars@nocrew.org>,"
        }
      ],
      [
        {
          "type": "COMMENT_BLOCK",
          "content": ".\\\" Tomas Berndtsson <tomas@nocrew.org>."
        }
      ]
    ]
  },
  {
    "type": "macro",
    "lines": [
      [
        {
          "type": "MACRO_BLOCK",
          "content": ".SH",
          "translatable": true
        },
        {
          "type": "TEXT",
          "content": " SEE ALSO"
        }
      ]
    ]
  },
  {
    "type": "content",
    "lines": [
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " linux/include/asm-m68k/dsp56k.h ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".IR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " linux/drivers/char/dsp56k.c ,"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".UR",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " http://dsp56k.nocrew.org/"
        }
      ],
      [
        {
          "type": "MACRO_INLINE",
          "content": ".UE",
          "translatable": false
        },
        {
          "type": "TEXT",
          "content": " ,"
        }
      ],
      [
        {
          "type": "TEXT",
          "content": "DSP56000/DSP56001 Digital Signal Processor User's Manual"
        }
      ]
    ]
  }
]
